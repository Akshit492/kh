const tf=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function t(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerpolicy&&(a.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?a.credentials="include":i.crossorigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(i){if(i.ep)return;i.ep=!0;const a=t(i);fetch(i.href,a)}};tf();function Rn(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function Xu(r,e){r.prototype=Object.create(e.prototype),r.prototype.constructor=r,r.__proto__=e}/*!
 * GSAP 3.10.4
 * https://greensock.com
 *
 * @license Copyright 2008-2022, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var Vt={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},va={duration:.5,overwrite:!1,delay:0},dl,Xt=1e8,Ze=1/Xt,zo=Math.PI*2,nf=zo/4,af=0,Ju=Math.sqrt,rf=Math.cos,sf=Math.sin,gt=function(e){return typeof e=="string"},mt=function(e){return typeof e=="function"},In=function(e){return typeof e=="number"},fl=function(e){return typeof e=="undefined"},Fn=function(e){return typeof e=="object"},Bt=function(e){return e!==!1},Yu=function(){return typeof window!="undefined"},Er=function(e){return mt(e)||gt(e)},$u=typeof ArrayBuffer=="function"&&ArrayBuffer.isView||function(){},Nt=Array.isArray,ko=/(?:-?\.?\d|\.)+/gi,Qu=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,ra=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,Hs=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,eh=/[+-]=-?[.\d]+/,th=/[^,'"\[\]\s]+/gi,of=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,tt,yn,Oo,pl,jt={},us={},nh,ih=function(e){return(us=Ni(e,jt))&&un},ml=function(e,t){return console.warn("Invalid property",e,"set to",t,"Missing plugin? gsap.registerPlugin()")},hs=function(e,t){return!t&&console.warn(e)},ah=function(e,t){return e&&(jt[e]=t)&&us&&(us[e]=t)||jt},ar=function(){return 0},gl={},$n=[],Go={},rh,Gt={},Vs={},ec=30,os=[],_l="",yl=function(e){var t=e[0],n,i;if(Fn(t)||mt(t)||(e=[e]),!(n=(t._gsap||{}).harness)){for(i=os.length;i--&&!os[i].targetTest(t););n=os[i]}for(i=e.length;i--;)e[i]&&(e[i]._gsap||(e[i]._gsap=new Th(e[i],n)))||e.splice(i,1);return e},Ci=function(e){return e._gsap||yl(Jt(e))[0]._gsap},sh=function(e,t,n){return(n=e[t])&&mt(n)?e[t]():fl(n)&&e.getAttribute&&e.getAttribute(t)||n},It=function(e,t){return(e=e.split(",")).forEach(t)||e},rt=function(e){return Math.round(e*1e5)/1e5||0},Mt=function(e){return Math.round(e*1e7)/1e7||0},da=function(e,t){var n=t.charAt(0),i=parseFloat(t.substr(2));return e=parseFloat(e),n==="+"?e+i:n==="-"?e-i:n==="*"?e*i:e/i},lf=function(e,t){for(var n=t.length,i=0;e.indexOf(t[i])<0&&++i<n;);return i<n},ds=function(){var e=$n.length,t=$n.slice(0),n,i;for(Go={},$n.length=0,n=0;n<e;n++)i=t[n],i&&i._lazy&&(i.render(i._lazy[0],i._lazy[1],!0)._lazy=0)},oh=function(e,t,n,i){$n.length&&ds(),e.render(t,n,i),$n.length&&ds()},lh=function(e){var t=parseFloat(e);return(t||t===0)&&(e+"").match(th).length<2?t:gt(e)?e.trim():e},ch=function(e){return e},Qt=function(e,t){for(var n in t)n in e||(e[n]=t[n]);return e},cf=function(e){return function(t,n){for(var i in n)i in t||i==="duration"&&e||i==="ease"||(t[i]=n[i])}},Ni=function(e,t){for(var n in t)e[n]=t[n];return e},tc=function r(e,t){for(var n in t)n!=="__proto__"&&n!=="constructor"&&n!=="prototype"&&(e[n]=Fn(t[n])?r(e[n]||(e[n]={}),t[n]):t[n]);return e},fs=function(e,t){var n={},i;for(i in e)i in t||(n[i]=e[i]);return n},Qa=function(e){var t=e.parent||tt,n=e.keyframes?cf(Nt(e.keyframes)):Qt;if(Bt(e.inherit))for(;t;)n(e,t.vars.defaults),t=t.parent||t._dp;return e},uf=function(e,t){for(var n=e.length,i=n===t.length;i&&n--&&e[n]===t[n];);return n<0},uh=function(e,t,n,i,a){n===void 0&&(n="_first"),i===void 0&&(i="_last");var s=e[i],o;if(a)for(o=t[a];s&&s[a]>o;)s=s._prev;return s?(t._next=s._next,s._next=t):(t._next=e[n],e[n]=t),t._next?t._next._prev=t:e[i]=t,t._prev=s,t.parent=t._dp=e,t},Ms=function(e,t,n,i){n===void 0&&(n="_first"),i===void 0&&(i="_last");var a=t._prev,s=t._next;a?a._next=s:e[n]===t&&(e[n]=s),s?s._prev=a:e[i]===t&&(e[i]=a),t._next=t._prev=t.parent=null},Pn=function(e,t){e.parent&&(!t||e.parent.autoRemoveChildren)&&e.parent.remove(e),e._act=0},Mi=function(e,t){if(e&&(!t||t._end>e._dur||t._start<0))for(var n=e;n;)n._dirty=1,n=n.parent;return e},hf=function(e){for(var t=e.parent;t&&t.parent;)t._dirty=1,t.totalDuration(),t=t.parent;return e},df=function r(e){return!e||e._ts&&r(e.parent)},nc=function(e){return e._repeat?ba(e._tTime,e=e.duration()+e._rDelay)*e:0},ba=function(e,t){var n=Math.floor(e/=t);return e&&n===e?n-1:n},ps=function(e,t){return(e-t._start)*t._ts+(t._ts>=0?0:t._dirty?t.totalDuration():t._tDur)},ws=function(e){return e._end=Mt(e._start+(e._tDur/Math.abs(e._ts||e._rts||Ze)||0))},vl=function(e,t){var n=e._dp;return n&&n.smoothChildTiming&&e._ts&&(e._start=Mt(n._time-(e._ts>0?t/e._ts:((e._dirty?e.totalDuration():e._tDur)-t)/-e._ts)),ws(e),n._dirty||Mi(n,e)),e},hh=function(e,t){var n;if((t._time||t._initted&&!t._dur)&&(n=ps(e.rawTime(),t),(!t._dur||xr(0,t.totalDuration(),n)-t._tTime>Ze)&&t.render(n,!0)),Mi(e,t)._dp&&e._initted&&e._time>=e._dur&&e._ts){if(e._dur<e.duration())for(n=e;n._dp;)n.rawTime()>=0&&n.totalTime(n._tTime),n=n._dp;e._zTime=-Ze}},bn=function(e,t,n,i){return t.parent&&Pn(t),t._start=Mt((In(n)?n:n||e!==tt?Zt(e,n,t):e._time)+t._delay),t._end=Mt(t._start+(t.totalDuration()/Math.abs(t.timeScale())||0)),uh(e,t,"_first","_last",e._sort?"_start":0),Ho(t)||(e._recent=t),i||hh(e,t),e},dh=function(e,t){return(jt.ScrollTrigger||ml("scrollTrigger",t))&&jt.ScrollTrigger.create(t,e)},fh=function(e,t,n,i){if(xl(e,t),!e._initted)return 1;if(!n&&e._pt&&(e._dur&&e.vars.lazy!==!1||!e._dur&&e.vars.lazy)&&rh!==Ht.frame)return $n.push(e),e._lazy=[t,i],1},ff=function r(e){var t=e.parent;return t&&t._ts&&t._initted&&!t._lock&&(t.rawTime()<0||r(t))},Ho=function(e){var t=e.data;return t==="isFromStart"||t==="isStart"},pf=function(e,t,n,i){var a=e.ratio,s=t<0||!t&&(!e._start&&ff(e)&&!(!e._initted&&Ho(e))||(e._ts<0||e._dp._ts<0)&&!Ho(e))?0:1,o=e._rDelay,c=0,l,u,h;if(o&&e._repeat&&(c=xr(0,e._tDur,t),u=ba(c,o),e._yoyo&&u&1&&(s=1-s),u!==ba(e._tTime,o)&&(a=1-s,e.vars.repeatRefresh&&e._initted&&e.invalidate())),s!==a||i||e._zTime===Ze||!t&&e._zTime){if(!e._initted&&fh(e,t,i,n))return;for(h=e._zTime,e._zTime=t||(n?Ze:0),n||(n=t&&!h),e.ratio=s,e._from&&(s=1-s),e._time=0,e._tTime=c,l=e._pt;l;)l.r(s,l.d),l=l._next;e._startAt&&t<0&&e._startAt.render(t,!0,!0),e._onUpdate&&!n&&Yt(e,"onUpdate"),c&&e._repeat&&!n&&e.parent&&Yt(e,"onRepeat"),(t>=e._tDur||t<0)&&e.ratio===s&&(s&&Pn(e,1),n||(Yt(e,s?"onComplete":"onReverseComplete",!0),e._prom&&e._prom()))}else e._zTime||(e._zTime=t)},mf=function(e,t,n){var i;if(n>t)for(i=e._first;i&&i._start<=n;){if(i.data==="isPause"&&i._start>t)return i;i=i._next}else for(i=e._last;i&&i._start>=n;){if(i.data==="isPause"&&i._start<t)return i;i=i._prev}},xa=function(e,t,n,i){var a=e._repeat,s=Mt(t)||0,o=e._tTime/e._tDur;return o&&!i&&(e._time*=s/e._dur),e._dur=s,e._tDur=a?a<0?1e10:Mt(s*(a+1)+e._rDelay*a):s,o>0&&!i?vl(e,e._tTime=e._tDur*o):e.parent&&ws(e),n||Mi(e.parent,e),e},ic=function(e){return e instanceof Dt?Mi(e):xa(e,e._dur)},gf={_start:0,endTime:ar,totalDuration:ar},Zt=function r(e,t,n){var i=e.labels,a=e._recent||gf,s=e.duration()>=Xt?a.endTime(!1):e._dur,o,c,l;return gt(t)&&(isNaN(t)||t in i)?(c=t.charAt(0),l=t.substr(-1)==="%",o=t.indexOf("="),c==="<"||c===">"?(o>=0&&(t=t.replace(/=/,"")),(c==="<"?a._start:a.endTime(a._repeat>=0))+(parseFloat(t.substr(1))||0)*(l?(o<0?a:n).totalDuration()/100:1)):o<0?(t in i||(i[t]=s),i[t]):(c=parseFloat(t.charAt(o-1)+t.substr(o+1)),l&&n&&(c=c/100*(Nt(n)?n[0]:n).totalDuration()),o>1?r(e,t.substr(0,o-1),n)+c:s+c)):t==null?s:+t},er=function(e,t,n){var i=In(t[1]),a=(i?2:1)+(e<2?0:1),s=t[a],o,c;if(i&&(s.duration=t[1]),s.parent=n,e){for(o=s,c=n;c&&!("immediateRender"in o);)o=c.vars.defaults||{},c=Bt(c.vars.inherit)&&c.parent;s.immediateRender=Bt(o.immediateRender),e<2?s.runBackwards=1:s.startAt=t[a-1]}return new ft(t[0],s,t[a+1])},ci=function(e,t){return e||e===0?t(e):t},xr=function(e,t,n){return n<e?e:n>t?t:n},Et=function(e,t){return!gt(e)||!(t=of.exec(e))?"":t[1]},_f=function(e,t,n){return ci(n,function(i){return xr(e,t,i)})},Vo=[].slice,ph=function(e,t){return e&&Fn(e)&&"length"in e&&(!t&&!e.length||e.length-1 in e&&Fn(e[0]))&&!e.nodeType&&e!==yn},yf=function(e,t,n){return n===void 0&&(n=[]),e.forEach(function(i){var a;return gt(i)&&!t||ph(i,1)?(a=n).push.apply(a,Jt(i)):n.push(i)})||n},Jt=function(e,t,n){return gt(e)&&!n&&(Oo||!Sa())?Vo.call((t||pl).querySelectorAll(e),0):Nt(e)?yf(e,n):ph(e)?Vo.call(e,0):e?[e]:[]},vf=function(e){return e=Jt(e)[0]||hs("Invalid scope")||{},function(t){var n=e.current||e.nativeElement||e;return Jt(t,n.querySelectorAll?n:n===e?hs("Invalid scope")||pl.createElement("div"):e)}},mh=function(e){return e.sort(function(){return .5-Math.random()})},gh=function(e){if(mt(e))return e;var t=Fn(e)?e:{each:e},n=wi(t.ease),i=t.from||0,a=parseFloat(t.base)||0,s={},o=i>0&&i<1,c=isNaN(i)||o,l=t.axis,u=i,h=i;return gt(i)?u=h={center:.5,edges:.5,end:1}[i]||0:!o&&c&&(u=i[0],h=i[1]),function(d,p,g){var f=(g||t).length,m=s[f],_,b,A,S,y,w,E,L,z;if(!m){if(z=t.grid==="auto"?0:(t.grid||[1,Xt])[1],!z){for(E=-Xt;E<(E=g[z++].getBoundingClientRect().left)&&z<f;);z--}for(m=s[f]=[],_=c?Math.min(z,f)*u-.5:i%z,b=z===Xt?0:c?f*h/z-.5:i/z|0,E=0,L=Xt,w=0;w<f;w++)A=w%z-_,S=b-(w/z|0),m[w]=y=l?Math.abs(l==="y"?S:A):Ju(A*A+S*S),y>E&&(E=y),y<L&&(L=y);i==="random"&&mh(m),m.max=E-L,m.min=L,m.v=f=(parseFloat(t.amount)||parseFloat(t.each)*(z>f?f-1:l?l==="y"?f/z:z:Math.max(z,f/z))||0)*(i==="edges"?-1:1),m.b=f<0?a-f:a,m.u=Et(t.amount||t.each)||0,n=n&&f<0?Ch(n):n}return f=(m[d]-m.min)/m.max||0,Mt(m.b+(n?n(f):f)*m.v)+m.u}},Wo=function(e){var t=Math.pow(10,((e+"").split(".")[1]||"").length);return function(n){var i=Math.round(parseFloat(n)/e)*e*t;return(i-i%1)/t+(In(n)?0:Et(n))}},_h=function(e,t){var n=Nt(e),i,a;return!n&&Fn(e)&&(i=n=e.radius||Xt,e.values?(e=Jt(e.values),(a=!In(e[0]))&&(i*=i)):e=Wo(e.increment)),ci(t,n?mt(e)?function(s){return a=e(s),Math.abs(a-s)<=i?a:s}:function(s){for(var o=parseFloat(a?s.x:s),c=parseFloat(a?s.y:0),l=Xt,u=0,h=e.length,d,p;h--;)a?(d=e[h].x-o,p=e[h].y-c,d=d*d+p*p):d=Math.abs(e[h]-o),d<l&&(l=d,u=h);return u=!i||l<=i?e[u]:s,a||u===s||In(s)?u:u+Et(s)}:Wo(e))},yh=function(e,t,n,i){return ci(Nt(e)?!t:n===!0?!!(n=0):!i,function(){return Nt(e)?e[~~(Math.random()*e.length)]:(n=n||1e-5)&&(i=n<1?Math.pow(10,(n+"").length-2):1)&&Math.floor(Math.round((e-n/2+Math.random()*(t-e+n*.99))/n)*n*i)/i})},bf=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(i){return t.reduce(function(a,s){return s(a)},i)}},xf=function(e,t){return function(n){return e(parseFloat(n))+(t||Et(n))}},Sf=function(e,t,n){return bh(e,t,0,1,n)},vh=function(e,t,n){return ci(n,function(i){return e[~~t(i)]})},Af=function r(e,t,n){var i=t-e;return Nt(e)?vh(e,r(0,e.length),t):ci(n,function(a){return(i+(a-e)%i)%i+e})},Cf=function r(e,t,n){var i=t-e,a=i*2;return Nt(e)?vh(e,r(0,e.length-1),t):ci(n,function(s){return s=(a+(s-e)%a)%a||0,e+(s>i?a-s:s)})},rr=function(e){for(var t=0,n="",i,a,s,o;~(i=e.indexOf("random(",t));)s=e.indexOf(")",i),o=e.charAt(i+7)==="[",a=e.substr(i+7,s-i-7).match(o?th:ko),n+=e.substr(t,i-t)+yh(o?a:+a[0],o?0:+a[1],+a[2]||1e-5),t=s+1;return n+e.substr(t,e.length-t)},bh=function(e,t,n,i,a){var s=t-e,o=i-n;return ci(a,function(c){return n+((c-e)/s*o||0)})},Mf=function r(e,t,n,i){var a=isNaN(e+t)?0:function(p){return(1-p)*e+p*t};if(!a){var s=gt(e),o={},c,l,u,h,d;if(n===!0&&(i=1)&&(n=null),s)e={p:e},t={p:t};else if(Nt(e)&&!Nt(t)){for(u=[],h=e.length,d=h-2,l=1;l<h;l++)u.push(r(e[l-1],e[l]));h--,a=function(g){g*=h;var f=Math.min(d,~~g);return u[f](g-f)},n=t}else i||(e=Ni(Nt(e)?[]:{},e));if(!u){for(c in t)bl.call(o,e,c,"get",t[c]);a=function(g){return Cl(g,o)||(s?e.p:e)}}}return ci(n,a)},ac=function(e,t,n){var i=e.labels,a=Xt,s,o,c;for(s in i)o=i[s]-t,o<0==!!n&&o&&a>(o=Math.abs(o))&&(c=s,a=o);return c},Yt=function(e,t,n){var i=e.vars,a=i[t],s,o;if(!!a)return s=i[t+"Params"],o=i.callbackScope||e,n&&$n.length&&ds(),s?a.apply(o,s):a.call(o)},Xa=function(e){return Pn(e),e.scrollTrigger&&e.scrollTrigger.kill(!1),e.progress()<1&&Yt(e,"onInterrupt"),e},sa,wf=function(e){e=!e.name&&e.default||e;var t=e.name,n=mt(e),i=t&&!n&&e.init?function(){this._props=[]}:e,a={init:ar,render:Cl,add:bl,kill:Hf,modifier:Gf,rawVars:0},s={targetTest:0,get:0,getSetter:Al,aliases:{},register:0};if(Sa(),e!==i){if(Gt[t])return;Qt(i,Qt(fs(e,a),s)),Ni(i.prototype,Ni(a,fs(e,s))),Gt[i.prop=t]=i,e.targetTest&&(os.push(i),gl[t]=1),t=(t==="css"?"CSS":t.charAt(0).toUpperCase()+t.substr(1))+"Plugin"}ah(t,i),e.register&&e.register(un,i,Ft)},qe=255,Ja={aqua:[0,qe,qe],lime:[0,qe,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,qe],navy:[0,0,128],white:[qe,qe,qe],olive:[128,128,0],yellow:[qe,qe,0],orange:[qe,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[qe,0,0],pink:[qe,192,203],cyan:[0,qe,qe],transparent:[qe,qe,qe,0]},Ws=function(e,t,n){return e+=e<0?1:e>1?-1:0,(e*6<1?t+(n-t)*e*6:e<.5?n:e*3<2?t+(n-t)*(2/3-e)*6:t)*qe+.5|0},xh=function(e,t,n){var i=e?In(e)?[e>>16,e>>8&qe,e&qe]:0:Ja.black,a,s,o,c,l,u,h,d,p,g;if(!i){if(e.substr(-1)===","&&(e=e.substr(0,e.length-1)),Ja[e])i=Ja[e];else if(e.charAt(0)==="#"){if(e.length<6&&(a=e.charAt(1),s=e.charAt(2),o=e.charAt(3),e="#"+a+a+s+s+o+o+(e.length===5?e.charAt(4)+e.charAt(4):"")),e.length===9)return i=parseInt(e.substr(1,6),16),[i>>16,i>>8&qe,i&qe,parseInt(e.substr(7),16)/255];e=parseInt(e.substr(1),16),i=[e>>16,e>>8&qe,e&qe]}else if(e.substr(0,3)==="hsl"){if(i=g=e.match(ko),!t)c=+i[0]%360/360,l=+i[1]/100,u=+i[2]/100,s=u<=.5?u*(l+1):u+l-u*l,a=u*2-s,i.length>3&&(i[3]*=1),i[0]=Ws(c+1/3,a,s),i[1]=Ws(c,a,s),i[2]=Ws(c-1/3,a,s);else if(~e.indexOf("="))return i=e.match(Qu),n&&i.length<4&&(i[3]=1),i}else i=e.match(ko)||Ja.transparent;i=i.map(Number)}return t&&!g&&(a=i[0]/qe,s=i[1]/qe,o=i[2]/qe,h=Math.max(a,s,o),d=Math.min(a,s,o),u=(h+d)/2,h===d?c=l=0:(p=h-d,l=u>.5?p/(2-h-d):p/(h+d),c=h===a?(s-o)/p+(s<o?6:0):h===s?(o-a)/p+2:(a-s)/p+4,c*=60),i[0]=~~(c+.5),i[1]=~~(l*100+.5),i[2]=~~(u*100+.5)),n&&i.length<4&&(i[3]=1),i},Sh=function(e){var t=[],n=[],i=-1;return e.split(Qn).forEach(function(a){var s=a.match(ra)||[];t.push.apply(t,s),n.push(i+=s.length+1)}),t.c=n,t},rc=function(e,t,n){var i="",a=(e+i).match(Qn),s=t?"hsla(":"rgba(",o=0,c,l,u,h;if(!a)return e;if(a=a.map(function(d){return(d=xh(d,t,1))&&s+(t?d[0]+","+d[1]+"%,"+d[2]+"%,"+d[3]:d.join(","))+")"}),n&&(u=Sh(e),c=n.c,c.join(i)!==u.c.join(i)))for(l=e.replace(Qn,"1").split(ra),h=l.length-1;o<h;o++)i+=l[o]+(~c.indexOf(o)?a.shift()||s+"0,0,0,0)":(u.length?u:a.length?a:n).shift());if(!l)for(l=e.split(Qn),h=l.length-1;o<h;o++)i+=l[o]+a[o];return i+l[h]},Qn=function(){var r="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",e;for(e in Ja)r+="|"+e+"\\b";return new RegExp(r+")","gi")}(),Tf=/hsl[a]?\(/,Ah=function(e){var t=e.join(" "),n;if(Qn.lastIndex=0,Qn.test(t))return n=Tf.test(t),e[1]=rc(e[1],n),e[0]=rc(e[0],n,Sh(e[1])),!0},sr,Ht=function(){var r=Date.now,e=500,t=33,n=r(),i=n,a=1e3/240,s=a,o=[],c,l,u,h,d,p,g=function f(m){var _=r()-i,b=m===!0,A,S,y,w;if(_>e&&(n+=_-t),i+=_,y=i-n,A=y-s,(A>0||b)&&(w=++h.frame,d=y-h.time*1e3,h.time=y=y/1e3,s+=A+(A>=a?4:a-A),S=1),b||(c=l(f)),S)for(p=0;p<o.length;p++)o[p](y,d,w,m)};return h={time:0,frame:0,tick:function(){g(!0)},deltaRatio:function(m){return d/(1e3/(m||60))},wake:function(){nh&&(!Oo&&Yu()&&(yn=Oo=window,pl=yn.document||{},jt.gsap=un,(yn.gsapVersions||(yn.gsapVersions=[])).push(un.version),ih(us||yn.GreenSockGlobals||!yn.gsap&&yn||{}),u=yn.requestAnimationFrame),c&&h.sleep(),l=u||function(m){return setTimeout(m,s-h.time*1e3+1|0)},sr=1,g(2))},sleep:function(){(u?yn.cancelAnimationFrame:clearTimeout)(c),sr=0,l=ar},lagSmoothing:function(m,_){e=m||1/Ze,t=Math.min(_,e,0)},fps:function(m){a=1e3/(m||240),s=h.time*1e3+a},add:function(m,_,b){var A=_?function(S,y,w,E){m(S,y,w,E),h.remove(A)}:m;return h.remove(m),o[b?"unshift":"push"](A),Sa(),A},remove:function(m,_){~(_=o.indexOf(m))&&o.splice(_,1)&&p>=_&&p--},_listeners:o},h}(),Sa=function(){return!sr&&Ht.wake()},Be={},Ef=/^[\d.\-M][\d.\-,\s]/,Nf=/["']/g,Rf=function(e){for(var t={},n=e.substr(1,e.length-3).split(":"),i=n[0],a=1,s=n.length,o,c,l;a<s;a++)c=n[a],o=a!==s-1?c.lastIndexOf(","):c.length,l=c.substr(0,o),t[i]=isNaN(l)?l.replace(Nf,"").trim():+l,i=c.substr(o+1).trim();return t},Lf=function(e){var t=e.indexOf("(")+1,n=e.indexOf(")"),i=e.indexOf("(",t);return e.substring(t,~i&&i<n?e.indexOf(")",n+1):n)},Uf=function(e){var t=(e+"").split("("),n=Be[t[0]];return n&&t.length>1&&n.config?n.config.apply(null,~e.indexOf("{")?[Rf(t[1])]:Lf(e).split(",").map(lh)):Be._CE&&Ef.test(e)?Be._CE("",e):n},Ch=function(e){return function(t){return 1-e(1-t)}},Mh=function r(e,t){for(var n=e._first,i;n;)n instanceof Dt?r(n,t):n.vars.yoyoEase&&(!n._yoyo||!n._repeat)&&n._yoyo!==t&&(n.timeline?r(n.timeline,t):(i=n._ease,n._ease=n._yEase,n._yEase=i,n._yoyo=t)),n=n._next},wi=function(e,t){return e&&(mt(e)?e:Be[e]||Uf(e))||t},Li=function(e,t,n,i){n===void 0&&(n=function(c){return 1-t(1-c)}),i===void 0&&(i=function(c){return c<.5?t(c*2)/2:1-t((1-c)*2)/2});var a={easeIn:t,easeOut:n,easeInOut:i},s;return It(e,function(o){Be[o]=jt[o]=a,Be[s=o.toLowerCase()]=n;for(var c in a)Be[s+(c==="easeIn"?".in":c==="easeOut"?".out":".inOut")]=Be[o+"."+c]=a[c]}),a},wh=function(e){return function(t){return t<.5?(1-e(1-t*2))/2:.5+e((t-.5)*2)/2}},js=function r(e,t,n){var i=t>=1?t:1,a=(n||(e?.3:.45))/(t<1?t:1),s=a/zo*(Math.asin(1/i)||0),o=function(u){return u===1?1:i*Math.pow(2,-10*u)*sf((u-s)*a)+1},c=e==="out"?o:e==="in"?function(l){return 1-o(1-l)}:wh(o);return a=zo/a,c.config=function(l,u){return r(e,l,u)},c},Ks=function r(e,t){t===void 0&&(t=1.70158);var n=function(s){return s?--s*s*((t+1)*s+t)+1:0},i=e==="out"?n:e==="in"?function(a){return 1-n(1-a)}:wh(n);return i.config=function(a){return r(e,a)},i};It("Linear,Quad,Cubic,Quart,Quint,Strong",function(r,e){var t=e<5?e+1:e;Li(r+",Power"+(t-1),e?function(n){return Math.pow(n,t)}:function(n){return n},function(n){return 1-Math.pow(1-n,t)},function(n){return n<.5?Math.pow(n*2,t)/2:1-Math.pow((1-n)*2,t)/2})});Be.Linear.easeNone=Be.none=Be.Linear.easeIn;Li("Elastic",js("in"),js("out"),js());(function(r,e){var t=1/e,n=2*t,i=2.5*t,a=function(o){return o<t?r*o*o:o<n?r*Math.pow(o-1.5/e,2)+.75:o<i?r*(o-=2.25/e)*o+.9375:r*Math.pow(o-2.625/e,2)+.984375};Li("Bounce",function(s){return 1-a(1-s)},a)})(7.5625,2.75);Li("Expo",function(r){return r?Math.pow(2,10*(r-1)):0});Li("Circ",function(r){return-(Ju(1-r*r)-1)});Li("Sine",function(r){return r===1?1:-rf(r*nf)+1});Li("Back",Ks("in"),Ks("out"),Ks());Be.SteppedEase=Be.steps=jt.SteppedEase={config:function(e,t){e===void 0&&(e=1);var n=1/e,i=e+(t?0:1),a=t?1:0,s=1-Ze;return function(o){return((i*xr(0,s,o)|0)+a)*n}}};va.ease=Be["quad.out"];It("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(r){return _l+=r+","+r+"Params,"});var Th=function(e,t){this.id=af++,e._gsap=this,this.target=e,this.harness=t,this.get=t?t.get:sh,this.set=t?t.getSetter:Al},or=function(){function r(t){this.vars=t,this._delay=+t.delay||0,(this._repeat=t.repeat===1/0?-2:t.repeat||0)&&(this._rDelay=t.repeatDelay||0,this._yoyo=!!t.yoyo||!!t.yoyoEase),this._ts=1,xa(this,+t.duration,1,1),this.data=t.data,sr||Ht.wake()}var e=r.prototype;return e.delay=function(n){return n||n===0?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+n-this._delay),this._delay=n,this):this._delay},e.duration=function(n){return arguments.length?this.totalDuration(this._repeat>0?n+(n+this._rDelay)*this._repeat:n):this.totalDuration()&&this._dur},e.totalDuration=function(n){return arguments.length?(this._dirty=0,xa(this,this._repeat<0?n:(n-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},e.totalTime=function(n,i){if(Sa(),!arguments.length)return this._tTime;var a=this._dp;if(a&&a.smoothChildTiming&&this._ts){for(vl(this,n),!a._dp||a.parent||hh(a,this);a&&a.parent;)a.parent._time!==a._start+(a._ts>=0?a._tTime/a._ts:(a.totalDuration()-a._tTime)/-a._ts)&&a.totalTime(a._tTime,!0),a=a.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&n<this._tDur||this._ts<0&&n>0||!this._tDur&&!n)&&bn(this._dp,this,this._start-this._delay)}return(this._tTime!==n||!this._dur&&!i||this._initted&&Math.abs(this._zTime)===Ze||!n&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=n),oh(this,n,i)),this},e.time=function(n,i){return arguments.length?this.totalTime(Math.min(this.totalDuration(),n+nc(this))%(this._dur+this._rDelay)||(n?this._dur:0),i):this._time},e.totalProgress=function(n,i){return arguments.length?this.totalTime(this.totalDuration()*n,i):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio},e.progress=function(n,i){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-n:n)+nc(this),i):this.duration()?Math.min(1,this._time/this._dur):this.ratio},e.iteration=function(n,i){var a=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(n-1)*a,i):this._repeat?ba(this._tTime,a)+1:1},e.timeScale=function(n){if(!arguments.length)return this._rts===-Ze?0:this._rts;if(this._rts===n)return this;var i=this.parent&&this._ts?ps(this.parent._time,this):this._tTime;return this._rts=+n||0,this._ts=this._ps||n===-Ze?0:this._rts,this.totalTime(xr(-this._delay,this._tDur,i),!0),ws(this),hf(this)},e.paused=function(n){return arguments.length?(this._ps!==n&&(this._ps=n,n?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(Sa(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==Ze&&(this._tTime-=Ze)))),this):this._ps},e.startTime=function(n){if(arguments.length){this._start=n;var i=this.parent||this._dp;return i&&(i._sort||!this.parent)&&bn(i,this,n-this._delay),this}return this._start},e.endTime=function(n){return this._start+(Bt(n)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},e.rawTime=function(n){var i=this.parent||this._dp;return i?n&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?ps(i.rawTime(n),this):this._tTime:this._tTime},e.globalTime=function(n){for(var i=this,a=arguments.length?n:i.rawTime();i;)a=i._start+a/(i._ts||1),i=i._dp;return a},e.repeat=function(n){return arguments.length?(this._repeat=n===1/0?-2:n,ic(this)):this._repeat===-2?1/0:this._repeat},e.repeatDelay=function(n){if(arguments.length){var i=this._time;return this._rDelay=n,ic(this),i?this.time(i):this}return this._rDelay},e.yoyo=function(n){return arguments.length?(this._yoyo=n,this):this._yoyo},e.seek=function(n,i){return this.totalTime(Zt(this,n),Bt(i))},e.restart=function(n,i){return this.play().totalTime(n?-this._delay:0,Bt(i))},e.play=function(n,i){return n!=null&&this.seek(n,i),this.reversed(!1).paused(!1)},e.reverse=function(n,i){return n!=null&&this.seek(n||this.totalDuration(),i),this.reversed(!0).paused(!1)},e.pause=function(n,i){return n!=null&&this.seek(n,i),this.paused(!0)},e.resume=function(){return this.paused(!1)},e.reversed=function(n){return arguments.length?(!!n!==this.reversed()&&this.timeScale(-this._rts||(n?-Ze:0)),this):this._rts<0},e.invalidate=function(){return this._initted=this._act=0,this._zTime=-Ze,this},e.isActive=function(){var n=this.parent||this._dp,i=this._start,a;return!!(!n||this._ts&&this._initted&&n.isActive()&&(a=n.rawTime(!0))>=i&&a<this.endTime(!0)-Ze)},e.eventCallback=function(n,i,a){var s=this.vars;return arguments.length>1?(i?(s[n]=i,a&&(s[n+"Params"]=a),n==="onUpdate"&&(this._onUpdate=i)):delete s[n],this):s[n]},e.then=function(n){var i=this;return new Promise(function(a){var s=mt(n)?n:ch,o=function(){var l=i.then;i.then=null,mt(s)&&(s=s(i))&&(s.then||s===i)&&(i.then=l),a(s),i.then=l};i._initted&&i.totalProgress()===1&&i._ts>=0||!i._tTime&&i._ts<0?o():i._prom=o})},e.kill=function(){Xa(this)},r}();Qt(or.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-Ze,_prom:0,_ps:!1,_rts:1});var Dt=function(r){Xu(e,r);function e(n,i){var a;return n===void 0&&(n={}),a=r.call(this,n)||this,a.labels={},a.smoothChildTiming=!!n.smoothChildTiming,a.autoRemoveChildren=!!n.autoRemoveChildren,a._sort=Bt(n.sortChildren),tt&&bn(n.parent||tt,Rn(a),i),n.reversed&&a.reverse(),n.paused&&a.paused(!0),n.scrollTrigger&&dh(Rn(a),n.scrollTrigger),a}var t=e.prototype;return t.to=function(i,a,s){return er(0,arguments,this),this},t.from=function(i,a,s){return er(1,arguments,this),this},t.fromTo=function(i,a,s,o){return er(2,arguments,this),this},t.set=function(i,a,s){return a.duration=0,a.parent=this,Qa(a).repeatDelay||(a.repeat=0),a.immediateRender=!!a.immediateRender,new ft(i,a,Zt(this,s),1),this},t.call=function(i,a,s){return bn(this,ft.delayedCall(0,i,a),s)},t.staggerTo=function(i,a,s,o,c,l,u){return s.duration=a,s.stagger=s.stagger||o,s.onComplete=l,s.onCompleteParams=u,s.parent=this,new ft(i,s,Zt(this,c)),this},t.staggerFrom=function(i,a,s,o,c,l,u){return s.runBackwards=1,Qa(s).immediateRender=Bt(s.immediateRender),this.staggerTo(i,a,s,o,c,l,u)},t.staggerFromTo=function(i,a,s,o,c,l,u,h){return o.startAt=s,Qa(o).immediateRender=Bt(o.immediateRender),this.staggerTo(i,a,o,c,l,u,h)},t.render=function(i,a,s){var o=this._time,c=this._dirty?this.totalDuration():this._tDur,l=this._dur,u=i<=0?0:Mt(i),h=this._zTime<0!=i<0&&(this._initted||!l),d,p,g,f,m,_,b,A,S,y,w,E;if(this!==tt&&u>c&&i>=0&&(u=c),u!==this._tTime||s||h){if(o!==this._time&&l&&(u+=this._time-o,i+=this._time-o),d=u,S=this._start,A=this._ts,_=!A,h&&(l||(o=this._zTime),(i||!a)&&(this._zTime=i)),this._repeat){if(w=this._yoyo,m=l+this._rDelay,this._repeat<-1&&i<0)return this.totalTime(m*100+i,a,s);if(d=Mt(u%m),u===c?(f=this._repeat,d=l):(f=~~(u/m),f&&f===u/m&&(d=l,f--),d>l&&(d=l)),y=ba(this._tTime,m),!o&&this._tTime&&y!==f&&(y=f),w&&f&1&&(d=l-d,E=1),f!==y&&!this._lock){var L=w&&y&1,z=L===(w&&f&1);if(f<y&&(L=!L),o=L?0:l,this._lock=1,this.render(o||(E?0:Mt(f*m)),a,!l)._lock=0,this._tTime=u,!a&&this.parent&&Yt(this,"onRepeat"),this.vars.repeatRefresh&&!E&&(this.invalidate()._lock=1),o&&o!==this._time||_!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(l=this._dur,c=this._tDur,z&&(this._lock=2,o=L?l:-1e-4,this.render(o,!0),this.vars.repeatRefresh&&!E&&this.invalidate()),this._lock=0,!this._ts&&!_)return this;Mh(this,E)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(b=mf(this,Mt(o),Mt(d)),b&&(u-=d-(d=b._start))),this._tTime=u,this._time=d,this._act=!A,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=i,o=0),!o&&d&&!a&&(Yt(this,"onStart"),this._tTime!==u))return this;if(d>=o&&i>=0)for(p=this._first;p;){if(g=p._next,(p._act||d>=p._start)&&p._ts&&b!==p){if(p.parent!==this)return this.render(i,a,s);if(p.render(p._ts>0?(d-p._start)*p._ts:(p._dirty?p.totalDuration():p._tDur)+(d-p._start)*p._ts,a,s),d!==this._time||!this._ts&&!_){b=0,g&&(u+=this._zTime=-Ze);break}}p=g}else{p=this._last;for(var B=i<0?i:d;p;){if(g=p._prev,(p._act||B<=p._end)&&p._ts&&b!==p){if(p.parent!==this)return this.render(i,a,s);if(p.render(p._ts>0?(B-p._start)*p._ts:(p._dirty?p.totalDuration():p._tDur)+(B-p._start)*p._ts,a,s),d!==this._time||!this._ts&&!_){b=0,g&&(u+=this._zTime=B?-Ze:Ze);break}}p=g}}if(b&&!a&&(this.pause(),b.render(d>=o?0:-Ze)._zTime=d>=o?1:-1,this._ts))return this._start=S,ws(this),this.render(i,a,s);this._onUpdate&&!a&&Yt(this,"onUpdate",!0),(u===c&&this._tTime>=this.totalDuration()||!u&&o)&&(S===this._start||Math.abs(A)!==Math.abs(this._ts))&&(this._lock||((i||!l)&&(u===c&&this._ts>0||!u&&this._ts<0)&&Pn(this,1),!a&&!(i<0&&!o)&&(u||o||!c)&&(Yt(this,u===c&&i>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(u<c&&this.timeScale()>0)&&this._prom())))}return this},t.add=function(i,a){var s=this;if(In(a)||(a=Zt(this,a,i)),!(i instanceof or)){if(Nt(i))return i.forEach(function(o){return s.add(o,a)}),this;if(gt(i))return this.addLabel(i,a);if(mt(i))i=ft.delayedCall(0,i);else return this}return this!==i?bn(this,i,a):this},t.getChildren=function(i,a,s,o){i===void 0&&(i=!0),a===void 0&&(a=!0),s===void 0&&(s=!0),o===void 0&&(o=-Xt);for(var c=[],l=this._first;l;)l._start>=o&&(l instanceof ft?a&&c.push(l):(s&&c.push(l),i&&c.push.apply(c,l.getChildren(!0,a,s)))),l=l._next;return c},t.getById=function(i){for(var a=this.getChildren(1,1,1),s=a.length;s--;)if(a[s].vars.id===i)return a[s]},t.remove=function(i){return gt(i)?this.removeLabel(i):mt(i)?this.killTweensOf(i):(Ms(this,i),i===this._recent&&(this._recent=this._last),Mi(this))},t.totalTime=function(i,a){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=Mt(Ht.time-(this._ts>0?i/this._ts:(this.totalDuration()-i)/-this._ts))),r.prototype.totalTime.call(this,i,a),this._forcing=0,this):this._tTime},t.addLabel=function(i,a){return this.labels[i]=Zt(this,a),this},t.removeLabel=function(i){return delete this.labels[i],this},t.addPause=function(i,a,s){var o=ft.delayedCall(0,a||ar,s);return o.data="isPause",this._hasPause=1,bn(this,o,Zt(this,i))},t.removePause=function(i){var a=this._first;for(i=Zt(this,i);a;)a._start===i&&a.data==="isPause"&&Pn(a),a=a._next},t.killTweensOf=function(i,a,s){for(var o=this.getTweensOf(i,s),c=o.length;c--;)Zn!==o[c]&&o[c].kill(i,a);return this},t.getTweensOf=function(i,a){for(var s=[],o=Jt(i),c=this._first,l=In(a),u;c;)c instanceof ft?lf(c._targets,o)&&(l?(!Zn||c._initted&&c._ts)&&c.globalTime(0)<=a&&c.globalTime(c.totalDuration())>a:!a||c.isActive())&&s.push(c):(u=c.getTweensOf(o,a)).length&&s.push.apply(s,u),c=c._next;return s},t.tweenTo=function(i,a){a=a||{};var s=this,o=Zt(s,i),c=a,l=c.startAt,u=c.onStart,h=c.onStartParams,d=c.immediateRender,p,g=ft.to(s,Qt({ease:a.ease||"none",lazy:!1,immediateRender:!1,time:o,overwrite:"auto",duration:a.duration||Math.abs((o-(l&&"time"in l?l.time:s._time))/s.timeScale())||Ze,onStart:function(){if(s.pause(),!p){var m=a.duration||Math.abs((o-(l&&"time"in l?l.time:s._time))/s.timeScale());g._dur!==m&&xa(g,m,0,1).render(g._time,!0,!0),p=1}u&&u.apply(g,h||[])}},a));return d?g.render(0):g},t.tweenFromTo=function(i,a,s){return this.tweenTo(a,Qt({startAt:{time:Zt(this,i)}},s))},t.recent=function(){return this._recent},t.nextLabel=function(i){return i===void 0&&(i=this._time),ac(this,Zt(this,i))},t.previousLabel=function(i){return i===void 0&&(i=this._time),ac(this,Zt(this,i),1)},t.currentLabel=function(i){return arguments.length?this.seek(i,!0):this.previousLabel(this._time+Ze)},t.shiftChildren=function(i,a,s){s===void 0&&(s=0);for(var o=this._first,c=this.labels,l;o;)o._start>=s&&(o._start+=i,o._end+=i),o=o._next;if(a)for(l in c)c[l]>=s&&(c[l]+=i);return Mi(this)},t.invalidate=function(){var i=this._first;for(this._lock=0;i;)i.invalidate(),i=i._next;return r.prototype.invalidate.call(this)},t.clear=function(i){i===void 0&&(i=!0);for(var a=this._first,s;a;)s=a._next,this.remove(a),a=s;return this._dp&&(this._time=this._tTime=this._pTime=0),i&&(this.labels={}),Mi(this)},t.totalDuration=function(i){var a=0,s=this,o=s._last,c=Xt,l,u,h;if(arguments.length)return s.timeScale((s._repeat<0?s.duration():s.totalDuration())/(s.reversed()?-i:i));if(s._dirty){for(h=s.parent;o;)l=o._prev,o._dirty&&o.totalDuration(),u=o._start,u>c&&s._sort&&o._ts&&!s._lock?(s._lock=1,bn(s,o,u-o._delay,1)._lock=0):c=u,u<0&&o._ts&&(a-=u,(!h&&!s._dp||h&&h.smoothChildTiming)&&(s._start+=u/s._ts,s._time-=u,s._tTime-=u),s.shiftChildren(-u,!1,-1/0),c=0),o._end>a&&o._ts&&(a=o._end),o=l;xa(s,s===tt&&s._time>a?s._time:a,1,1),s._dirty=0}return s._tDur},e.updateRoot=function(i){if(tt._ts&&(oh(tt,ps(i,tt)),rh=Ht.frame),Ht.frame>=ec){ec+=Vt.autoSleep||120;var a=tt._first;if((!a||!a._ts)&&Vt.autoSleep&&Ht._listeners.length<2){for(;a&&!a._ts;)a=a._next;a||Ht.sleep()}}},e}(or);Qt(Dt.prototype,{_lock:0,_hasPause:0,_forcing:0});var Pf=function(e,t,n,i,a,s,o){var c=new Ft(this._pt,e,t,0,1,Ph,null,a),l=0,u=0,h,d,p,g,f,m,_,b;for(c.b=n,c.e=i,n+="",i+="",(_=~i.indexOf("random("))&&(i=rr(i)),s&&(b=[n,i],s(b,e,t),n=b[0],i=b[1]),d=n.match(Hs)||[];h=Hs.exec(i);)g=h[0],f=i.substring(l,h.index),p?p=(p+1)%5:f.substr(-5)==="rgba("&&(p=1),g!==d[u++]&&(m=parseFloat(d[u-1])||0,c._pt={_next:c._pt,p:f||u===1?f:",",s:m,c:g.charAt(1)==="="?da(m,g)-m:parseFloat(g)-m,m:p&&p<4?Math.round:0},l=Hs.lastIndex);return c.c=l<i.length?i.substring(l,i.length):"",c.fp=o,(eh.test(i)||_)&&(c.e=0),this._pt=c,c},bl=function(e,t,n,i,a,s,o,c,l){mt(i)&&(i=i(a||0,e,s));var u=e[t],h=n!=="get"?n:mt(u)?l?e[t.indexOf("set")||!mt(e["get"+t.substr(3)])?t:"get"+t.substr(3)](l):e[t]():u,d=mt(u)?l?zf:Lh:Sl,p;if(gt(i)&&(~i.indexOf("random(")&&(i=rr(i)),i.charAt(1)==="="&&(p=da(h,i)+(Et(h)||0),(p||p===0)&&(i=p))),h!==i||jo)return!isNaN(h*i)&&i!==""?(p=new Ft(this._pt,e,t,+h||0,i-(h||0),typeof u=="boolean"?Of:Uh,0,d),l&&(p.fp=l),o&&p.modifier(o,this,e),this._pt=p):(!u&&!(t in e)&&ml(t,i),Pf.call(this,e,t,h,i,d,c||Vt.stringFilter,l))},Df=function(e,t,n,i,a){if(mt(e)&&(e=tr(e,a,t,n,i)),!Fn(e)||e.style&&e.nodeType||Nt(e)||$u(e))return gt(e)?tr(e,a,t,n,i):e;var s={},o;for(o in e)s[o]=tr(e[o],a,t,n,i);return s},Eh=function(e,t,n,i,a,s){var o,c,l,u;if(Gt[e]&&(o=new Gt[e]).init(a,o.rawVars?t[e]:Df(t[e],i,a,s,n),n,i,s)!==!1&&(n._pt=c=new Ft(n._pt,a,e,0,1,o.render,o,0,o.priority),n!==sa))for(l=n._ptLookup[n._targets.indexOf(a)],u=o._props.length;u--;)l[o._props[u]]=c;return o},Zn,jo,xl=function r(e,t){var n=e.vars,i=n.ease,a=n.startAt,s=n.immediateRender,o=n.lazy,c=n.onUpdate,l=n.onUpdateParams,u=n.callbackScope,h=n.runBackwards,d=n.yoyoEase,p=n.keyframes,g=n.autoRevert,f=e._dur,m=e._startAt,_=e._targets,b=e.parent,A=b&&b.data==="nested"?b.parent._targets:_,S=e._overwrite==="auto"&&!dl,y=e.timeline,w,E,L,z,B,v,N,W,U,F,D,k,P;if(y&&(!p||!i)&&(i="none"),e._ease=wi(i,va.ease),e._yEase=d?Ch(wi(d===!0?i:d,va.ease)):0,d&&e._yoyo&&!e._repeat&&(d=e._yEase,e._yEase=e._ease,e._ease=d),e._from=!y&&!!n.runBackwards,!y||p&&!n.stagger){if(W=_[0]?Ci(_[0]).harness:0,k=W&&n[W.prop],w=fs(n,gl),m&&(Pn(m.render(-1,!0)),m._lazy=0),a)if(Pn(e._startAt=ft.set(_,Qt({data:"isStart",overwrite:!1,parent:b,immediateRender:!0,lazy:Bt(o),startAt:null,delay:0,onUpdate:c,onUpdateParams:l,callbackScope:u,stagger:0},a))),t<0&&!s&&!g&&e._startAt.render(-1,!0),s){if(t>0&&!g&&(e._startAt=0),f&&t<=0){t&&(e._zTime=t);return}}else g===!1&&(e._startAt=0);else if(h&&f){if(m)!g&&(e._startAt=0);else if(t&&(s=!1),L=Qt({overwrite:!1,data:"isFromStart",lazy:s&&Bt(o),immediateRender:s,stagger:0,parent:b},w),k&&(L[W.prop]=k),Pn(e._startAt=ft.set(_,L)),t<0&&e._startAt.render(-1,!0),e._zTime=t,!s)r(e._startAt,Ze);else if(!t)return}for(e._pt=e._ptCache=0,o=f&&Bt(o)||o&&!f,E=0;E<_.length;E++){if(B=_[E],N=B._gsap||yl(_)[E]._gsap,e._ptLookup[E]=F={},Go[N.id]&&$n.length&&ds(),D=A===_?E:A.indexOf(B),W&&(U=new W).init(B,k||w,e,D,A)!==!1&&(e._pt=z=new Ft(e._pt,B,U.name,0,1,U.render,U,0,U.priority),U._props.forEach(function(j){F[j]=z}),U.priority&&(v=1)),!W||k)for(L in w)Gt[L]&&(U=Eh(L,w,e,D,B,A))?U.priority&&(v=1):F[L]=z=bl.call(e,B,L,"get",w[L],D,A,0,n.stringFilter);e._op&&e._op[E]&&e.kill(B,e._op[E]),S&&e._pt&&(Zn=e,tt.killTweensOf(B,F,e.globalTime(t)),P=!e.parent,Zn=0),e._pt&&o&&(Go[N.id]=1)}v&&Dh(e),e._onInit&&e._onInit(e)}e._onUpdate=c,e._initted=(!e._op||e._pt)&&!P,p&&t<=0&&y.render(Xt,!0,!0)},Bf=function(e,t,n,i,a,s,o){var c=(e._pt&&e._ptCache||(e._ptCache={}))[t],l,u,h;if(!c)for(c=e._ptCache[t]=[],u=e._ptLookup,h=e._targets.length;h--;){if(l=u[h][t],l&&l.d&&l.d._pt)for(l=l.d._pt;l&&l.p!==t;)l=l._next;if(!l)return jo=1,e.vars[t]="+=0",xl(e,o),jo=0,1;c.push(l)}for(h=c.length;h--;)l=c[h],l.s=(i||i===0)&&!a?i:l.s+(i||0)+s*l.c,l.c=n-l.s,l.e&&(l.e=rt(n)+Et(l.e)),l.b&&(l.b=l.s+Et(l.b))},If=function(e,t){var n=e[0]?Ci(e[0]).harness:0,i=n&&n.aliases,a,s,o,c;if(!i)return t;a=Ni({},t);for(s in i)if(s in a)for(c=i[s].split(","),o=c.length;o--;)a[c[o]]=a[s];return a},Ff=function(e,t,n,i){var a=t.ease||i||"power1.inOut",s,o;if(Nt(t))o=n[e]||(n[e]=[]),t.forEach(function(c,l){return o.push({t:l/(t.length-1)*100,v:c,e:a})});else for(s in t)o=n[s]||(n[s]=[]),s==="ease"||o.push({t:parseFloat(e),v:t[s],e:a})},tr=function(e,t,n,i,a){return mt(e)?e.call(t,n,i,a):gt(e)&&~e.indexOf("random(")?rr(e):e},Nh=_l+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",Rh={};It(Nh+",id,stagger,delay,duration,paused,scrollTrigger",function(r){return Rh[r]=1});var ft=function(r){Xu(e,r);function e(n,i,a,s){var o;typeof i=="number"&&(a.duration=i,i=a,a=null),o=r.call(this,s?i:Qa(i))||this;var c=o.vars,l=c.duration,u=c.delay,h=c.immediateRender,d=c.stagger,p=c.overwrite,g=c.keyframes,f=c.defaults,m=c.scrollTrigger,_=c.yoyoEase,b=i.parent||tt,A=(Nt(n)||$u(n)?In(n[0]):"length"in i)?[n]:Jt(n),S,y,w,E,L,z,B,v;if(o._targets=A.length?yl(A):hs("GSAP target "+n+" not found. https://greensock.com",!Vt.nullTargetWarn)||[],o._ptLookup=[],o._overwrite=p,g||d||Er(l)||Er(u)){if(i=o.vars,S=o.timeline=new Dt({data:"nested",defaults:f||{}}),S.kill(),S.parent=S._dp=Rn(o),S._start=0,d||Er(l)||Er(u)){if(E=A.length,B=d&&gh(d),Fn(d))for(L in d)~Nh.indexOf(L)&&(v||(v={}),v[L]=d[L]);for(y=0;y<E;y++)w=fs(i,Rh),w.stagger=0,_&&(w.yoyoEase=_),v&&Ni(w,v),z=A[y],w.duration=+tr(l,Rn(o),y,z,A),w.delay=(+tr(u,Rn(o),y,z,A)||0)-o._delay,!d&&E===1&&w.delay&&(o._delay=u=w.delay,o._start+=u,w.delay=0),S.to(z,w,B?B(y,z,A):0),S._ease=Be.none;S.duration()?l=u=0:o.timeline=0}else if(g){Qa(Qt(S.vars.defaults,{ease:"none"})),S._ease=wi(g.ease||i.ease||"none");var N=0,W,U,F;if(Nt(g))g.forEach(function(D){return S.to(A,D,">")});else{w={};for(L in g)L==="ease"||L==="easeEach"||Ff(L,g[L],w,g.easeEach);for(L in w)for(W=w[L].sort(function(D,k){return D.t-k.t}),N=0,y=0;y<W.length;y++)U=W[y],F={ease:U.e,duration:(U.t-(y?W[y-1].t:0))/100*l},F[L]=U.v,S.to(A,F,N),N+=F.duration;S.duration()<l&&S.to({},{duration:l-S.duration()})}}l||o.duration(l=S.duration())}else o.timeline=0;return p===!0&&!dl&&(Zn=Rn(o),tt.killTweensOf(A),Zn=0),bn(b,Rn(o),a),i.reversed&&o.reverse(),i.paused&&o.paused(!0),(h||!l&&!g&&o._start===Mt(b._time)&&Bt(h)&&df(Rn(o))&&b.data!=="nested")&&(o._tTime=-Ze,o.render(Math.max(0,-u))),m&&dh(Rn(o),m),o}var t=e.prototype;return t.render=function(i,a,s){var o=this._time,c=this._tDur,l=this._dur,u=i>c-Ze&&i>=0?c:i<Ze?0:i,h,d,p,g,f,m,_,b,A;if(!l)pf(this,i,a,s);else if(u!==this._tTime||!i||s||!this._initted&&this._tTime||this._startAt&&this._zTime<0!=i<0){if(h=u,b=this.timeline,this._repeat){if(g=l+this._rDelay,this._repeat<-1&&i<0)return this.totalTime(g*100+i,a,s);if(h=Mt(u%g),u===c?(p=this._repeat,h=l):(p=~~(u/g),p&&p===u/g&&(h=l,p--),h>l&&(h=l)),m=this._yoyo&&p&1,m&&(A=this._yEase,h=l-h),f=ba(this._tTime,g),h===o&&!s&&this._initted)return this._tTime=u,this;p!==f&&(b&&this._yEase&&Mh(b,m),this.vars.repeatRefresh&&!m&&!this._lock&&(this._lock=s=1,this.render(Mt(g*p),!0).invalidate()._lock=0))}if(!this._initted){if(fh(this,i<0?i:h,s,a))return this._tTime=0,this;if(o!==this._time)return this;if(l!==this._dur)return this.render(i,a,s)}if(this._tTime=u,this._time=h,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=_=(A||this._ease)(h/l),this._from&&(this.ratio=_=1-_),h&&!o&&!a&&(Yt(this,"onStart"),this._tTime!==u))return this;for(d=this._pt;d;)d.r(_,d.d),d=d._next;b&&b.render(i<0?i:!h&&m?-Ze:b._dur*b._ease(h/this._dur),a,s)||this._startAt&&(this._zTime=i),this._onUpdate&&!a&&(i<0&&this._startAt&&this._startAt.render(i,!0,s),Yt(this,"onUpdate")),this._repeat&&p!==f&&this.vars.onRepeat&&!a&&this.parent&&Yt(this,"onRepeat"),(u===this._tDur||!u)&&this._tTime===u&&(i<0&&this._startAt&&!this._onUpdate&&this._startAt.render(i,!0,!0),(i||!l)&&(u===this._tDur&&this._ts>0||!u&&this._ts<0)&&Pn(this,1),!a&&!(i<0&&!o)&&(u||o)&&(Yt(this,u===c?"onComplete":"onReverseComplete",!0),this._prom&&!(u<c&&this.timeScale()>0)&&this._prom()))}return this},t.targets=function(){return this._targets},t.invalidate=function(){return this._pt=this._op=this._startAt=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(),r.prototype.invalidate.call(this)},t.resetTo=function(i,a,s,o){sr||Ht.wake(),this._ts||this.play();var c=Math.min(this._dur,(this._dp._time-this._start)*this._ts),l;return this._initted||xl(this,c),l=this._ease(c/this._dur),Bf(this,i,a,s,o,l,c)?this.resetTo(i,a,s,o):(vl(this,0),this.parent||uh(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},t.kill=function(i,a){if(a===void 0&&(a="all"),!i&&(!a||a==="all"))return this._lazy=this._pt=0,this.parent?Xa(this):this;if(this.timeline){var s=this.timeline.totalDuration();return this.timeline.killTweensOf(i,a,Zn&&Zn.vars.overwrite!==!0)._first||Xa(this),this.parent&&s!==this.timeline.totalDuration()&&xa(this,this._dur*this.timeline._tDur/s,0,1),this}var o=this._targets,c=i?Jt(i):o,l=this._ptLookup,u=this._pt,h,d,p,g,f,m,_;if((!a||a==="all")&&uf(o,c))return a==="all"&&(this._pt=0),Xa(this);for(h=this._op=this._op||[],a!=="all"&&(gt(a)&&(f={},It(a,function(b){return f[b]=1}),a=f),a=If(o,a)),_=o.length;_--;)if(~c.indexOf(o[_])){d=l[_],a==="all"?(h[_]=a,g=d,p={}):(p=h[_]=h[_]||{},g=a);for(f in g)m=d&&d[f],m&&((!("kill"in m.d)||m.d.kill(f)===!0)&&Ms(this,m,"_pt"),delete d[f]),p!=="all"&&(p[f]=1)}return this._initted&&!this._pt&&u&&Xa(this),this},e.to=function(i,a){return new e(i,a,arguments[2])},e.from=function(i,a){return er(1,arguments)},e.delayedCall=function(i,a,s,o){return new e(a,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:i,onComplete:a,onReverseComplete:a,onCompleteParams:s,onReverseCompleteParams:s,callbackScope:o})},e.fromTo=function(i,a,s){return er(2,arguments)},e.set=function(i,a){return a.duration=0,a.repeatDelay||(a.repeat=0),new e(i,a)},e.killTweensOf=function(i,a,s){return tt.killTweensOf(i,a,s)},e}(or);Qt(ft.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});It("staggerTo,staggerFrom,staggerFromTo",function(r){ft[r]=function(){var e=new Dt,t=Vo.call(arguments,0);return t.splice(r==="staggerFromTo"?5:4,0,0),e[r].apply(e,t)}});var Sl=function(e,t,n){return e[t]=n},Lh=function(e,t,n){return e[t](n)},zf=function(e,t,n,i){return e[t](i.fp,n)},kf=function(e,t,n){return e.setAttribute(t,n)},Al=function(e,t){return mt(e[t])?Lh:fl(e[t])&&e.setAttribute?kf:Sl},Uh=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e6)/1e6,t)},Of=function(e,t){return t.set(t.t,t.p,!!(t.s+t.c*e),t)},Ph=function(e,t){var n=t._pt,i="";if(!e&&t.b)i=t.b;else if(e===1&&t.e)i=t.e;else{for(;n;)i=n.p+(n.m?n.m(n.s+n.c*e):Math.round((n.s+n.c*e)*1e4)/1e4)+i,n=n._next;i+=t.c}t.set(t.t,t.p,i,t)},Cl=function(e,t){for(var n=t._pt;n;)n.r(e,n.d),n=n._next},Gf=function(e,t,n,i){for(var a=this._pt,s;a;)s=a._next,a.p===i&&a.modifier(e,t,n),a=s},Hf=function(e){for(var t=this._pt,n,i;t;)i=t._next,t.p===e&&!t.op||t.op===e?Ms(this,t,"_pt"):t.dep||(n=1),t=i;return!n},Vf=function(e,t,n,i){i.mSet(e,t,i.m.call(i.tween,n,i.mt),i)},Dh=function(e){for(var t=e._pt,n,i,a,s;t;){for(n=t._next,i=a;i&&i.pr>t.pr;)i=i._next;(t._prev=i?i._prev:s)?t._prev._next=t:a=t,(t._next=i)?i._prev=t:s=t,t=n}e._pt=a},Ft=function(){function r(t,n,i,a,s,o,c,l,u){this.t=n,this.s=a,this.c=s,this.p=i,this.r=o||Uh,this.d=c||this,this.set=l||Sl,this.pr=u||0,this._next=t,t&&(t._prev=this)}var e=r.prototype;return e.modifier=function(n,i,a){this.mSet=this.mSet||this.set,this.set=Vf,this.m=n,this.mt=a,this.tween=i},r}();It(_l+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(r){return gl[r]=1});jt.TweenMax=jt.TweenLite=ft;jt.TimelineLite=jt.TimelineMax=Dt;tt=new Dt({sortChildren:!1,defaults:va,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0});Vt.stringFilter=Ah;var ms={registerPlugin:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];t.forEach(function(i){return wf(i)})},timeline:function(e){return new Dt(e)},getTweensOf:function(e,t){return tt.getTweensOf(e,t)},getProperty:function(e,t,n,i){gt(e)&&(e=Jt(e)[0]);var a=Ci(e||{}).get,s=n?ch:lh;return n==="native"&&(n=""),e&&(t?s((Gt[t]&&Gt[t].get||a)(e,t,n,i)):function(o,c,l){return s((Gt[o]&&Gt[o].get||a)(e,o,c,l))})},quickSetter:function(e,t,n){if(e=Jt(e),e.length>1){var i=e.map(function(u){return un.quickSetter(u,t,n)}),a=i.length;return function(u){for(var h=a;h--;)i[h](u)}}e=e[0]||{};var s=Gt[t],o=Ci(e),c=o.harness&&(o.harness.aliases||{})[t]||t,l=s?function(u){var h=new s;sa._pt=0,h.init(e,n?u+n:u,sa,0,[e]),h.render(1,h),sa._pt&&Cl(1,sa)}:o.set(e,c);return s?l:function(u){return l(e,c,n?u+n:u,o,1)}},quickTo:function(e,t,n){var i,a=un.to(e,Ni((i={},i[t]="+=0.1",i.paused=!0,i),n||{})),s=function(c,l,u){return a.resetTo(t,c,l,u)};return s.tween=a,s},isTweening:function(e){return tt.getTweensOf(e,!0).length>0},defaults:function(e){return e&&e.ease&&(e.ease=wi(e.ease,va.ease)),tc(va,e||{})},config:function(e){return tc(Vt,e||{})},registerEffect:function(e){var t=e.name,n=e.effect,i=e.plugins,a=e.defaults,s=e.extendTimeline;(i||"").split(",").forEach(function(o){return o&&!Gt[o]&&!jt[o]&&hs(t+" effect requires "+o+" plugin.")}),Vs[t]=function(o,c,l){return n(Jt(o),Qt(c||{},a),l)},s&&(Dt.prototype[t]=function(o,c,l){return this.add(Vs[t](o,Fn(c)?c:(l=c)&&{},this),l)})},registerEase:function(e,t){Be[e]=wi(t)},parseEase:function(e,t){return arguments.length?wi(e,t):Be},getById:function(e){return tt.getById(e)},exportRoot:function(e,t){e===void 0&&(e={});var n=new Dt(e),i,a;for(n.smoothChildTiming=Bt(e.smoothChildTiming),tt.remove(n),n._dp=0,n._time=n._tTime=tt._time,i=tt._first;i;)a=i._next,(t||!(!i._dur&&i instanceof ft&&i.vars.onComplete===i._targets[0]))&&bn(n,i,i._start-i._delay),i=a;return bn(tt,n,0),n},utils:{wrap:Af,wrapYoyo:Cf,distribute:gh,random:yh,snap:_h,normalize:Sf,getUnit:Et,clamp:_f,splitColor:xh,toArray:Jt,selector:vf,mapRange:bh,pipe:bf,unitize:xf,interpolate:Mf,shuffle:mh},install:ih,effects:Vs,ticker:Ht,updateRoot:Dt.updateRoot,plugins:Gt,globalTimeline:tt,core:{PropTween:Ft,globals:ah,Tween:ft,Timeline:Dt,Animation:or,getCache:Ci,_removeLinkedListItem:Ms,suppressOverwrites:function(e){return dl=e}}};It("to,from,fromTo,delayedCall,set,killTweensOf",function(r){return ms[r]=ft[r]});Ht.add(Dt.updateRoot);sa=ms.to({},{duration:0});var Wf=function(e,t){for(var n=e._pt;n&&n.p!==t&&n.op!==t&&n.fp!==t;)n=n._next;return n},jf=function(e,t){var n=e._targets,i,a,s;for(i in t)for(a=n.length;a--;)s=e._ptLookup[a][i],s&&(s=s.d)&&(s._pt&&(s=Wf(s,i)),s&&s.modifier&&s.modifier(t[i],e,n[a],i))},qs=function(e,t){return{name:e,rawVars:1,init:function(i,a,s){s._onInit=function(o){var c,l;if(gt(a)&&(c={},It(a,function(u){return c[u]=1}),a=c),t){c={};for(l in a)c[l]=t(a[l]);a=c}jf(o,a)}}}},un=ms.registerPlugin({name:"attr",init:function(e,t,n,i,a){var s,o;for(s in t)o=this.add(e,"setAttribute",(e.getAttribute(s)||0)+"",t[s],i,a,0,0,s),o&&(o.op=s),this._props.push(s)}},{name:"endArray",init:function(e,t){for(var n=t.length;n--;)this.add(e,n,e[n]||0,t[n])}},qs("roundProps",Wo),qs("modifiers"),qs("snap",_h))||ms;ft.version=Dt.version=un.version="3.10.4";nh=1;Yu()&&Sa();Be.Power0;Be.Power1;Be.Power2;Be.Power3;Be.Power4;Be.Linear;Be.Quad;Be.Cubic;Be.Quart;Be.Quint;Be.Strong;Be.Elastic;Be.Back;Be.SteppedEase;Be.Bounce;Be.Sine;Be.Expo;Be.Circ;/*!
 * CSSPlugin 3.10.4
 * https://greensock.com
 *
 * Copyright 2008-2022, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var sc,Xn,fa,Ml,xi,oc,Kf=function(){return typeof window!="undefined"},ii={},_i=180/Math.PI,pa=Math.PI/180,ki=Math.atan2,lc=1e8,Bh=/([A-Z])/g,qf=/(left|right|width|margin|padding|x)/i,Zf=/[\s,\(]\S/,Jn={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},Ih=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},Xf=function(e,t){return t.set(t.t,t.p,e===1?t.e:Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},Jf=function(e,t){return t.set(t.t,t.p,e?Math.round((t.s+t.c*e)*1e4)/1e4+t.u:t.b,t)},Yf=function(e,t){var n=t.s+t.c*e;t.set(t.t,t.p,~~(n+(n<0?-.5:.5))+t.u,t)},Fh=function(e,t){return t.set(t.t,t.p,e?t.e:t.b,t)},zh=function(e,t){return t.set(t.t,t.p,e!==1?t.b:t.e,t)},$f=function(e,t,n){return e.style[t]=n},Qf=function(e,t,n){return e.style.setProperty(t,n)},ep=function(e,t,n){return e._gsap[t]=n},tp=function(e,t,n){return e._gsap.scaleX=e._gsap.scaleY=n},np=function(e,t,n,i,a){var s=e._gsap;s.scaleX=s.scaleY=n,s.renderTransform(a,s)},ip=function(e,t,n,i,a){var s=e._gsap;s[t]=n,s.renderTransform(a,s)},vt="transform",ai=vt+"Origin",kh,Ko=function(e,t){var n=Xn.createElementNS?Xn.createElementNS((t||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),e):Xn.createElement(e);return n.style?n:Xn.createElement(e)},Dn=function r(e,t,n){var i=getComputedStyle(e);return i[t]||i.getPropertyValue(t.replace(Bh,"-$1").toLowerCase())||i.getPropertyValue(t)||!n&&r(e,Aa(t)||t,1)||""},cc="O,Moz,ms,Ms,Webkit".split(","),Aa=function(e,t,n){var i=t||xi,a=i.style,s=5;if(e in a&&!n)return e;for(e=e.charAt(0).toUpperCase()+e.substr(1);s--&&!(cc[s]+e in a););return s<0?null:(s===3?"ms":s>=0?cc[s]:"")+e},qo=function(){Kf()&&window.document&&(sc=window,Xn=sc.document,fa=Xn.documentElement,xi=Ko("div")||{style:{}},Ko("div"),vt=Aa(vt),ai=vt+"Origin",xi.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",kh=!!Aa("perspective"),Ml=1)},Zs=function r(e){var t=Ko("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),n=this.parentNode,i=this.nextSibling,a=this.style.cssText,s;if(fa.appendChild(t),t.appendChild(this),this.style.display="block",e)try{s=this.getBBox(),this._gsapBBox=this.getBBox,this.getBBox=r}catch{}else this._gsapBBox&&(s=this._gsapBBox());return n&&(i?n.insertBefore(this,i):n.appendChild(this)),fa.removeChild(t),this.style.cssText=a,s},uc=function(e,t){for(var n=t.length;n--;)if(e.hasAttribute(t[n]))return e.getAttribute(t[n])},Oh=function(e){var t;try{t=e.getBBox()}catch{t=Zs.call(e,!0)}return t&&(t.width||t.height)||e.getBBox===Zs||(t=Zs.call(e,!0)),t&&!t.width&&!t.x&&!t.y?{x:+uc(e,["x","cx","x1"])||0,y:+uc(e,["y","cy","y1"])||0,width:0,height:0}:t},Gh=function(e){return!!(e.getCTM&&(!e.parentNode||e.ownerSVGElement)&&Oh(e))},lr=function(e,t){if(t){var n=e.style;t in ii&&t!==ai&&(t=vt),n.removeProperty?((t.substr(0,2)==="ms"||t.substr(0,6)==="webkit")&&(t="-"+t),n.removeProperty(t.replace(Bh,"-$1").toLowerCase())):n.removeAttribute(t)}},Yn=function(e,t,n,i,a,s){var o=new Ft(e._pt,t,n,0,1,s?zh:Fh);return e._pt=o,o.b=i,o.e=a,e._props.push(n),o},hc={deg:1,rad:1,turn:1},ri=function r(e,t,n,i){var a=parseFloat(n)||0,s=(n+"").trim().substr((a+"").length)||"px",o=xi.style,c=qf.test(t),l=e.tagName.toLowerCase()==="svg",u=(l?"client":"offset")+(c?"Width":"Height"),h=100,d=i==="px",p=i==="%",g,f,m,_;return i===s||!a||hc[i]||hc[s]?a:(s!=="px"&&!d&&(a=r(e,t,n,"px")),_=e.getCTM&&Gh(e),(p||s==="%")&&(ii[t]||~t.indexOf("adius"))?(g=_?e.getBBox()[c?"width":"height"]:e[u],rt(p?a/g*h:a/100*g)):(o[c?"width":"height"]=h+(d?s:i),f=~t.indexOf("adius")||i==="em"&&e.appendChild&&!l?e:e.parentNode,_&&(f=(e.ownerSVGElement||{}).parentNode),(!f||f===Xn||!f.appendChild)&&(f=Xn.body),m=f._gsap,m&&p&&m.width&&c&&m.time===Ht.time?rt(a/m.width*h):((p||s==="%")&&(o.position=Dn(e,"position")),f===e&&(o.position="static"),f.appendChild(xi),g=xi[u],f.removeChild(xi),o.position="absolute",c&&p&&(m=Ci(f),m.time=Ht.time,m.width=f[u]),rt(d?g*a/h:g&&a?h/g*a:0))))},yi=function(e,t,n,i){var a;return Ml||qo(),t in Jn&&t!=="transform"&&(t=Jn[t],~t.indexOf(",")&&(t=t.split(",")[0])),ii[t]&&t!=="transform"?(a=ur(e,i),a=t!=="transformOrigin"?a[t]:a.svg?a.origin:_s(Dn(e,ai))+" "+a.zOrigin+"px"):(a=e.style[t],(!a||a==="auto"||i||~(a+"").indexOf("calc("))&&(a=gs[t]&&gs[t](e,t,n)||Dn(e,t)||sh(e,t)||(t==="opacity"?1:0))),n&&!~(a+"").trim().indexOf(" ")?ri(e,t,a,n)+n:a},ap=function(e,t,n,i){if(!n||n==="none"){var a=Aa(t,e,1),s=a&&Dn(e,a,1);s&&s!==n?(t=a,n=s):t==="borderColor"&&(n=Dn(e,"borderTopColor"))}var o=new Ft(this._pt,e.style,t,0,1,Ph),c=0,l=0,u,h,d,p,g,f,m,_,b,A,S,y;if(o.b=n,o.e=i,n+="",i+="",i==="auto"&&(e.style[t]=i,i=Dn(e,t)||i,e.style[t]=n),u=[n,i],Ah(u),n=u[0],i=u[1],d=n.match(ra)||[],y=i.match(ra)||[],y.length){for(;h=ra.exec(i);)m=h[0],b=i.substring(c,h.index),g?g=(g+1)%5:(b.substr(-5)==="rgba("||b.substr(-5)==="hsla(")&&(g=1),m!==(f=d[l++]||"")&&(p=parseFloat(f)||0,S=f.substr((p+"").length),m.charAt(1)==="="&&(m=da(p,m)+S),_=parseFloat(m),A=m.substr((_+"").length),c=ra.lastIndex-A.length,A||(A=A||Vt.units[t]||S,c===i.length&&(i+=A,o.e+=A)),S!==A&&(p=ri(e,t,f,A)||0),o._pt={_next:o._pt,p:b||l===1?b:",",s:p,c:_-p,m:g&&g<4||t==="zIndex"?Math.round:0});o.c=c<i.length?i.substring(c,i.length):""}else o.r=t==="display"&&i==="none"?zh:Fh;return eh.test(i)&&(o.e=0),this._pt=o,o},dc={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},rp=function(e){var t=e.split(" "),n=t[0],i=t[1]||"50%";return(n==="top"||n==="bottom"||i==="left"||i==="right")&&(e=n,n=i,i=e),t[0]=dc[n]||n,t[1]=dc[i]||i,t.join(" ")},sp=function(e,t){if(t.tween&&t.tween._time===t.tween._dur){var n=t.t,i=n.style,a=t.u,s=n._gsap,o,c,l;if(a==="all"||a===!0)i.cssText="",c=1;else for(a=a.split(","),l=a.length;--l>-1;)o=a[l],ii[o]&&(c=1,o=o==="transformOrigin"?ai:vt),lr(n,o);c&&(lr(n,vt),s&&(s.svg&&n.removeAttribute("transform"),ur(n,1),s.uncache=1))}},gs={clearProps:function(e,t,n,i,a){if(a.data!=="isFromStart"){var s=e._pt=new Ft(e._pt,t,n,0,0,sp);return s.u=i,s.pr=-10,s.tween=a,e._props.push(n),1}}},cr=[1,0,0,1,0,0],Hh={},Vh=function(e){return e==="matrix(1, 0, 0, 1, 0, 0)"||e==="none"||!e},fc=function(e){var t=Dn(e,vt);return Vh(t)?cr:t.substr(7).match(Qu).map(rt)},wl=function(e,t){var n=e._gsap||Ci(e),i=e.style,a=fc(e),s,o,c,l;return n.svg&&e.getAttribute("transform")?(c=e.transform.baseVal.consolidate().matrix,a=[c.a,c.b,c.c,c.d,c.e,c.f],a.join(",")==="1,0,0,1,0,0"?cr:a):(a===cr&&!e.offsetParent&&e!==fa&&!n.svg&&(c=i.display,i.display="block",s=e.parentNode,(!s||!e.offsetParent)&&(l=1,o=e.nextSibling,fa.appendChild(e)),a=fc(e),c?i.display=c:lr(e,"display"),l&&(o?s.insertBefore(e,o):s?s.appendChild(e):fa.removeChild(e))),t&&a.length>6?[a[0],a[1],a[4],a[5],a[12],a[13]]:a)},Zo=function(e,t,n,i,a,s){var o=e._gsap,c=a||wl(e,!0),l=o.xOrigin||0,u=o.yOrigin||0,h=o.xOffset||0,d=o.yOffset||0,p=c[0],g=c[1],f=c[2],m=c[3],_=c[4],b=c[5],A=t.split(" "),S=parseFloat(A[0])||0,y=parseFloat(A[1])||0,w,E,L,z;n?c!==cr&&(E=p*m-g*f)&&(L=S*(m/E)+y*(-f/E)+(f*b-m*_)/E,z=S*(-g/E)+y*(p/E)-(p*b-g*_)/E,S=L,y=z):(w=Oh(e),S=w.x+(~A[0].indexOf("%")?S/100*w.width:S),y=w.y+(~(A[1]||A[0]).indexOf("%")?y/100*w.height:y)),i||i!==!1&&o.smooth?(_=S-l,b=y-u,o.xOffset=h+(_*p+b*f)-_,o.yOffset=d+(_*g+b*m)-b):o.xOffset=o.yOffset=0,o.xOrigin=S,o.yOrigin=y,o.smooth=!!i,o.origin=t,o.originIsAbsolute=!!n,e.style[ai]="0px 0px",s&&(Yn(s,o,"xOrigin",l,S),Yn(s,o,"yOrigin",u,y),Yn(s,o,"xOffset",h,o.xOffset),Yn(s,o,"yOffset",d,o.yOffset)),e.setAttribute("data-svg-origin",S+" "+y)},ur=function(e,t){var n=e._gsap||new Th(e);if("x"in n&&!t&&!n.uncache)return n;var i=e.style,a=n.scaleX<0,s="px",o="deg",c=Dn(e,ai)||"0",l,u,h,d,p,g,f,m,_,b,A,S,y,w,E,L,z,B,v,N,W,U,F,D,k,P,j,J,Y,Q,ae,Se;return l=u=h=g=f=m=_=b=A=0,d=p=1,n.svg=!!(e.getCTM&&Gh(e)),w=wl(e,n.svg),n.svg&&(D=(!n.uncache||c==="0px 0px")&&!t&&e.getAttribute("data-svg-origin"),Zo(e,D||c,!!D||n.originIsAbsolute,n.smooth!==!1,w)),S=n.xOrigin||0,y=n.yOrigin||0,w!==cr&&(B=w[0],v=w[1],N=w[2],W=w[3],l=U=w[4],u=F=w[5],w.length===6?(d=Math.sqrt(B*B+v*v),p=Math.sqrt(W*W+N*N),g=B||v?ki(v,B)*_i:0,_=N||W?ki(N,W)*_i+g:0,_&&(p*=Math.abs(Math.cos(_*pa))),n.svg&&(l-=S-(S*B+y*N),u-=y-(S*v+y*W))):(Se=w[6],Q=w[7],j=w[8],J=w[9],Y=w[10],ae=w[11],l=w[12],u=w[13],h=w[14],E=ki(Se,Y),f=E*_i,E&&(L=Math.cos(-E),z=Math.sin(-E),D=U*L+j*z,k=F*L+J*z,P=Se*L+Y*z,j=U*-z+j*L,J=F*-z+J*L,Y=Se*-z+Y*L,ae=Q*-z+ae*L,U=D,F=k,Se=P),E=ki(-N,Y),m=E*_i,E&&(L=Math.cos(-E),z=Math.sin(-E),D=B*L-j*z,k=v*L-J*z,P=N*L-Y*z,ae=W*z+ae*L,B=D,v=k,N=P),E=ki(v,B),g=E*_i,E&&(L=Math.cos(E),z=Math.sin(E),D=B*L+v*z,k=U*L+F*z,v=v*L-B*z,F=F*L-U*z,B=D,U=k),f&&Math.abs(f)+Math.abs(g)>359.9&&(f=g=0,m=180-m),d=rt(Math.sqrt(B*B+v*v+N*N)),p=rt(Math.sqrt(F*F+Se*Se)),E=ki(U,F),_=Math.abs(E)>2e-4?E*_i:0,A=ae?1/(ae<0?-ae:ae):0),n.svg&&(D=e.getAttribute("transform"),n.forceCSS=e.setAttribute("transform","")||!Vh(Dn(e,vt)),D&&e.setAttribute("transform",D))),Math.abs(_)>90&&Math.abs(_)<270&&(a?(d*=-1,_+=g<=0?180:-180,g+=g<=0?180:-180):(p*=-1,_+=_<=0?180:-180)),t=t||n.uncache,n.x=l-((n.xPercent=l&&(!t&&n.xPercent||(Math.round(e.offsetWidth/2)===Math.round(-l)?-50:0)))?e.offsetWidth*n.xPercent/100:0)+s,n.y=u-((n.yPercent=u&&(!t&&n.yPercent||(Math.round(e.offsetHeight/2)===Math.round(-u)?-50:0)))?e.offsetHeight*n.yPercent/100:0)+s,n.z=h+s,n.scaleX=rt(d),n.scaleY=rt(p),n.rotation=rt(g)+o,n.rotationX=rt(f)+o,n.rotationY=rt(m)+o,n.skewX=_+o,n.skewY=b+o,n.transformPerspective=A+s,(n.zOrigin=parseFloat(c.split(" ")[2])||0)&&(i[ai]=_s(c)),n.xOffset=n.yOffset=0,n.force3D=Vt.force3D,n.renderTransform=n.svg?lp:kh?Wh:op,n.uncache=0,n},_s=function(e){return(e=e.split(" "))[0]+" "+e[1]},Xs=function(e,t,n){var i=Et(t);return rt(parseFloat(t)+parseFloat(ri(e,"x",n+"px",i)))+i},op=function(e,t){t.z="0px",t.rotationY=t.rotationX="0deg",t.force3D=0,Wh(e,t)},di="0deg",Oa="0px",fi=") ",Wh=function(e,t){var n=t||this,i=n.xPercent,a=n.yPercent,s=n.x,o=n.y,c=n.z,l=n.rotation,u=n.rotationY,h=n.rotationX,d=n.skewX,p=n.skewY,g=n.scaleX,f=n.scaleY,m=n.transformPerspective,_=n.force3D,b=n.target,A=n.zOrigin,S="",y=_==="auto"&&e&&e!==1||_===!0;if(A&&(h!==di||u!==di)){var w=parseFloat(u)*pa,E=Math.sin(w),L=Math.cos(w),z;w=parseFloat(h)*pa,z=Math.cos(w),s=Xs(b,s,E*z*-A),o=Xs(b,o,-Math.sin(w)*-A),c=Xs(b,c,L*z*-A+A)}m!==Oa&&(S+="perspective("+m+fi),(i||a)&&(S+="translate("+i+"%, "+a+"%) "),(y||s!==Oa||o!==Oa||c!==Oa)&&(S+=c!==Oa||y?"translate3d("+s+", "+o+", "+c+") ":"translate("+s+", "+o+fi),l!==di&&(S+="rotate("+l+fi),u!==di&&(S+="rotateY("+u+fi),h!==di&&(S+="rotateX("+h+fi),(d!==di||p!==di)&&(S+="skew("+d+", "+p+fi),(g!==1||f!==1)&&(S+="scale("+g+", "+f+fi),b.style[vt]=S||"translate(0, 0)"},lp=function(e,t){var n=t||this,i=n.xPercent,a=n.yPercent,s=n.x,o=n.y,c=n.rotation,l=n.skewX,u=n.skewY,h=n.scaleX,d=n.scaleY,p=n.target,g=n.xOrigin,f=n.yOrigin,m=n.xOffset,_=n.yOffset,b=n.forceCSS,A=parseFloat(s),S=parseFloat(o),y,w,E,L,z;c=parseFloat(c),l=parseFloat(l),u=parseFloat(u),u&&(u=parseFloat(u),l+=u,c+=u),c||l?(c*=pa,l*=pa,y=Math.cos(c)*h,w=Math.sin(c)*h,E=Math.sin(c-l)*-d,L=Math.cos(c-l)*d,l&&(u*=pa,z=Math.tan(l-u),z=Math.sqrt(1+z*z),E*=z,L*=z,u&&(z=Math.tan(u),z=Math.sqrt(1+z*z),y*=z,w*=z)),y=rt(y),w=rt(w),E=rt(E),L=rt(L)):(y=h,L=d,w=E=0),(A&&!~(s+"").indexOf("px")||S&&!~(o+"").indexOf("px"))&&(A=ri(p,"x",s,"px"),S=ri(p,"y",o,"px")),(g||f||m||_)&&(A=rt(A+g-(g*y+f*E)+m),S=rt(S+f-(g*w+f*L)+_)),(i||a)&&(z=p.getBBox(),A=rt(A+i/100*z.width),S=rt(S+a/100*z.height)),z="matrix("+y+","+w+","+E+","+L+","+A+","+S+")",p.setAttribute("transform",z),b&&(p.style[vt]=z)},cp=function(e,t,n,i,a){var s=360,o=gt(a),c=parseFloat(a)*(o&&~a.indexOf("rad")?_i:1),l=c-i,u=i+l+"deg",h,d;return o&&(h=a.split("_")[1],h==="short"&&(l%=s,l!==l%(s/2)&&(l+=l<0?s:-s)),h==="cw"&&l<0?l=(l+s*lc)%s-~~(l/s)*s:h==="ccw"&&l>0&&(l=(l-s*lc)%s-~~(l/s)*s)),e._pt=d=new Ft(e._pt,t,n,i,l,Xf),d.e=u,d.u="deg",e._props.push(n),d},pc=function(e,t){for(var n in t)e[n]=t[n];return e},up=function(e,t,n){var i=pc({},n._gsap),a="perspective,force3D,transformOrigin,svgOrigin",s=n.style,o,c,l,u,h,d,p,g;i.svg?(l=n.getAttribute("transform"),n.setAttribute("transform",""),s[vt]=t,o=ur(n,1),lr(n,vt),n.setAttribute("transform",l)):(l=getComputedStyle(n)[vt],s[vt]=t,o=ur(n,1),s[vt]=l);for(c in ii)l=i[c],u=o[c],l!==u&&a.indexOf(c)<0&&(p=Et(l),g=Et(u),h=p!==g?ri(n,c,l,g):parseFloat(l),d=parseFloat(u),e._pt=new Ft(e._pt,o,c,h,d-h,Ih),e._pt.u=g||0,e._props.push(c));pc(o,i)};It("padding,margin,Width,Radius",function(r,e){var t="Top",n="Right",i="Bottom",a="Left",s=(e<3?[t,n,i,a]:[t+a,t+n,i+n,i+a]).map(function(o){return e<2?r+o:"border"+o+r});gs[e>1?"border"+r:r]=function(o,c,l,u,h){var d,p;if(arguments.length<4)return d=s.map(function(g){return yi(o,g,l)}),p=d.join(" "),p.split(d[0]).length===5?d[0]:p;d=(u+"").split(" "),p={},s.forEach(function(g,f){return p[g]=d[f]=d[f]||d[(f-1)/2|0]}),o.init(c,p,h)}});var jh={name:"css",register:qo,targetTest:function(e){return e.style&&e.nodeType},init:function(e,t,n,i,a){var s=this._props,o=e.style,c=n.vars.startAt,l,u,h,d,p,g,f,m,_,b,A,S,y,w,E;Ml||qo();for(f in t)if(f!=="autoRound"&&(u=t[f],!(Gt[f]&&Eh(f,t,n,i,e,a)))){if(p=typeof u,g=gs[f],p==="function"&&(u=u.call(n,i,e,a),p=typeof u),p==="string"&&~u.indexOf("random(")&&(u=rr(u)),g)g(this,e,f,u,n)&&(E=1);else if(f.substr(0,2)==="--")l=(getComputedStyle(e).getPropertyValue(f)+"").trim(),u+="",Qn.lastIndex=0,Qn.test(l)||(m=Et(l),_=Et(u)),_?m!==_&&(l=ri(e,f,l,_)+_):m&&(u+=m),this.add(o,"setProperty",l,u,i,a,0,0,f),s.push(f);else if(p!=="undefined"){if(c&&f in c?(l=typeof c[f]=="function"?c[f].call(n,i,e,a):c[f],gt(l)&&~l.indexOf("random(")&&(l=rr(l)),Et(l+"")||(l+=Vt.units[f]||Et(yi(e,f))||""),(l+"").charAt(1)==="="&&(l=yi(e,f))):l=yi(e,f),d=parseFloat(l),b=p==="string"&&u.charAt(1)==="="&&u.substr(0,2),b&&(u=u.substr(2)),h=parseFloat(u),f in Jn&&(f==="autoAlpha"&&(d===1&&yi(e,"visibility")==="hidden"&&h&&(d=0),Yn(this,o,"visibility",d?"inherit":"hidden",h?"inherit":"hidden",!h)),f!=="scale"&&f!=="transform"&&(f=Jn[f],~f.indexOf(",")&&(f=f.split(",")[0]))),A=f in ii,A){if(S||(y=e._gsap,y.renderTransform&&!t.parseTransform||ur(e,t.parseTransform),w=t.smoothOrigin!==!1&&y.smooth,S=this._pt=new Ft(this._pt,o,vt,0,1,y.renderTransform,y,0,-1),S.dep=1),f==="scale")this._pt=new Ft(this._pt,y,"scaleY",y.scaleY,(b?da(y.scaleY,b+h):h)-y.scaleY||0),s.push("scaleY",f),f+="X";else if(f==="transformOrigin"){u=rp(u),y.svg?Zo(e,u,0,w,0,this):(_=parseFloat(u.split(" ")[2])||0,_!==y.zOrigin&&Yn(this,y,"zOrigin",y.zOrigin,_),Yn(this,o,f,_s(l),_s(u)));continue}else if(f==="svgOrigin"){Zo(e,u,1,w,0,this);continue}else if(f in Hh){cp(this,y,f,d,b?da(d,b+u):u);continue}else if(f==="smoothOrigin"){Yn(this,y,"smooth",y.smooth,u);continue}else if(f==="force3D"){y[f]=u;continue}else if(f==="transform"){up(this,u,e);continue}}else f in o||(f=Aa(f)||f);if(A||(h||h===0)&&(d||d===0)&&!Zf.test(u)&&f in o)m=(l+"").substr((d+"").length),h||(h=0),_=Et(u)||(f in Vt.units?Vt.units[f]:m),m!==_&&(d=ri(e,f,l,_)),this._pt=new Ft(this._pt,A?y:o,f,d,(b?da(d,b+h):h)-d,!A&&(_==="px"||f==="zIndex")&&t.autoRound!==!1?Yf:Ih),this._pt.u=_||0,m!==_&&_!=="%"&&(this._pt.b=l,this._pt.r=Jf);else if(f in o)ap.call(this,e,f,l,b?b+u:u);else if(f in e)this.add(e,f,l||e[f],b?b+u:u,i,a);else{ml(f,u);continue}s.push(f)}}E&&Dh(this)},get:yi,aliases:Jn,getSetter:function(e,t,n){var i=Jn[t];return i&&i.indexOf(",")<0&&(t=i),t in ii&&t!==ai&&(e._gsap.x||yi(e,"x"))?n&&oc===n?t==="scale"?tp:ep:(oc=n||{})&&(t==="scale"?np:ip):e.style&&!fl(e.style[t])?$f:~t.indexOf("-")?Qf:Al(e,t)},core:{_removeProperty:lr,_getMatrix:wl}};un.utils.checkPrefix=Aa;(function(r,e,t,n){var i=It(r+","+e+","+t,function(a){ii[a]=1});It(e,function(a){Vt.units[a]="deg",Hh[a]=1}),Jn[i[13]]=r+","+e,It(n,function(a){var s=a.split(":");Jn[s[1]]=i[s[0]]})})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");It("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(r){Vt.units[r]="px"});un.registerPlugin(jh);var si=un.registerPlugin(jh)||un;si.core.Tween;/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Tl="139",hp=0,mc=1,dp=2,Kh=1,fp=2,Ya=3,hr=0,$t=1,Ca=2,qh=1,ei=0,ma=1,Xo=2,gc=3,_c=4,pp=5,aa=100,mp=101,gp=102,yc=103,vc=104,_p=200,yp=201,vp=202,bp=203,Zh=204,Xh=205,xp=206,Sp=207,Ap=208,Cp=209,Mp=210,wp=0,Tp=1,Ep=2,Jo=3,Np=4,Rp=5,Lp=6,Up=7,Ts=0,Pp=1,Dp=2,Bn=0,Bp=1,Ip=2,Fp=3,zp=4,kp=5,Jh=300,Ma=301,wa=302,Yo=303,$o=304,Es=306,Qo=1e3,on=1001,el=1002,pt=1003,bc=1004,xc=1005,Pt=1006,Op=1007,Ns=1008,Ri=1009,Gp=1010,Hp=1011,dr=1012,Vp=1013,ls=1014,Si=1015,ga=1016,Wp=1017,jp=1018,_a=1020,Kp=1021,qp=1022,ln=1023,Zp=1024,Xp=1025,Ti=1026,Ta=1027,Jp=1028,Yp=1029,$p=1030,Qp=1031,em=1033,Js=33776,Ys=33777,$s=33778,Qs=33779,Sc=35840,Ac=35841,Cc=35842,Mc=35843,tm=36196,wc=37492,Tc=37496,Ec=37808,Nc=37809,Rc=37810,Lc=37811,Uc=37812,Pc=37813,Dc=37814,Bc=37815,Ic=37816,Fc=37817,zc=37818,kc=37819,Oc=37820,Gc=37821,Hc=36492,nm=2200,im=2201,am=2202,ys=2300,vs=2301,eo=2302,oa=2400,la=2401,bs=2402,El=2500,Yh=2501,rm=0,zn=3e3,$e=3001,sm=3200,om=3201,Ra=0,lm=1,Ln="srgb",Ai="srgb-linear",to=7680,cm=519,fr=35044,xs=35048,Vc="300 es",tl=1035;class Ui{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const a=i.indexOf(t);a!==-1&&i.splice(a,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let a=0,s=i.length;a<s;a++)i[a].call(this,e);e.target=null}}}const yt=[];for(let r=0;r<256;r++)yt[r]=(r<16?"0":"")+r.toString(16);const no=Math.PI/180,nl=180/Math.PI;function xn(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(yt[r&255]+yt[r>>8&255]+yt[r>>16&255]+yt[r>>24&255]+"-"+yt[e&255]+yt[e>>8&255]+"-"+yt[e>>16&15|64]+yt[e>>24&255]+"-"+yt[t&63|128]+yt[t>>8&255]+"-"+yt[t>>16&255]+yt[t>>24&255]+yt[n&255]+yt[n>>8&255]+yt[n>>16&255]+yt[n>>24&255]).toLowerCase()}function wt(r,e,t){return Math.max(e,Math.min(t,r))}function um(r,e){return(r%e+e)%e}function io(r,e,t){return(1-t)*r+t*e}function Wc(r){return(r&r-1)===0&&r!==0}function il(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}class ee{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),a=this.x-e.x,s=this.y-e.y;return this.x=a*n-s*i+e.x,this.y=a*i+s*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ee.prototype.isVector2=!0;class xt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,a,s,o,c,l){const u=this.elements;return u[0]=e,u[1]=i,u[2]=o,u[3]=t,u[4]=a,u[5]=c,u[6]=n,u[7]=s,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,a=this.elements,s=n[0],o=n[3],c=n[6],l=n[1],u=n[4],h=n[7],d=n[2],p=n[5],g=n[8],f=i[0],m=i[3],_=i[6],b=i[1],A=i[4],S=i[7],y=i[2],w=i[5],E=i[8];return a[0]=s*f+o*b+c*y,a[3]=s*m+o*A+c*w,a[6]=s*_+o*S+c*E,a[1]=l*f+u*b+h*y,a[4]=l*m+u*A+h*w,a[7]=l*_+u*S+h*E,a[2]=d*f+p*b+g*y,a[5]=d*m+p*A+g*w,a[8]=d*_+p*S+g*E,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],a=e[3],s=e[4],o=e[5],c=e[6],l=e[7],u=e[8];return t*s*u-t*o*l-n*a*u+n*o*c+i*a*l-i*s*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],a=e[3],s=e[4],o=e[5],c=e[6],l=e[7],u=e[8],h=u*s-o*l,d=o*c-u*a,p=l*a-s*c,g=t*h+n*d+i*p;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/g;return e[0]=h*f,e[1]=(i*l-u*n)*f,e[2]=(o*n-i*s)*f,e[3]=d*f,e[4]=(u*t-i*c)*f,e[5]=(i*a-o*t)*f,e[6]=p*f,e[7]=(n*c-l*t)*f,e[8]=(s*t-n*a)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,a,s,o){const c=Math.cos(a),l=Math.sin(a);return this.set(n*c,n*l,-n*(c*s+l*o)+s+e,-i*l,i*c,-i*(-l*s+c*o)+o+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,a=i[0],s=i[3],o=i[6],c=i[1],l=i[4],u=i[7];return i[0]=t*a+n*c,i[3]=t*s+n*l,i[6]=t*o+n*u,i[1]=-n*a+t*c,i[4]=-n*s+t*l,i[7]=-n*o+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}xt.prototype.isMatrix3=!0;function $h(r){for(let e=r.length-1;e>=0;--e)if(r[e]>65535)return!0;return!1}function pr(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Ei(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function cs(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const ao={[Ln]:{[Ai]:Ei},[Ai]:{[Ln]:cs}},nn={legacyMode:!0,get workingColorSpace(){return Ai},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.legacyMode||e===t||!e||!t)return r;if(ao[e]&&ao[e][t]!==void 0){const n=ao[e][t];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}},Qh={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ct={r:0,g:0,b:0},an={h:0,s:0,l:0},Nr={h:0,s:0,l:0};function ro(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function Rr(r,e){return e.r=r.r,e.g=r.g,e.b=r.b,e}class pe{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Ln){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,nn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Ai){return this.r=e,this.g=t,this.b=n,nn.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Ai){if(e=um(e,1),t=wt(t,0,1),n=wt(n,0,1),t===0)this.r=this.g=this.b=n;else{const a=n<=.5?n*(1+t):n+t-n*t,s=2*n-a;this.r=ro(s,a,e+1/3),this.g=ro(s,a,e),this.b=ro(s,a,e-1/3)}return nn.toWorkingColorSpace(this,i),this}setStyle(e,t=Ln){function n(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let a;const s=i[1],o=i[2];switch(s){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,nn.toWorkingColorSpace(this,t),n(a[4]),this;if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,nn.toWorkingColorSpace(this,t),n(a[4]),this;break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const c=parseFloat(a[1])/360,l=parseInt(a[2],10)/100,u=parseInt(a[3],10)/100;return n(a[4]),this.setHSL(c,l,u,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const a=i[1],s=a.length;if(s===3)return this.r=parseInt(a.charAt(0)+a.charAt(0),16)/255,this.g=parseInt(a.charAt(1)+a.charAt(1),16)/255,this.b=parseInt(a.charAt(2)+a.charAt(2),16)/255,nn.toWorkingColorSpace(this,t),this;if(s===6)return this.r=parseInt(a.charAt(0)+a.charAt(1),16)/255,this.g=parseInt(a.charAt(2)+a.charAt(3),16)/255,this.b=parseInt(a.charAt(4)+a.charAt(5),16)/255,nn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Ln){const n=Qh[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ei(e.r),this.g=Ei(e.g),this.b=Ei(e.b),this}copyLinearToSRGB(e){return this.r=cs(e.r),this.g=cs(e.g),this.b=cs(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Ln){return nn.fromWorkingColorSpace(Rr(this,ct),e),wt(ct.r*255,0,255)<<16^wt(ct.g*255,0,255)<<8^wt(ct.b*255,0,255)<<0}getHexString(e=Ln){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ai){nn.fromWorkingColorSpace(Rr(this,ct),t);const n=ct.r,i=ct.g,a=ct.b,s=Math.max(n,i,a),o=Math.min(n,i,a);let c,l;const u=(o+s)/2;if(o===s)c=0,l=0;else{const h=s-o;switch(l=u<=.5?h/(s+o):h/(2-s-o),s){case n:c=(i-a)/h+(i<a?6:0);break;case i:c=(a-n)/h+2;break;case a:c=(n-i)/h+4;break}c/=6}return e.h=c,e.s=l,e.l=u,e}getRGB(e,t=Ai){return nn.fromWorkingColorSpace(Rr(this,ct),t),e.r=ct.r,e.g=ct.g,e.b=ct.b,e}getStyle(e=Ln){return nn.fromWorkingColorSpace(Rr(this,ct),e),e!==Ln?`color(${e} ${ct.r} ${ct.g} ${ct.b})`:`rgb(${ct.r*255|0},${ct.g*255|0},${ct.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(an),an.h+=e,an.s+=t,an.l+=n,this.setHSL(an.h,an.s,an.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(an),e.getHSL(Nr);const n=io(an.h,Nr.h,t),i=io(an.s,Nr.s,t),a=io(an.l,Nr.l,t);return this.setHSL(n,i,a),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}pe.NAMES=Qh;pe.prototype.isColor=!0;pe.prototype.r=1;pe.prototype.g=1;pe.prototype.b=1;let Oi;class Pi{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Oi===void 0&&(Oi=pr("canvas")),Oi.width=e.width,Oi.height=e.height;const n=Oi.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Oi}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const t=pr("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),a=i.data;for(let s=0;s<a.length;s++)a[s]=Ei(a[s]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Ei(t[n]/255)*255):t[n]=Ei(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class ed{constructor(e=null){this.uuid=xn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let a;if(Array.isArray(i)){a=[];for(let s=0,o=i.length;s<o;s++)i[s].isDataTexture?a.push(so(i[s].image)):a.push(so(i[s]))}else a=so(i);n.url=a}return t||(e.images[this.uuid]=n),n}}function so(r){return typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap?Pi.getDataURL(r):r.data?{data:Array.prototype.slice.call(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}ed.prototype.isSource=!0;let hm=0;class _t extends Ui{constructor(e=_t.DEFAULT_IMAGE,t=_t.DEFAULT_MAPPING,n=on,i=on,a=Pt,s=Ns,o=ln,c=Ri,l=1,u=zn){super(),Object.defineProperty(this,"id",{value:hm++}),this.uuid=xn(),this.name="",this.source=new ed(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=a,this.minFilter=s,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=c,this.offset=new ee(0,0),this.repeat=new ee(1,1),this.center=new ee(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new xt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Jh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Qo:e.x=e.x-Math.floor(e.x);break;case on:e.x=e.x<0?0:1;break;case el:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Qo:e.y=e.y-Math.floor(e.y);break;case on:e.y=e.y<0?0:1;break;case el:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}_t.DEFAULT_IMAGE=null;_t.DEFAULT_MAPPING=Jh;_t.prototype.isTexture=!0;class je{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,a=this.w,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i+s[12]*a,this.y=s[1]*t+s[5]*n+s[9]*i+s[13]*a,this.z=s[2]*t+s[6]*n+s[10]*i+s[14]*a,this.w=s[3]*t+s[7]*n+s[11]*i+s[15]*a,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,a;const c=e.elements,l=c[0],u=c[4],h=c[8],d=c[1],p=c[5],g=c[9],f=c[2],m=c[6],_=c[10];if(Math.abs(u-d)<.01&&Math.abs(h-f)<.01&&Math.abs(g-m)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+f)<.1&&Math.abs(g+m)<.1&&Math.abs(l+p+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const A=(l+1)/2,S=(p+1)/2,y=(_+1)/2,w=(u+d)/4,E=(h+f)/4,L=(g+m)/4;return A>S&&A>y?A<.01?(n=0,i=.707106781,a=.707106781):(n=Math.sqrt(A),i=w/n,a=E/n):S>y?S<.01?(n=.707106781,i=0,a=.707106781):(i=Math.sqrt(S),n=w/i,a=L/i):y<.01?(n=.707106781,i=.707106781,a=0):(a=Math.sqrt(y),n=E/a,i=L/a),this.set(n,i,a,t),this}let b=Math.sqrt((m-g)*(m-g)+(h-f)*(h-f)+(d-u)*(d-u));return Math.abs(b)<.001&&(b=1),this.x=(m-g)/b,this.y=(h-f)/b,this.z=(d-u)/b,this.w=Math.acos((l+p+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}je.prototype.isVector4=!0;class Wt extends Ui{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new je(0,0,e,t),this.scissorTest=!1,this.viewport=new je(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new _t(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Pt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}Wt.prototype.isWebGLRenderTarget=!0;class Rs extends _t{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=pt,this.minFilter=pt,this.wrapR=on,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Rs.prototype.isDataArrayTexture=!0;class dm extends Wt{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new Rs(null,e,t,n),this.texture.isRenderTargetTexture=!0}}dm.prototype.isWebGLArrayRenderTarget=!0;class Nl extends _t{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=pt,this.minFilter=pt,this.wrapR=on,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Nl.prototype.isData3DTexture=!0;class fm extends Wt{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new Nl(null,e,t,n),this.texture.isRenderTargetTexture=!0}}fm.prototype.isWebGL3DRenderTarget=!0;class pm extends Wt{constructor(e,t,n,i={}){super(e,t,i);const a=this.texture;this.texture=[];for(let s=0;s<n;s++)this.texture[s]=a.clone(),this.texture[s].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,a=this.texture.length;i<a;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}pm.prototype.isWebGLMultipleRenderTargets=!0;class zt{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,a,s,o){let c=n[i+0],l=n[i+1],u=n[i+2],h=n[i+3];const d=a[s+0],p=a[s+1],g=a[s+2],f=a[s+3];if(o===0){e[t+0]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(o===1){e[t+0]=d,e[t+1]=p,e[t+2]=g,e[t+3]=f;return}if(h!==f||c!==d||l!==p||u!==g){let m=1-o;const _=c*d+l*p+u*g+h*f,b=_>=0?1:-1,A=1-_*_;if(A>Number.EPSILON){const y=Math.sqrt(A),w=Math.atan2(y,_*b);m=Math.sin(m*w)/y,o=Math.sin(o*w)/y}const S=o*b;if(c=c*m+d*S,l=l*m+p*S,u=u*m+g*S,h=h*m+f*S,m===1-o){const y=1/Math.sqrt(c*c+l*l+u*u+h*h);c*=y,l*=y,u*=y,h*=y}}e[t]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,a,s){const o=n[i],c=n[i+1],l=n[i+2],u=n[i+3],h=a[s],d=a[s+1],p=a[s+2],g=a[s+3];return e[t]=o*g+u*h+c*p-l*d,e[t+1]=c*g+u*d+l*h-o*p,e[t+2]=l*g+u*p+o*d-c*h,e[t+3]=u*g-o*h-c*d-l*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,a=e._z,s=e._order,o=Math.cos,c=Math.sin,l=o(n/2),u=o(i/2),h=o(a/2),d=c(n/2),p=c(i/2),g=c(a/2);switch(s){case"XYZ":this._x=d*u*h+l*p*g,this._y=l*p*h-d*u*g,this._z=l*u*g+d*p*h,this._w=l*u*h-d*p*g;break;case"YXZ":this._x=d*u*h+l*p*g,this._y=l*p*h-d*u*g,this._z=l*u*g-d*p*h,this._w=l*u*h+d*p*g;break;case"ZXY":this._x=d*u*h-l*p*g,this._y=l*p*h+d*u*g,this._z=l*u*g+d*p*h,this._w=l*u*h-d*p*g;break;case"ZYX":this._x=d*u*h-l*p*g,this._y=l*p*h+d*u*g,this._z=l*u*g-d*p*h,this._w=l*u*h+d*p*g;break;case"YZX":this._x=d*u*h+l*p*g,this._y=l*p*h+d*u*g,this._z=l*u*g-d*p*h,this._w=l*u*h-d*p*g;break;case"XZY":this._x=d*u*h-l*p*g,this._y=l*p*h-d*u*g,this._z=l*u*g+d*p*h,this._w=l*u*h+d*p*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],a=t[8],s=t[1],o=t[5],c=t[9],l=t[2],u=t[6],h=t[10],d=n+o+h;if(d>0){const p=.5/Math.sqrt(d+1);this._w=.25/p,this._x=(u-c)*p,this._y=(a-l)*p,this._z=(s-i)*p}else if(n>o&&n>h){const p=2*Math.sqrt(1+n-o-h);this._w=(u-c)/p,this._x=.25*p,this._y=(i+s)/p,this._z=(a+l)/p}else if(o>h){const p=2*Math.sqrt(1+o-n-h);this._w=(a-l)/p,this._x=(i+s)/p,this._y=.25*p,this._z=(c+u)/p}else{const p=2*Math.sqrt(1+h-n-o);this._w=(s-i)/p,this._x=(a+l)/p,this._y=(c+u)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(wt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,a=e._z,s=e._w,o=t._x,c=t._y,l=t._z,u=t._w;return this._x=n*u+s*o+i*l-a*c,this._y=i*u+s*c+a*o-n*l,this._z=a*u+s*l+n*c-i*o,this._w=s*u-n*o-i*c-a*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,a=this._z,s=this._w;let o=s*e._w+n*e._x+i*e._y+a*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=s,this._x=n,this._y=i,this._z=a,this;const c=1-o*o;if(c<=Number.EPSILON){const p=1-t;return this._w=p*s+t*this._w,this._x=p*n+t*this._x,this._y=p*i+t*this._y,this._z=p*a+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(c),u=Math.atan2(l,o),h=Math.sin((1-t)*u)/l,d=Math.sin(t*u)/l;return this._w=s*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=a*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),a=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(a),n*Math.cos(a),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}zt.prototype.isQuaternion=!0;class T{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(jc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(jc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,a=e.elements;return this.x=a[0]*t+a[3]*n+a[6]*i,this.y=a[1]*t+a[4]*n+a[7]*i,this.z=a[2]*t+a[5]*n+a[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,a=e.elements,s=1/(a[3]*t+a[7]*n+a[11]*i+a[15]);return this.x=(a[0]*t+a[4]*n+a[8]*i+a[12])*s,this.y=(a[1]*t+a[5]*n+a[9]*i+a[13])*s,this.z=(a[2]*t+a[6]*n+a[10]*i+a[14])*s,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,a=e.x,s=e.y,o=e.z,c=e.w,l=c*t+s*i-o*n,u=c*n+o*t-a*i,h=c*i+a*n-s*t,d=-a*t-s*n-o*i;return this.x=l*c+d*-a+u*-o-h*-s,this.y=u*c+d*-s+h*-a-l*-o,this.z=h*c+d*-o+l*-s-u*-a,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i,this.y=a[1]*t+a[5]*n+a[9]*i,this.z=a[2]*t+a[6]*n+a[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,a=e.z,s=t.x,o=t.y,c=t.z;return this.x=i*c-a*o,this.y=a*s-n*c,this.z=n*o-i*s,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return oo.copy(this).projectOnVector(e),this.sub(oo)}reflect(e){return this.sub(oo.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(wt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}T.prototype.isVector3=!0;const oo=new T,jc=new zt;class hn{constructor(e=new T(1/0,1/0,1/0),t=new T(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,a=-1/0,s=-1/0,o=-1/0;for(let c=0,l=e.length;c<l;c+=3){const u=e[c],h=e[c+1],d=e[c+2];u<t&&(t=u),h<n&&(n=h),d<i&&(i=d),u>a&&(a=u),h>s&&(s=h),d>o&&(o=d)}return this.min.set(t,n,i),this.max.set(a,s,o),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,a=-1/0,s=-1/0,o=-1/0;for(let c=0,l=e.count;c<l;c++){const u=e.getX(c),h=e.getY(c),d=e.getZ(c);u<t&&(t=u),h<n&&(n=h),d<i&&(i=d),u>a&&(a=u),h>s&&(s=h),d>o&&(o=d)}return this.min.set(t,n,i),this.max.set(a,s,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=pi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const a=n.attributes.position;for(let s=0,o=a.count;s<o;s++)pi.fromBufferAttribute(a,s).applyMatrix4(e.matrixWorld),this.expandByPoint(pi)}else n.boundingBox===null&&n.computeBoundingBox(),lo.copy(n.boundingBox),lo.applyMatrix4(e.matrixWorld),this.union(lo);const i=e.children;for(let a=0,s=i.length;a<s;a++)this.expandByObject(i[a],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,pi),pi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ga),Lr.subVectors(this.max,Ga),Gi.subVectors(e.a,Ga),Hi.subVectors(e.b,Ga),Vi.subVectors(e.c,Ga),On.subVectors(Hi,Gi),Gn.subVectors(Vi,Hi),mi.subVectors(Gi,Vi);let t=[0,-On.z,On.y,0,-Gn.z,Gn.y,0,-mi.z,mi.y,On.z,0,-On.x,Gn.z,0,-Gn.x,mi.z,0,-mi.x,-On.y,On.x,0,-Gn.y,Gn.x,0,-mi.y,mi.x,0];return!co(t,Gi,Hi,Vi,Lr)||(t=[1,0,0,0,1,0,0,0,1],!co(t,Gi,Hi,Vi,Lr))?!1:(Ur.crossVectors(On,Gn),t=[Ur.x,Ur.y,Ur.z],co(t,Gi,Hi,Vi,Lr))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return pi.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(pi).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Cn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Cn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Cn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Cn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Cn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Cn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Cn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Cn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Cn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}hn.prototype.isBox3=!0;const Cn=[new T,new T,new T,new T,new T,new T,new T,new T],pi=new T,lo=new hn,Gi=new T,Hi=new T,Vi=new T,On=new T,Gn=new T,mi=new T,Ga=new T,Lr=new T,Ur=new T,gi=new T;function co(r,e,t,n,i){for(let a=0,s=r.length-3;a<=s;a+=3){gi.fromArray(r,a);const o=i.x*Math.abs(gi.x)+i.y*Math.abs(gi.y)+i.z*Math.abs(gi.z),c=e.dot(gi),l=t.dot(gi),u=n.dot(gi);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>o)return!1}return!0}const mm=new hn,Kc=new T,Pr=new T,uo=new T;class La{constructor(e=new T,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):mm.setFromPoints(e).getCenter(n);let i=0;for(let a=0,s=e.length;a<s;a++)i=Math.max(i,n.distanceToSquared(e[a]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){uo.subVectors(e,this.center);const t=uo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(uo.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?Pr.set(0,0,1).multiplyScalar(e.radius):Pr.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Kc.copy(e.center).add(Pr)),this.expandByPoint(Kc.copy(e.center).sub(Pr)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Mn=new T,ho=new T,Dr=new T,Hn=new T,fo=new T,Br=new T,po=new T;class Di{constructor(e=new T,t=new T(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Mn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Mn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Mn.copy(this.direction).multiplyScalar(t).add(this.origin),Mn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){ho.copy(e).add(t).multiplyScalar(.5),Dr.copy(t).sub(e).normalize(),Hn.copy(this.origin).sub(ho);const a=e.distanceTo(t)*.5,s=-this.direction.dot(Dr),o=Hn.dot(this.direction),c=-Hn.dot(Dr),l=Hn.lengthSq(),u=Math.abs(1-s*s);let h,d,p,g;if(u>0)if(h=s*c-o,d=s*o-c,g=a*u,h>=0)if(d>=-g)if(d<=g){const f=1/u;h*=f,d*=f,p=h*(h+s*d+2*o)+d*(s*h+d+2*c)+l}else d=a,h=Math.max(0,-(s*d+o)),p=-h*h+d*(d+2*c)+l;else d=-a,h=Math.max(0,-(s*d+o)),p=-h*h+d*(d+2*c)+l;else d<=-g?(h=Math.max(0,-(-s*a+o)),d=h>0?-a:Math.min(Math.max(-a,-c),a),p=-h*h+d*(d+2*c)+l):d<=g?(h=0,d=Math.min(Math.max(-a,-c),a),p=d*(d+2*c)+l):(h=Math.max(0,-(s*a+o)),d=h>0?a:Math.min(Math.max(-a,-c),a),p=-h*h+d*(d+2*c)+l);else d=s>0?-a:a,h=Math.max(0,-(s*d+o)),p=-h*h+d*(d+2*c)+l;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Dr).multiplyScalar(d).add(ho),p}intersectSphere(e,t){Mn.subVectors(e.center,this.origin);const n=Mn.dot(this.direction),i=Mn.dot(Mn)-n*n,a=e.radius*e.radius;if(i>a)return null;const s=Math.sqrt(a-i),o=n-s,c=n+s;return o<0&&c<0?null:o<0?this.at(c,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,a,s,o,c;const l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,i=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,i=(e.min.x-d.x)*l),u>=0?(a=(e.min.y-d.y)*u,s=(e.max.y-d.y)*u):(a=(e.max.y-d.y)*u,s=(e.min.y-d.y)*u),n>s||a>i||((a>n||n!==n)&&(n=a),(s<i||i!==i)&&(i=s),h>=0?(o=(e.min.z-d.z)*h,c=(e.max.z-d.z)*h):(o=(e.max.z-d.z)*h,c=(e.min.z-d.z)*h),n>c||o>i)||((o>n||n!==n)&&(n=o),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Mn)!==null}intersectTriangle(e,t,n,i,a){fo.subVectors(t,e),Br.subVectors(n,e),po.crossVectors(fo,Br);let s=this.direction.dot(po),o;if(s>0){if(i)return null;o=1}else if(s<0)o=-1,s=-s;else return null;Hn.subVectors(this.origin,e);const c=o*this.direction.dot(Br.crossVectors(Hn,Br));if(c<0)return null;const l=o*this.direction.dot(fo.cross(Hn));if(l<0||c+l>s)return null;const u=-o*Hn.dot(po);return u<0?null:this.at(u/s,a)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class me{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,a,s,o,c,l,u,h,d,p,g,f,m){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=a,_[5]=s,_[9]=o,_[13]=c,_[2]=l,_[6]=u,_[10]=h,_[14]=d,_[3]=p,_[7]=g,_[11]=f,_[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new me().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Wi.setFromMatrixColumn(e,0).length(),a=1/Wi.setFromMatrixColumn(e,1).length(),s=1/Wi.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=0,t[8]=n[8]*s,t[9]=n[9]*s,t[10]=n[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,a=e.z,s=Math.cos(n),o=Math.sin(n),c=Math.cos(i),l=Math.sin(i),u=Math.cos(a),h=Math.sin(a);if(e.order==="XYZ"){const d=s*u,p=s*h,g=o*u,f=o*h;t[0]=c*u,t[4]=-c*h,t[8]=l,t[1]=p+g*l,t[5]=d-f*l,t[9]=-o*c,t[2]=f-d*l,t[6]=g+p*l,t[10]=s*c}else if(e.order==="YXZ"){const d=c*u,p=c*h,g=l*u,f=l*h;t[0]=d+f*o,t[4]=g*o-p,t[8]=s*l,t[1]=s*h,t[5]=s*u,t[9]=-o,t[2]=p*o-g,t[6]=f+d*o,t[10]=s*c}else if(e.order==="ZXY"){const d=c*u,p=c*h,g=l*u,f=l*h;t[0]=d-f*o,t[4]=-s*h,t[8]=g+p*o,t[1]=p+g*o,t[5]=s*u,t[9]=f-d*o,t[2]=-s*l,t[6]=o,t[10]=s*c}else if(e.order==="ZYX"){const d=s*u,p=s*h,g=o*u,f=o*h;t[0]=c*u,t[4]=g*l-p,t[8]=d*l+f,t[1]=c*h,t[5]=f*l+d,t[9]=p*l-g,t[2]=-l,t[6]=o*c,t[10]=s*c}else if(e.order==="YZX"){const d=s*c,p=s*l,g=o*c,f=o*l;t[0]=c*u,t[4]=f-d*h,t[8]=g*h+p,t[1]=h,t[5]=s*u,t[9]=-o*u,t[2]=-l*u,t[6]=p*h+g,t[10]=d-f*h}else if(e.order==="XZY"){const d=s*c,p=s*l,g=o*c,f=o*l;t[0]=c*u,t[4]=-h,t[8]=l*u,t[1]=d*h+f,t[5]=s*u,t[9]=p*h-g,t[2]=g*h-p,t[6]=o*u,t[10]=f*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(gm,e,_m)}lookAt(e,t,n){const i=this.elements;return kt.subVectors(e,t),kt.lengthSq()===0&&(kt.z=1),kt.normalize(),Vn.crossVectors(n,kt),Vn.lengthSq()===0&&(Math.abs(n.z)===1?kt.x+=1e-4:kt.z+=1e-4,kt.normalize(),Vn.crossVectors(n,kt)),Vn.normalize(),Ir.crossVectors(kt,Vn),i[0]=Vn.x,i[4]=Ir.x,i[8]=kt.x,i[1]=Vn.y,i[5]=Ir.y,i[9]=kt.y,i[2]=Vn.z,i[6]=Ir.z,i[10]=kt.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,a=this.elements,s=n[0],o=n[4],c=n[8],l=n[12],u=n[1],h=n[5],d=n[9],p=n[13],g=n[2],f=n[6],m=n[10],_=n[14],b=n[3],A=n[7],S=n[11],y=n[15],w=i[0],E=i[4],L=i[8],z=i[12],B=i[1],v=i[5],N=i[9],W=i[13],U=i[2],F=i[6],D=i[10],k=i[14],P=i[3],j=i[7],J=i[11],Y=i[15];return a[0]=s*w+o*B+c*U+l*P,a[4]=s*E+o*v+c*F+l*j,a[8]=s*L+o*N+c*D+l*J,a[12]=s*z+o*W+c*k+l*Y,a[1]=u*w+h*B+d*U+p*P,a[5]=u*E+h*v+d*F+p*j,a[9]=u*L+h*N+d*D+p*J,a[13]=u*z+h*W+d*k+p*Y,a[2]=g*w+f*B+m*U+_*P,a[6]=g*E+f*v+m*F+_*j,a[10]=g*L+f*N+m*D+_*J,a[14]=g*z+f*W+m*k+_*Y,a[3]=b*w+A*B+S*U+y*P,a[7]=b*E+A*v+S*F+y*j,a[11]=b*L+A*N+S*D+y*J,a[15]=b*z+A*W+S*k+y*Y,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],a=e[12],s=e[1],o=e[5],c=e[9],l=e[13],u=e[2],h=e[6],d=e[10],p=e[14],g=e[3],f=e[7],m=e[11],_=e[15];return g*(+a*c*h-i*l*h-a*o*d+n*l*d+i*o*p-n*c*p)+f*(+t*c*p-t*l*d+a*s*d-i*s*p+i*l*u-a*c*u)+m*(+t*l*h-t*o*p-a*s*h+n*s*p+a*o*u-n*l*u)+_*(-i*o*u-t*c*h+t*o*d+i*s*h-n*s*d+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],a=e[3],s=e[4],o=e[5],c=e[6],l=e[7],u=e[8],h=e[9],d=e[10],p=e[11],g=e[12],f=e[13],m=e[14],_=e[15],b=h*m*l-f*d*l+f*c*p-o*m*p-h*c*_+o*d*_,A=g*d*l-u*m*l-g*c*p+s*m*p+u*c*_-s*d*_,S=u*f*l-g*h*l+g*o*p-s*f*p-u*o*_+s*h*_,y=g*h*c-u*f*c-g*o*d+s*f*d+u*o*m-s*h*m,w=t*b+n*A+i*S+a*y;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/w;return e[0]=b*E,e[1]=(f*d*a-h*m*a-f*i*p+n*m*p+h*i*_-n*d*_)*E,e[2]=(o*m*a-f*c*a+f*i*l-n*m*l-o*i*_+n*c*_)*E,e[3]=(h*c*a-o*d*a-h*i*l+n*d*l+o*i*p-n*c*p)*E,e[4]=A*E,e[5]=(u*m*a-g*d*a+g*i*p-t*m*p-u*i*_+t*d*_)*E,e[6]=(g*c*a-s*m*a-g*i*l+t*m*l+s*i*_-t*c*_)*E,e[7]=(s*d*a-u*c*a+u*i*l-t*d*l-s*i*p+t*c*p)*E,e[8]=S*E,e[9]=(g*h*a-u*f*a-g*n*p+t*f*p+u*n*_-t*h*_)*E,e[10]=(s*f*a-g*o*a+g*n*l-t*f*l-s*n*_+t*o*_)*E,e[11]=(u*o*a-s*h*a-u*n*l+t*h*l+s*n*p-t*o*p)*E,e[12]=y*E,e[13]=(u*f*i-g*h*i+g*n*d-t*f*d-u*n*m+t*h*m)*E,e[14]=(g*o*i-s*f*i-g*n*c+t*f*c+s*n*m-t*o*m)*E,e[15]=(s*h*i-u*o*i+u*n*c-t*h*c-s*n*d+t*o*d)*E,this}scale(e){const t=this.elements,n=e.x,i=e.y,a=e.z;return t[0]*=n,t[4]*=i,t[8]*=a,t[1]*=n,t[5]*=i,t[9]*=a,t[2]*=n,t[6]*=i,t[10]*=a,t[3]*=n,t[7]*=i,t[11]*=a,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),a=1-n,s=e.x,o=e.y,c=e.z,l=a*s,u=a*o;return this.set(l*s+n,l*o-i*c,l*c+i*o,0,l*o+i*c,u*o+n,u*c-i*s,0,l*c-i*o,u*c+i*s,a*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,a,s){return this.set(1,n,a,0,e,1,s,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,a=t._x,s=t._y,o=t._z,c=t._w,l=a+a,u=s+s,h=o+o,d=a*l,p=a*u,g=a*h,f=s*u,m=s*h,_=o*h,b=c*l,A=c*u,S=c*h,y=n.x,w=n.y,E=n.z;return i[0]=(1-(f+_))*y,i[1]=(p+S)*y,i[2]=(g-A)*y,i[3]=0,i[4]=(p-S)*w,i[5]=(1-(d+_))*w,i[6]=(m+b)*w,i[7]=0,i[8]=(g+A)*E,i[9]=(m-b)*E,i[10]=(1-(d+f))*E,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let a=Wi.set(i[0],i[1],i[2]).length();const s=Wi.set(i[4],i[5],i[6]).length(),o=Wi.set(i[8],i[9],i[10]).length();this.determinant()<0&&(a=-a),e.x=i[12],e.y=i[13],e.z=i[14],rn.copy(this);const l=1/a,u=1/s,h=1/o;return rn.elements[0]*=l,rn.elements[1]*=l,rn.elements[2]*=l,rn.elements[4]*=u,rn.elements[5]*=u,rn.elements[6]*=u,rn.elements[8]*=h,rn.elements[9]*=h,rn.elements[10]*=h,t.setFromRotationMatrix(rn),n.x=a,n.y=s,n.z=o,this}makePerspective(e,t,n,i,a,s){s===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,c=2*a/(t-e),l=2*a/(n-i),u=(t+e)/(t-e),h=(n+i)/(n-i),d=-(s+a)/(s-a),p=-2*s*a/(s-a);return o[0]=c,o[4]=0,o[8]=u,o[12]=0,o[1]=0,o[5]=l,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,i,a,s){const o=this.elements,c=1/(t-e),l=1/(n-i),u=1/(s-a),h=(t+e)*c,d=(n+i)*l,p=(s+a)*u;return o[0]=2*c,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=-2*u,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}me.prototype.isMatrix4=!0;const Wi=new T,rn=new me,gm=new T(0,0,0),_m=new T(1,1,1),Vn=new T,Ir=new T,kt=new T,qc=new me,Zc=new zt;class Bi{constructor(e=0,t=0,n=0,i=Bi.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,a=i[0],s=i[4],o=i[8],c=i[1],l=i[5],u=i[9],h=i[2],d=i[6],p=i[10];switch(t){case"XYZ":this._y=Math.asin(wt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-wt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,a),this._z=0);break;case"ZXY":this._x=Math.asin(wt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,p),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(c,a));break;case"ZYX":this._y=Math.asin(-wt(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(wt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,a)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-wt(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return qc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(qc,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Zc.setFromEuler(this),this.setFromQuaternion(Zc,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Bi.prototype.isEuler=!0;Bi.DefaultOrder="XYZ";Bi.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Rl{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ym=0;const Xc=new T,ji=new zt,wn=new me,Fr=new T,Ha=new T,vm=new T,bm=new zt,Jc=new T(1,0,0),Yc=new T(0,1,0),$c=new T(0,0,1),xm={type:"added"},Qc={type:"removed"};class Ve extends Ui{constructor(){super(),Object.defineProperty(this,"id",{value:ym++}),this.uuid=xn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ve.DefaultUp.clone();const e=new T,t=new Bi,n=new zt,i=new T(1,1,1);function a(){n.setFromEuler(t,!1)}function s(){t.setFromQuaternion(n,void 0,!1)}t._onChange(a),n._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new me},normalMatrix:{value:new xt}}),this.matrix=new me,this.matrixWorld=new me,this.matrixAutoUpdate=Ve.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Rl,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ji.setFromAxisAngle(e,t),this.quaternion.multiply(ji),this}rotateOnWorldAxis(e,t){return ji.setFromAxisAngle(e,t),this.quaternion.premultiply(ji),this}rotateX(e){return this.rotateOnAxis(Jc,e)}rotateY(e){return this.rotateOnAxis(Yc,e)}rotateZ(e){return this.rotateOnAxis($c,e)}translateOnAxis(e,t){return Xc.copy(e).applyQuaternion(this.quaternion),this.position.add(Xc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Jc,e)}translateY(e){return this.translateOnAxis(Yc,e)}translateZ(e){return this.translateOnAxis($c,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(wn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Fr.copy(e):Fr.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ha.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?wn.lookAt(Ha,Fr,this.up):wn.lookAt(Fr,Ha,this.up),this.quaternion.setFromRotationMatrix(wn),i&&(wn.extractRotation(i.matrixWorld),ji.setFromRotationMatrix(wn),this.quaternion.premultiply(ji.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(xm)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Qc)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Qc)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),wn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),wn.multiply(e.parent.matrixWorld)),e.applyMatrix4(wn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const s=this.children[n].getObjectByProperty(e,t);if(s!==void 0)return s}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ha,e,vm),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ha,bm,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let a=0,s=i.length;a<s;a++)i[a].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function a(o,c){return o[c.uuid]===void 0&&(o[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=a(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const c=o.shapes;if(Array.isArray(c))for(let l=0,u=c.length;l<u;l++){const h=c[l];a(e.shapes,h)}else a(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let c=0,l=this.material.length;c<l;c++)o.push(a(e.materials,this.material[c]));i.material=o}else i.material=a(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const c=this.animations[o];i.animations.push(a(e.animations,c))}}if(t){const o=s(e.geometries),c=s(e.materials),l=s(e.textures),u=s(e.images),h=s(e.shapes),d=s(e.skeletons),p=s(e.animations),g=s(e.nodes);o.length>0&&(n.geometries=o),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),p.length>0&&(n.animations=p),g.length>0&&(n.nodes=g)}return n.object=i,n;function s(o){const c=[];for(const l in o){const u=o[l];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Ve.DefaultUp=new T(0,1,0);Ve.DefaultMatrixAutoUpdate=!0;Ve.prototype.isObject3D=!0;const sn=new T,Tn=new T,mo=new T,En=new T,Ki=new T,qi=new T,eu=new T,go=new T,_o=new T,yo=new T;class lt{constructor(e=new T,t=new T,n=new T){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),sn.subVectors(e,t),i.cross(sn);const a=i.lengthSq();return a>0?i.multiplyScalar(1/Math.sqrt(a)):i.set(0,0,0)}static getBarycoord(e,t,n,i,a){sn.subVectors(i,t),Tn.subVectors(n,t),mo.subVectors(e,t);const s=sn.dot(sn),o=sn.dot(Tn),c=sn.dot(mo),l=Tn.dot(Tn),u=Tn.dot(mo),h=s*l-o*o;if(h===0)return a.set(-2,-1,-1);const d=1/h,p=(l*c-o*u)*d,g=(s*u-o*c)*d;return a.set(1-p-g,g,p)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,En),En.x>=0&&En.y>=0&&En.x+En.y<=1}static getUV(e,t,n,i,a,s,o,c){return this.getBarycoord(e,t,n,i,En),c.set(0,0),c.addScaledVector(a,En.x),c.addScaledVector(s,En.y),c.addScaledVector(o,En.z),c}static isFrontFacing(e,t,n,i){return sn.subVectors(n,t),Tn.subVectors(e,t),sn.cross(Tn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return sn.subVectors(this.c,this.b),Tn.subVectors(this.a,this.b),sn.cross(Tn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return lt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return lt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,a){return lt.getUV(e,this.a,this.b,this.c,t,n,i,a)}containsPoint(e){return lt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return lt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,a=this.c;let s,o;Ki.subVectors(i,n),qi.subVectors(a,n),go.subVectors(e,n);const c=Ki.dot(go),l=qi.dot(go);if(c<=0&&l<=0)return t.copy(n);_o.subVectors(e,i);const u=Ki.dot(_o),h=qi.dot(_o);if(u>=0&&h<=u)return t.copy(i);const d=c*h-u*l;if(d<=0&&c>=0&&u<=0)return s=c/(c-u),t.copy(n).addScaledVector(Ki,s);yo.subVectors(e,a);const p=Ki.dot(yo),g=qi.dot(yo);if(g>=0&&p<=g)return t.copy(a);const f=p*l-c*g;if(f<=0&&l>=0&&g<=0)return o=l/(l-g),t.copy(n).addScaledVector(qi,o);const m=u*g-p*h;if(m<=0&&h-u>=0&&p-g>=0)return eu.subVectors(a,i),o=(h-u)/(h-u+(p-g)),t.copy(i).addScaledVector(eu,o);const _=1/(m+f+d);return s=f*_,o=d*_,t.copy(n).addScaledVector(Ki,s).addScaledVector(qi,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Sm=0;class ht extends Ui{constructor(){super(),Object.defineProperty(this,"id",{value:Sm++}),this.uuid=xn(),this.name="",this.type="Material",this.fog=!0,this.blending=ma,this.side=hr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Zh,this.blendDst=Xh,this.blendEquation=aa,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Jo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=cm,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=to,this.stencilZFail=to,this.stencilZPass=to,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===qh;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ma&&(n.blending=this.blending),this.side!==hr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(a){const s=[];for(const o in a){const c=a[o];delete c.metadata,s.push(c)}return s}if(t){const a=i(e.textures),s=i(e.images);a.length>0&&(n.textures=a),s.length>0&&(n.images=s)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let a=0;a!==i;++a)n[a]=t[a].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}ht.prototype.isMaterial=!0;ht.fromType=function(){return null};class Sr extends ht{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ts,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Sr.prototype.isMeshBasicMaterial=!0;const ot=new T,zr=new ee;class ut{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=fr,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,a=this.itemSize;i<a;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,a=e.length;i<a;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new pe),t[n++]=s.r,t[n++]=s.g,t[n++]=s.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,a=e.length;i<a;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new ee),t[n++]=s.x,t[n++]=s.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,a=e.length;i<a;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new T),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,a=e.length;i<a;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new je),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z,t[n++]=s.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)zr.fromBufferAttribute(this,t),zr.applyMatrix3(e),this.setXY(t,zr.x,zr.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)ot.fromBufferAttribute(this,t),ot.applyMatrix3(e),this.setXYZ(t,ot.x,ot.y,ot.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)ot.fromBufferAttribute(this,t),ot.applyMatrix4(e),this.setXYZ(t,ot.x,ot.y,ot.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)ot.fromBufferAttribute(this,t),ot.applyNormalMatrix(e),this.setXYZ(t,ot.x,ot.y,ot.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)ot.fromBufferAttribute(this,t),ot.transformDirection(e),this.setXYZ(t,ot.x,ot.y,ot.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,a){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=a,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==fr&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}ut.prototype.isBufferAttribute=!0;class td extends ut{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class nd extends ut{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Am extends ut{constructor(e,t,n){super(new Uint16Array(e),t,n)}}Am.prototype.isFloat16BufferAttribute=!0;class at extends ut{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Cm=0;const qt=new me,vo=new Ve,Zi=new T,Ot=new hn,Va=new hn,dt=new T;class Xe extends Ui{constructor(){super(),Object.defineProperty(this,"id",{value:Cm++}),this.uuid=xn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new($h(e)?nd:td)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const a=new xt().getNormalMatrix(e);n.applyNormalMatrix(a),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return qt.makeRotationFromQuaternion(e),this.applyMatrix4(qt),this}rotateX(e){return qt.makeRotationX(e),this.applyMatrix4(qt),this}rotateY(e){return qt.makeRotationY(e),this.applyMatrix4(qt),this}rotateZ(e){return qt.makeRotationZ(e),this.applyMatrix4(qt),this}translate(e,t,n){return qt.makeTranslation(e,t,n),this.applyMatrix4(qt),this}scale(e,t,n){return qt.makeScale(e,t,n),this.applyMatrix4(qt),this}lookAt(e){return vo.lookAt(e),vo.updateMatrix(),this.applyMatrix4(vo.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Zi).negate(),this.translate(Zi.x,Zi.y,Zi.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const a=e[n];t.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new at(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new hn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new T(-1/0,-1/0,-1/0),new T(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const a=t[n];Ot.setFromBufferAttribute(a),this.morphTargetsRelative?(dt.addVectors(this.boundingBox.min,Ot.min),this.boundingBox.expandByPoint(dt),dt.addVectors(this.boundingBox.max,Ot.max),this.boundingBox.expandByPoint(dt)):(this.boundingBox.expandByPoint(Ot.min),this.boundingBox.expandByPoint(Ot.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new La);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new T,1/0);return}if(e){const n=this.boundingSphere.center;if(Ot.setFromBufferAttribute(e),t)for(let a=0,s=t.length;a<s;a++){const o=t[a];Va.setFromBufferAttribute(o),this.morphTargetsRelative?(dt.addVectors(Ot.min,Va.min),Ot.expandByPoint(dt),dt.addVectors(Ot.max,Va.max),Ot.expandByPoint(dt)):(Ot.expandByPoint(Va.min),Ot.expandByPoint(Va.max))}Ot.getCenter(n);let i=0;for(let a=0,s=e.count;a<s;a++)dt.fromBufferAttribute(e,a),i=Math.max(i,n.distanceToSquared(dt));if(t)for(let a=0,s=t.length;a<s;a++){const o=t[a],c=this.morphTargetsRelative;for(let l=0,u=o.count;l<u;l++)dt.fromBufferAttribute(o,l),c&&(Zi.fromBufferAttribute(e,l),dt.add(Zi)),i=Math.max(i,n.distanceToSquared(dt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,a=t.normal.array,s=t.uv.array,o=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ut(new Float32Array(4*o),4));const c=this.getAttribute("tangent").array,l=[],u=[];for(let B=0;B<o;B++)l[B]=new T,u[B]=new T;const h=new T,d=new T,p=new T,g=new ee,f=new ee,m=new ee,_=new T,b=new T;function A(B,v,N){h.fromArray(i,B*3),d.fromArray(i,v*3),p.fromArray(i,N*3),g.fromArray(s,B*2),f.fromArray(s,v*2),m.fromArray(s,N*2),d.sub(h),p.sub(h),f.sub(g),m.sub(g);const W=1/(f.x*m.y-m.x*f.y);!isFinite(W)||(_.copy(d).multiplyScalar(m.y).addScaledVector(p,-f.y).multiplyScalar(W),b.copy(p).multiplyScalar(f.x).addScaledVector(d,-m.x).multiplyScalar(W),l[B].add(_),l[v].add(_),l[N].add(_),u[B].add(b),u[v].add(b),u[N].add(b))}let S=this.groups;S.length===0&&(S=[{start:0,count:n.length}]);for(let B=0,v=S.length;B<v;++B){const N=S[B],W=N.start,U=N.count;for(let F=W,D=W+U;F<D;F+=3)A(n[F+0],n[F+1],n[F+2])}const y=new T,w=new T,E=new T,L=new T;function z(B){E.fromArray(a,B*3),L.copy(E);const v=l[B];y.copy(v),y.sub(E.multiplyScalar(E.dot(v))).normalize(),w.crossVectors(L,v);const W=w.dot(u[B])<0?-1:1;c[B*4]=y.x,c[B*4+1]=y.y,c[B*4+2]=y.z,c[B*4+3]=W}for(let B=0,v=S.length;B<v;++B){const N=S[B],W=N.start,U=N.count;for(let F=W,D=W+U;F<D;F+=3)z(n[F+0]),z(n[F+1]),z(n[F+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ut(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,p=n.count;d<p;d++)n.setXYZ(d,0,0,0);const i=new T,a=new T,s=new T,o=new T,c=new T,l=new T,u=new T,h=new T;if(e)for(let d=0,p=e.count;d<p;d+=3){const g=e.getX(d+0),f=e.getX(d+1),m=e.getX(d+2);i.fromBufferAttribute(t,g),a.fromBufferAttribute(t,f),s.fromBufferAttribute(t,m),u.subVectors(s,a),h.subVectors(i,a),u.cross(h),o.fromBufferAttribute(n,g),c.fromBufferAttribute(n,f),l.fromBufferAttribute(n,m),o.add(u),c.add(u),l.add(u),n.setXYZ(g,o.x,o.y,o.z),n.setXYZ(f,c.x,c.y,c.z),n.setXYZ(m,l.x,l.y,l.z)}else for(let d=0,p=t.count;d<p;d+=3)i.fromBufferAttribute(t,d+0),a.fromBufferAttribute(t,d+1),s.fromBufferAttribute(t,d+2),u.subVectors(s,a),h.subVectors(i,a),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const s=n[i].array,o=e.attributes[i],c=o.array,l=o.itemSize*t,u=Math.min(c.length,s.length-l);for(let h=0,d=l;h<u;h++,d++)s[d]=c[h]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)dt.fromBufferAttribute(e,t),dt.normalize(),e.setXYZ(t,dt.x,dt.y,dt.z)}toNonIndexed(){function e(o,c){const l=o.array,u=o.itemSize,h=o.normalized,d=new l.constructor(c.length*u);let p=0,g=0;for(let f=0,m=c.length;f<m;f++){o.isInterleavedBufferAttribute?p=c[f]*o.data.stride+o.offset:p=c[f]*u;for(let _=0;_<u;_++)d[g++]=l[p++]}return new ut(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Xe,n=this.index.array,i=this.attributes;for(const o in i){const c=i[o],l=e(c,n);t.setAttribute(o,l)}const a=this.morphAttributes;for(const o in a){const c=[],l=a[o];for(let u=0,h=l.length;u<h;u++){const d=l[u],p=e(d,n);c.push(p)}t.morphAttributes[o]=c}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,c=s.length;o<c;o++){const l=s[o];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let a=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],u=[];for(let h=0,d=l.length;h<d;h++){const p=l[h];u.push(p.toJSON(e.data))}u.length>0&&(i[c]=u,a=!0)}a&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const l in i){const u=i[l];this.setAttribute(l,u.clone(t))}const a=e.morphAttributes;for(const l in a){const u=[],h=a[l];for(let d=0,p=h.length;d<p;d++)u.push(h[d].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let l=0,u=s.length;l<u;l++){const h=s[l];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Xe.prototype.isBufferGeometry=!0;const tu=new me,Xi=new Di,bo=new La,Wn=new T,jn=new T,Kn=new T,xo=new T,So=new T,Ao=new T,kr=new T,Or=new T,Gr=new T,Hr=new ee,Vr=new ee,Wr=new ee,Co=new T,jr=new T;class St extends Ve{constructor(e=new Xe,t=new Sr){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=i.length;a<s;a++){const o=i[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,a=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),bo.copy(n.boundingSphere),bo.applyMatrix4(a),e.ray.intersectsSphere(bo)===!1)||(tu.copy(a).invert(),Xi.copy(e.ray).applyMatrix4(tu),n.boundingBox!==null&&Xi.intersectsBox(n.boundingBox)===!1))return;let s;if(n.isBufferGeometry){const o=n.index,c=n.attributes.position,l=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,d=n.attributes.uv2,p=n.groups,g=n.drawRange;if(o!==null)if(Array.isArray(i))for(let f=0,m=p.length;f<m;f++){const _=p[f],b=i[_.materialIndex],A=Math.max(_.start,g.start),S=Math.min(o.count,Math.min(_.start+_.count,g.start+g.count));for(let y=A,w=S;y<w;y+=3){const E=o.getX(y),L=o.getX(y+1),z=o.getX(y+2);s=Kr(this,b,e,Xi,c,l,u,h,d,E,L,z),s&&(s.faceIndex=Math.floor(y/3),s.face.materialIndex=_.materialIndex,t.push(s))}}else{const f=Math.max(0,g.start),m=Math.min(o.count,g.start+g.count);for(let _=f,b=m;_<b;_+=3){const A=o.getX(_),S=o.getX(_+1),y=o.getX(_+2);s=Kr(this,i,e,Xi,c,l,u,h,d,A,S,y),s&&(s.faceIndex=Math.floor(_/3),t.push(s))}}else if(c!==void 0)if(Array.isArray(i))for(let f=0,m=p.length;f<m;f++){const _=p[f],b=i[_.materialIndex],A=Math.max(_.start,g.start),S=Math.min(c.count,Math.min(_.start+_.count,g.start+g.count));for(let y=A,w=S;y<w;y+=3){const E=y,L=y+1,z=y+2;s=Kr(this,b,e,Xi,c,l,u,h,d,E,L,z),s&&(s.faceIndex=Math.floor(y/3),s.face.materialIndex=_.materialIndex,t.push(s))}}else{const f=Math.max(0,g.start),m=Math.min(c.count,g.start+g.count);for(let _=f,b=m;_<b;_+=3){const A=_,S=_+1,y=_+2;s=Kr(this,i,e,Xi,c,l,u,h,d,A,S,y),s&&(s.faceIndex=Math.floor(_/3),t.push(s))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}St.prototype.isMesh=!0;function Mm(r,e,t,n,i,a,s,o){let c;if(e.side===$t?c=n.intersectTriangle(s,a,i,!0,o):c=n.intersectTriangle(i,a,s,e.side!==Ca,o),c===null)return null;jr.copy(o),jr.applyMatrix4(r.matrixWorld);const l=t.ray.origin.distanceTo(jr);return l<t.near||l>t.far?null:{distance:l,point:jr.clone(),object:r}}function Kr(r,e,t,n,i,a,s,o,c,l,u,h){Wn.fromBufferAttribute(i,l),jn.fromBufferAttribute(i,u),Kn.fromBufferAttribute(i,h);const d=r.morphTargetInfluences;if(a&&d){kr.set(0,0,0),Or.set(0,0,0),Gr.set(0,0,0);for(let g=0,f=a.length;g<f;g++){const m=d[g],_=a[g];m!==0&&(xo.fromBufferAttribute(_,l),So.fromBufferAttribute(_,u),Ao.fromBufferAttribute(_,h),s?(kr.addScaledVector(xo,m),Or.addScaledVector(So,m),Gr.addScaledVector(Ao,m)):(kr.addScaledVector(xo.sub(Wn),m),Or.addScaledVector(So.sub(jn),m),Gr.addScaledVector(Ao.sub(Kn),m)))}Wn.add(kr),jn.add(Or),Kn.add(Gr)}r.isSkinnedMesh&&(r.boneTransform(l,Wn),r.boneTransform(u,jn),r.boneTransform(h,Kn));const p=Mm(r,e,t,n,Wn,jn,Kn,Co);if(p){o&&(Hr.fromBufferAttribute(o,l),Vr.fromBufferAttribute(o,u),Wr.fromBufferAttribute(o,h),p.uv=lt.getUV(Co,Wn,jn,Kn,Hr,Vr,Wr,new ee)),c&&(Hr.fromBufferAttribute(c,l),Vr.fromBufferAttribute(c,u),Wr.fromBufferAttribute(c,h),p.uv2=lt.getUV(Co,Wn,jn,Kn,Hr,Vr,Wr,new ee));const g={a:l,b:u,c:h,normal:new T,materialIndex:0};lt.getNormal(Wn,jn,Kn,g.normal),p.face=g}return p}class Ua extends Xe{constructor(e=1,t=1,n=1,i=1,a=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:a,depthSegments:s};const o=this;i=Math.floor(i),a=Math.floor(a),s=Math.floor(s);const c=[],l=[],u=[],h=[];let d=0,p=0;g("z","y","x",-1,-1,n,t,e,s,a,0),g("z","y","x",1,-1,n,t,-e,s,a,1),g("x","z","y",1,1,e,n,t,i,s,2),g("x","z","y",1,-1,e,n,-t,i,s,3),g("x","y","z",1,-1,e,t,n,i,a,4),g("x","y","z",-1,-1,e,t,-n,i,a,5),this.setIndex(c),this.setAttribute("position",new at(l,3)),this.setAttribute("normal",new at(u,3)),this.setAttribute("uv",new at(h,2));function g(f,m,_,b,A,S,y,w,E,L,z){const B=S/E,v=y/L,N=S/2,W=y/2,U=w/2,F=E+1,D=L+1;let k=0,P=0;const j=new T;for(let J=0;J<D;J++){const Y=J*v-W;for(let Q=0;Q<F;Q++){const ae=Q*B-N;j[f]=ae*b,j[m]=Y*A,j[_]=U,l.push(j.x,j.y,j.z),j[f]=0,j[m]=0,j[_]=w>0?1:-1,u.push(j.x,j.y,j.z),h.push(Q/E),h.push(1-J/L),k+=1}}for(let J=0;J<L;J++)for(let Y=0;Y<E;Y++){const Q=d+Y+F*J,ae=d+Y+F*(J+1),Se=d+(Y+1)+F*(J+1),Ae=d+(Y+1)+F*J;c.push(Q,ae,Ae),c.push(ae,Se,Ae),P+=6}o.addGroup(p,P,z),p+=P,d+=k}}static fromJSON(e){return new Ua(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ea(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Ct(r){const e={};for(let t=0;t<r.length;t++){const n=Ea(r[t]);for(const i in n)e[i]=n[i]}return e}const wm={clone:Ea,merge:Ct};var Tm=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Em=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Kt extends ht{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Tm,this.fragmentShader=Em,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ea(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const s=this.uniforms[i].value;s&&s.isTexture?t.uniforms[i]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?t.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?t.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?t.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?t.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?t.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?t.uniforms[i]={type:"m4",value:s.toArray()}:t.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}Kt.prototype.isShaderMaterial=!0;class Ll extends Ve{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new me,this.projectionMatrix=new me,this.projectionMatrixInverse=new me}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}Ll.prototype.isCamera=!0;class Tt extends Ll{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=nl*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(no*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return nl*2*Math.atan(Math.tan(no*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,a,s){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=a,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(no*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,a=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const c=s.fullWidth,l=s.fullHeight;a+=s.offsetX*i/c,t-=s.offsetY*n/l,i*=s.width/c,n*=s.height/l}const o=this.filmOffset;o!==0&&(a+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}Tt.prototype.isPerspectiveCamera=!0;const Ji=90,Yi=1;class Ul extends Ve{constructor(e,t,n){if(super(),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new Tt(Ji,Yi,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new T(1,0,0)),this.add(i);const a=new Tt(Ji,Yi,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new T(-1,0,0)),this.add(a);const s=new Tt(Ji,Yi,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new T(0,1,0)),this.add(s);const o=new Tt(Ji,Yi,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new T(0,-1,0)),this.add(o);const c=new Tt(Ji,Yi,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new T(0,0,1)),this.add(c);const l=new Tt(Ji,Yi,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new T(0,0,-1)),this.add(l)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,a,s,o,c,l]=this.children,u=e.getRenderTarget(),h=e.outputEncoding,d=e.toneMapping,p=e.xr.enabled;e.outputEncoding=zn,e.toneMapping=Bn,e.xr.enabled=!1;const g=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,a),e.setRenderTarget(n,2),e.render(t,s),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,c),n.texture.generateMipmaps=g,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(u),e.outputEncoding=h,e.toneMapping=d,e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Ls extends _t{constructor(e,t,n,i,a,s,o,c,l,u){e=e!==void 0?e:[],t=t!==void 0?t:Ma,super(e,t,n,i,a,s,o,c,l,u),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Ls.prototype.isCubeTexture=!0;class id extends Wt{constructor(e,t={}){super(e,e,t);const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Ls(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Pt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ua(5,5,5),a=new Kt({name:"CubemapFromEquirect",uniforms:Ea(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:$t,blending:ei});a.uniforms.tEquirect.value=t;const s=new St(i,a),o=t.minFilter;return t.minFilter===Ns&&(t.minFilter=Pt),new Ul(1,10,this).update(e,s),t.minFilter=o,s.geometry.dispose(),s.material.dispose(),this}clear(e,t,n,i){const a=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,n,i);e.setRenderTarget(a)}}id.prototype.isWebGLCubeRenderTarget=!0;const Mo=new T,Nm=new T,Rm=new xt;class Un{constructor(e=new T(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Mo.subVectors(n,t).cross(Nm.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Mo),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const a=-(e.start.dot(this.normal)+this.constant)/i;return a<0||a>1?null:t.copy(n).multiplyScalar(a).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Rm.getNormalMatrix(e),i=this.coplanarPoint(Mo).applyMatrix4(e),a=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(a),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}Un.prototype.isPlane=!0;const $i=new La,qr=new T;class Us{constructor(e=new Un,t=new Un,n=new Un,i=new Un,a=new Un,s=new Un){this.planes=[e,t,n,i,a,s]}set(e,t,n,i,a,s){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(a),o[5].copy(s),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],a=n[1],s=n[2],o=n[3],c=n[4],l=n[5],u=n[6],h=n[7],d=n[8],p=n[9],g=n[10],f=n[11],m=n[12],_=n[13],b=n[14],A=n[15];return t[0].setComponents(o-i,h-c,f-d,A-m).normalize(),t[1].setComponents(o+i,h+c,f+d,A+m).normalize(),t[2].setComponents(o+a,h+l,f+p,A+_).normalize(),t[3].setComponents(o-a,h-l,f-p,A-_).normalize(),t[4].setComponents(o-s,h-u,f-g,A-b).normalize(),t[5].setComponents(o+s,h+u,f+g,A+b).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),$i.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere($i)}intersectsSprite(e){return $i.center.set(0,0,0),$i.radius=.7071067811865476,$i.applyMatrix4(e.matrixWorld),this.intersectsSphere($i)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let a=0;a<6;a++)if(t[a].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(qr.x=i.normal.x>0?e.max.x:e.min.x,qr.y=i.normal.y>0?e.max.y:e.min.y,qr.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(qr)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function ad(){let r=null,e=!1,t=null,n=null;function i(a,s){t(a,s),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(a){t=a},setContext:function(a){r=a}}}function Lm(r,e){const t=e.isWebGL2,n=new WeakMap;function i(l,u){const h=l.array,d=l.usage,p=r.createBuffer();r.bindBuffer(u,p),r.bufferData(u,h,d),l.onUploadCallback();let g;if(h instanceof Float32Array)g=5126;else if(h instanceof Uint16Array)if(l.isFloat16BufferAttribute)if(t)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(h instanceof Int16Array)g=5122;else if(h instanceof Uint32Array)g=5125;else if(h instanceof Int32Array)g=5124;else if(h instanceof Int8Array)g=5120;else if(h instanceof Uint8Array)g=5121;else if(h instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:p,type:g,bytesPerElement:h.BYTES_PER_ELEMENT,version:l.version}}function a(l,u,h){const d=u.array,p=u.updateRange;r.bindBuffer(h,l),p.count===-1?r.bufferSubData(h,0,d):(t?r.bufferSubData(h,p.offset*d.BYTES_PER_ELEMENT,d,p.offset,p.count):r.bufferSubData(h,p.offset*d.BYTES_PER_ELEMENT,d.subarray(p.offset,p.offset+p.count)),p.count=-1)}function s(l){return l.isInterleavedBufferAttribute&&(l=l.data),n.get(l)}function o(l){l.isInterleavedBufferAttribute&&(l=l.data);const u=n.get(l);u&&(r.deleteBuffer(u.buffer),n.delete(l))}function c(l,u){if(l.isGLBufferAttribute){const d=n.get(l);(!d||d.version<l.version)&&n.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const h=n.get(l);h===void 0?n.set(l,i(l,u)):h.version<l.version&&(a(h.buffer,l,u),h.version=l.version)}return{get:s,remove:o,update:c}}class Pl extends Xe{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const a=e/2,s=t/2,o=Math.floor(n),c=Math.floor(i),l=o+1,u=c+1,h=e/o,d=t/c,p=[],g=[],f=[],m=[];for(let _=0;_<u;_++){const b=_*d-s;for(let A=0;A<l;A++){const S=A*h-a;g.push(S,-b,0),f.push(0,0,1),m.push(A/o),m.push(1-_/c)}}for(let _=0;_<c;_++)for(let b=0;b<o;b++){const A=b+l*_,S=b+l*(_+1),y=b+1+l*(_+1),w=b+1+l*_;p.push(A,S,w),p.push(S,y,w)}this.setIndex(p),this.setAttribute("position",new at(g,3)),this.setAttribute("normal",new at(f,3)),this.setAttribute("uv",new at(m,2))}static fromJSON(e){return new Pl(e.width,e.height,e.widthSegments,e.heightSegments)}}var Um=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Pm=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Dm=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Bm=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Im=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Fm=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,zm="vec3 transformed = vec3( position );",km=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Om=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Gm=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Hm=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Vm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Wm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,jm=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Km=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,qm=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Zm=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Xm=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Jm=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Ym=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,$m=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Qm=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,eg=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,tg=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,ng=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,ig="gl_FragColor = linearToOutputTexel( gl_FragColor );",ag=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,rg=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,sg=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,og=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,lg=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,cg=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,ug=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,hg=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,dg=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,fg=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,pg=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,mg=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,gg=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,_g=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,yg=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,vg=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,bg=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,xg=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Sg=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Ag=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Cg=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Mg=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,wg=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Tg=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Eg=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Ng=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Rg=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Lg=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Ug=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Pg=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Dg=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Bg=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Ig=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Fg=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,zg=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,kg=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Og=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Gg=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Hg=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Vg=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Wg=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,jg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Kg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,qg=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Zg=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Xg=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Jg=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Yg=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,$g=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Qg=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,e0=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,t0=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,n0=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,i0=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,a0=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,r0=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,s0=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,o0=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,l0=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,c0=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,u0=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,h0=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,d0=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,f0=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,p0=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,m0=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,g0=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,_0=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,y0=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,v0=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,b0=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,x0=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,S0=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,A0=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,C0=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,M0=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,w0=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const T0=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,E0=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,N0=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,R0=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,L0=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,U0=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,P0=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,D0=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,B0=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,I0=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,F0=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,z0=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,k0=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,O0=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,G0=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,H0=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,V0=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,W0=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,j0=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,K0=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,q0=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Z0=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,X0=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,J0=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Y0=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,$0=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Q0=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,e_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,t_=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,n_=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,i_=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,a_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,De={alphamap_fragment:Um,alphamap_pars_fragment:Pm,alphatest_fragment:Dm,alphatest_pars_fragment:Bm,aomap_fragment:Im,aomap_pars_fragment:Fm,begin_vertex:zm,beginnormal_vertex:km,bsdfs:Om,bumpmap_pars_fragment:Gm,clipping_planes_fragment:Hm,clipping_planes_pars_fragment:Vm,clipping_planes_pars_vertex:Wm,clipping_planes_vertex:jm,color_fragment:Km,color_pars_fragment:qm,color_pars_vertex:Zm,color_vertex:Xm,common:Jm,cube_uv_reflection_fragment:Ym,defaultnormal_vertex:$m,displacementmap_pars_vertex:Qm,displacementmap_vertex:eg,emissivemap_fragment:tg,emissivemap_pars_fragment:ng,encodings_fragment:ig,encodings_pars_fragment:ag,envmap_fragment:rg,envmap_common_pars_fragment:sg,envmap_pars_fragment:og,envmap_pars_vertex:lg,envmap_physical_pars_fragment:vg,envmap_vertex:cg,fog_vertex:ug,fog_pars_vertex:hg,fog_fragment:dg,fog_pars_fragment:fg,gradientmap_pars_fragment:pg,lightmap_fragment:mg,lightmap_pars_fragment:gg,lights_lambert_vertex:_g,lights_pars_begin:yg,lights_toon_fragment:bg,lights_toon_pars_fragment:xg,lights_phong_fragment:Sg,lights_phong_pars_fragment:Ag,lights_physical_fragment:Cg,lights_physical_pars_fragment:Mg,lights_fragment_begin:wg,lights_fragment_maps:Tg,lights_fragment_end:Eg,logdepthbuf_fragment:Ng,logdepthbuf_pars_fragment:Rg,logdepthbuf_pars_vertex:Lg,logdepthbuf_vertex:Ug,map_fragment:Pg,map_pars_fragment:Dg,map_particle_fragment:Bg,map_particle_pars_fragment:Ig,metalnessmap_fragment:Fg,metalnessmap_pars_fragment:zg,morphcolor_vertex:kg,morphnormal_vertex:Og,morphtarget_pars_vertex:Gg,morphtarget_vertex:Hg,normal_fragment_begin:Vg,normal_fragment_maps:Wg,normal_pars_fragment:jg,normal_pars_vertex:Kg,normal_vertex:qg,normalmap_pars_fragment:Zg,clearcoat_normal_fragment_begin:Xg,clearcoat_normal_fragment_maps:Jg,clearcoat_pars_fragment:Yg,output_fragment:$g,packing:Qg,premultiplied_alpha_fragment:e0,project_vertex:t0,dithering_fragment:n0,dithering_pars_fragment:i0,roughnessmap_fragment:a0,roughnessmap_pars_fragment:r0,shadowmap_pars_fragment:s0,shadowmap_pars_vertex:o0,shadowmap_vertex:l0,shadowmask_pars_fragment:c0,skinbase_vertex:u0,skinning_pars_vertex:h0,skinning_vertex:d0,skinnormal_vertex:f0,specularmap_fragment:p0,specularmap_pars_fragment:m0,tonemapping_fragment:g0,tonemapping_pars_fragment:_0,transmission_fragment:y0,transmission_pars_fragment:v0,uv_pars_fragment:b0,uv_pars_vertex:x0,uv_vertex:S0,uv2_pars_fragment:A0,uv2_pars_vertex:C0,uv2_vertex:M0,worldpos_vertex:w0,background_vert:T0,background_frag:E0,cube_vert:N0,cube_frag:R0,depth_vert:L0,depth_frag:U0,distanceRGBA_vert:P0,distanceRGBA_frag:D0,equirect_vert:B0,equirect_frag:I0,linedashed_vert:F0,linedashed_frag:z0,meshbasic_vert:k0,meshbasic_frag:O0,meshlambert_vert:G0,meshlambert_frag:H0,meshmatcap_vert:V0,meshmatcap_frag:W0,meshnormal_vert:j0,meshnormal_frag:K0,meshphong_vert:q0,meshphong_frag:Z0,meshphysical_vert:X0,meshphysical_frag:J0,meshtoon_vert:Y0,meshtoon_frag:$0,points_vert:Q0,points_frag:e_,shadow_vert:t_,shadow_frag:n_,sprite_vert:i_,sprite_frag:a_},se={common:{diffuse:{value:new pe(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new xt},uv2Transform:{value:new xt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ee(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new pe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new pe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new xt}},sprite:{diffuse:{value:new pe(16777215)},opacity:{value:1},center:{value:new ee(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new xt}}},vn={basic:{uniforms:Ct([se.common,se.specularmap,se.envmap,se.aomap,se.lightmap,se.fog]),vertexShader:De.meshbasic_vert,fragmentShader:De.meshbasic_frag},lambert:{uniforms:Ct([se.common,se.specularmap,se.envmap,se.aomap,se.lightmap,se.emissivemap,se.fog,se.lights,{emissive:{value:new pe(0)}}]),vertexShader:De.meshlambert_vert,fragmentShader:De.meshlambert_frag},phong:{uniforms:Ct([se.common,se.specularmap,se.envmap,se.aomap,se.lightmap,se.emissivemap,se.bumpmap,se.normalmap,se.displacementmap,se.fog,se.lights,{emissive:{value:new pe(0)},specular:{value:new pe(1118481)},shininess:{value:30}}]),vertexShader:De.meshphong_vert,fragmentShader:De.meshphong_frag},standard:{uniforms:Ct([se.common,se.envmap,se.aomap,se.lightmap,se.emissivemap,se.bumpmap,se.normalmap,se.displacementmap,se.roughnessmap,se.metalnessmap,se.fog,se.lights,{emissive:{value:new pe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:De.meshphysical_vert,fragmentShader:De.meshphysical_frag},toon:{uniforms:Ct([se.common,se.aomap,se.lightmap,se.emissivemap,se.bumpmap,se.normalmap,se.displacementmap,se.gradientmap,se.fog,se.lights,{emissive:{value:new pe(0)}}]),vertexShader:De.meshtoon_vert,fragmentShader:De.meshtoon_frag},matcap:{uniforms:Ct([se.common,se.bumpmap,se.normalmap,se.displacementmap,se.fog,{matcap:{value:null}}]),vertexShader:De.meshmatcap_vert,fragmentShader:De.meshmatcap_frag},points:{uniforms:Ct([se.points,se.fog]),vertexShader:De.points_vert,fragmentShader:De.points_frag},dashed:{uniforms:Ct([se.common,se.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:De.linedashed_vert,fragmentShader:De.linedashed_frag},depth:{uniforms:Ct([se.common,se.displacementmap]),vertexShader:De.depth_vert,fragmentShader:De.depth_frag},normal:{uniforms:Ct([se.common,se.bumpmap,se.normalmap,se.displacementmap,{opacity:{value:1}}]),vertexShader:De.meshnormal_vert,fragmentShader:De.meshnormal_frag},sprite:{uniforms:Ct([se.sprite,se.fog]),vertexShader:De.sprite_vert,fragmentShader:De.sprite_frag},background:{uniforms:{uvTransform:{value:new xt},t2D:{value:null}},vertexShader:De.background_vert,fragmentShader:De.background_frag},cube:{uniforms:Ct([se.envmap,{opacity:{value:1}}]),vertexShader:De.cube_vert,fragmentShader:De.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:De.equirect_vert,fragmentShader:De.equirect_frag},distanceRGBA:{uniforms:Ct([se.common,se.displacementmap,{referencePosition:{value:new T},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:De.distanceRGBA_vert,fragmentShader:De.distanceRGBA_frag},shadow:{uniforms:Ct([se.lights,se.fog,{color:{value:new pe(0)},opacity:{value:1}}]),vertexShader:De.shadow_vert,fragmentShader:De.shadow_frag}};vn.physical={uniforms:Ct([vn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ee(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new pe(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ee},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new pe(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new pe(1,1,1)},specularColorMap:{value:null}}]),vertexShader:De.meshphysical_vert,fragmentShader:De.meshphysical_frag};function r_(r,e,t,n,i,a){const s=new pe(0);let o=i===!0?0:1,c,l,u=null,h=0,d=null;function p(f,m){let _=!1,b=m.isScene===!0?m.background:null;b&&b.isTexture&&(b=e.get(b));const A=r.xr,S=A.getSession&&A.getSession();S&&S.environmentBlendMode==="additive"&&(b=null),b===null?g(s,o):b&&b.isColor&&(g(b,1),_=!0),(r.autoClear||_)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),b&&(b.isCubeTexture||b.mapping===Es)?(l===void 0&&(l=new St(new Ua(1,1,1),new Kt({name:"BackgroundCubeMaterial",uniforms:Ea(vn.cube.uniforms),vertexShader:vn.cube.vertexShader,fragmentShader:vn.cube.fragmentShader,side:$t,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(y,w,E){this.matrixWorld.copyPosition(E.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(l)),l.material.uniforms.envMap.value=b,l.material.uniforms.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,(u!==b||h!==b.version||d!==r.toneMapping)&&(l.material.needsUpdate=!0,u=b,h=b.version,d=r.toneMapping),f.unshift(l,l.geometry,l.material,0,0,null)):b&&b.isTexture&&(c===void 0&&(c=new St(new Pl(2,2),new Kt({name:"BackgroundMaterial",uniforms:Ea(vn.background.uniforms),vertexShader:vn.background.vertexShader,fragmentShader:vn.background.fragmentShader,side:hr,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=b,b.matrixAutoUpdate===!0&&b.updateMatrix(),c.material.uniforms.uvTransform.value.copy(b.matrix),(u!==b||h!==b.version||d!==r.toneMapping)&&(c.material.needsUpdate=!0,u=b,h=b.version,d=r.toneMapping),f.unshift(c,c.geometry,c.material,0,0,null))}function g(f,m){t.buffers.color.setClear(f.r,f.g,f.b,m,a)}return{getClearColor:function(){return s},setClearColor:function(f,m=1){s.set(f),o=m,g(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(f){o=f,g(s,o)},render:p}}function s_(r,e,t,n){const i=r.getParameter(34921),a=n.isWebGL2?null:e.get("OES_vertex_array_object"),s=n.isWebGL2||a!==null,o={},c=m(null);let l=c,u=!1;function h(U,F,D,k,P){let j=!1;if(s){const J=f(k,D,F);l!==J&&(l=J,p(l.object)),j=_(k,P),j&&b(k,P)}else{const J=F.wireframe===!0;(l.geometry!==k.id||l.program!==D.id||l.wireframe!==J)&&(l.geometry=k.id,l.program=D.id,l.wireframe=J,j=!0)}U.isInstancedMesh===!0&&(j=!0),P!==null&&t.update(P,34963),(j||u)&&(u=!1,L(U,F,D,k),P!==null&&r.bindBuffer(34963,t.get(P).buffer))}function d(){return n.isWebGL2?r.createVertexArray():a.createVertexArrayOES()}function p(U){return n.isWebGL2?r.bindVertexArray(U):a.bindVertexArrayOES(U)}function g(U){return n.isWebGL2?r.deleteVertexArray(U):a.deleteVertexArrayOES(U)}function f(U,F,D){const k=D.wireframe===!0;let P=o[U.id];P===void 0&&(P={},o[U.id]=P);let j=P[F.id];j===void 0&&(j={},P[F.id]=j);let J=j[k];return J===void 0&&(J=m(d()),j[k]=J),J}function m(U){const F=[],D=[],k=[];for(let P=0;P<i;P++)F[P]=0,D[P]=0,k[P]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:D,attributeDivisors:k,object:U,attributes:{},index:null}}function _(U,F){const D=l.attributes,k=U.attributes;let P=0;for(const j in k){const J=D[j],Y=k[j];if(J===void 0||J.attribute!==Y||J.data!==Y.data)return!0;P++}return l.attributesNum!==P||l.index!==F}function b(U,F){const D={},k=U.attributes;let P=0;for(const j in k){const J=k[j],Y={};Y.attribute=J,J.data&&(Y.data=J.data),D[j]=Y,P++}l.attributes=D,l.attributesNum=P,l.index=F}function A(){const U=l.newAttributes;for(let F=0,D=U.length;F<D;F++)U[F]=0}function S(U){y(U,0)}function y(U,F){const D=l.newAttributes,k=l.enabledAttributes,P=l.attributeDivisors;D[U]=1,k[U]===0&&(r.enableVertexAttribArray(U),k[U]=1),P[U]!==F&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](U,F),P[U]=F)}function w(){const U=l.newAttributes,F=l.enabledAttributes;for(let D=0,k=F.length;D<k;D++)F[D]!==U[D]&&(r.disableVertexAttribArray(D),F[D]=0)}function E(U,F,D,k,P,j){n.isWebGL2===!0&&(D===5124||D===5125)?r.vertexAttribIPointer(U,F,D,P,j):r.vertexAttribPointer(U,F,D,k,P,j)}function L(U,F,D,k){if(n.isWebGL2===!1&&(U.isInstancedMesh||k.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;A();const P=k.attributes,j=D.getAttributes(),J=F.defaultAttributeValues;for(const Y in j){const Q=j[Y];if(Q.location>=0){let ae=P[Y];if(ae===void 0&&(Y==="instanceMatrix"&&U.instanceMatrix&&(ae=U.instanceMatrix),Y==="instanceColor"&&U.instanceColor&&(ae=U.instanceColor)),ae!==void 0){const Se=ae.normalized,Ae=ae.itemSize,q=t.get(ae);if(q===void 0)continue;const ke=q.buffer,Te=q.type,Ee=q.bytesPerElement;if(ae.isInterleavedBufferAttribute){const ne=ae.data,Pe=ne.stride,K=ae.offset;if(ne.isInstancedInterleavedBuffer){for(let X=0;X<Q.locationSize;X++)y(Q.location+X,ne.meshPerAttribute);U.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=ne.meshPerAttribute*ne.count)}else for(let X=0;X<Q.locationSize;X++)S(Q.location+X);r.bindBuffer(34962,ke);for(let X=0;X<Q.locationSize;X++)E(Q.location+X,Ae/Q.locationSize,Te,Se,Pe*Ee,(K+Ae/Q.locationSize*X)*Ee)}else{if(ae.isInstancedBufferAttribute){for(let ne=0;ne<Q.locationSize;ne++)y(Q.location+ne,ae.meshPerAttribute);U.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=ae.meshPerAttribute*ae.count)}else for(let ne=0;ne<Q.locationSize;ne++)S(Q.location+ne);r.bindBuffer(34962,ke);for(let ne=0;ne<Q.locationSize;ne++)E(Q.location+ne,Ae/Q.locationSize,Te,Se,Ae*Ee,Ae/Q.locationSize*ne*Ee)}}else if(J!==void 0){const Se=J[Y];if(Se!==void 0)switch(Se.length){case 2:r.vertexAttrib2fv(Q.location,Se);break;case 3:r.vertexAttrib3fv(Q.location,Se);break;case 4:r.vertexAttrib4fv(Q.location,Se);break;default:r.vertexAttrib1fv(Q.location,Se)}}}}w()}function z(){N();for(const U in o){const F=o[U];for(const D in F){const k=F[D];for(const P in k)g(k[P].object),delete k[P];delete F[D]}delete o[U]}}function B(U){if(o[U.id]===void 0)return;const F=o[U.id];for(const D in F){const k=F[D];for(const P in k)g(k[P].object),delete k[P];delete F[D]}delete o[U.id]}function v(U){for(const F in o){const D=o[F];if(D[U.id]===void 0)continue;const k=D[U.id];for(const P in k)g(k[P].object),delete k[P];delete D[U.id]}}function N(){W(),u=!0,l!==c&&(l=c,p(l.object))}function W(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:h,reset:N,resetDefaultState:W,dispose:z,releaseStatesOfGeometry:B,releaseStatesOfProgram:v,initAttributes:A,enableAttribute:S,disableUnusedAttributes:w}}function o_(r,e,t,n){const i=n.isWebGL2;let a;function s(l){a=l}function o(l,u){r.drawArrays(a,l,u),t.update(u,a,1)}function c(l,u,h){if(h===0)return;let d,p;if(i)d=r,p="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[p](a,l,u,h),t.update(u,a,h)}this.setMode=s,this.render=o,this.renderInstances=c}function l_(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const E=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function a(E){if(E==="highp"){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";E="mediump"}return E==="mediump"&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s=typeof WebGL2RenderingContext!="undefined"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&r instanceof WebGL2ComputeRenderingContext;let o=t.precision!==void 0?t.precision:"highp";const c=a(o);c!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",c,"instead."),o=c);const l=s||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=r.getParameter(34930),d=r.getParameter(35660),p=r.getParameter(3379),g=r.getParameter(34076),f=r.getParameter(34921),m=r.getParameter(36347),_=r.getParameter(36348),b=r.getParameter(36349),A=d>0,S=s||e.has("OES_texture_float"),y=A&&S,w=s?r.getParameter(36183):0;return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:i,getMaxPrecision:a,precision:o,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:p,maxCubemapSize:g,maxAttributes:f,maxVertexUniforms:m,maxVaryings:_,maxFragmentUniforms:b,vertexTextures:A,floatFragmentTextures:S,floatVertexTextures:y,maxSamples:w}}function c_(r){const e=this;let t=null,n=0,i=!1,a=!1;const s=new Un,o=new xt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d,p){const g=h.length!==0||d||n!==0||i;return i=d,t=u(h,p,0),n=h.length,g},this.beginShadows=function(){a=!0,u(null)},this.endShadows=function(){a=!1,l()},this.setState=function(h,d,p){const g=h.clippingPlanes,f=h.clipIntersection,m=h.clipShadows,_=r.get(h);if(!i||g===null||g.length===0||a&&!m)a?u(null):l();else{const b=a?0:n,A=b*4;let S=_.clippingState||null;c.value=S,S=u(g,d,A,p);for(let y=0;y!==A;++y)S[y]=t[y];_.clippingState=S,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=b}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,d,p,g){const f=h!==null?h.length:0;let m=null;if(f!==0){if(m=c.value,g!==!0||m===null){const _=p+f*4,b=d.matrixWorldInverse;o.getNormalMatrix(b),(m===null||m.length<_)&&(m=new Float32Array(_));for(let A=0,S=p;A!==f;++A,S+=4)s.copy(h[A]).applyMatrix4(b,o),s.normal.toArray(m,S),m[S+3]=s.constant}c.value=m,c.needsUpdate=!0}return e.numPlanes=f,e.numIntersection=0,m}}function u_(r){let e=new WeakMap;function t(s,o){return o===Yo?s.mapping=Ma:o===$o&&(s.mapping=wa),s}function n(s){if(s&&s.isTexture&&s.isRenderTargetTexture===!1){const o=s.mapping;if(o===Yo||o===$o)if(e.has(s)){const c=e.get(s).texture;return t(c,s.mapping)}else{const c=s.image;if(c&&c.height>0){const l=new id(c.height/2);return l.fromEquirectangularTexture(r,s),e.set(s,l),s.addEventListener("dispose",i),t(l.texture,s.mapping)}else return null}}return s}function i(s){const o=s.target;o.removeEventListener("dispose",i);const c=e.get(o);c!==void 0&&(e.delete(o),c.dispose())}function a(){e=new WeakMap}return{get:n,dispose:a}}class Dl extends Ll{constructor(e=-1,t=1,n=1,i=-1,a=.1,s=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=a,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,a,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=a,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let a=n-e,s=n+e,o=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=l*this.view.offsetX,s=a+l*this.view.width,o-=u*this.view.offsetY,c=o-u*this.view.height}this.projectionMatrix.makeOrthographic(a,s,o,c,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}Dl.prototype.isOrthographicCamera=!0;const ca=4,nu=[.125,.215,.35,.446,.526,.582],bi=20,wo=new Dl,iu=new pe;let To=null;const vi=(1+Math.sqrt(5))/2,Qi=1/vi,au=[new T(1,1,1),new T(-1,1,1),new T(1,1,-1),new T(-1,1,-1),new T(0,vi,Qi),new T(0,vi,-Qi),new T(Qi,0,vi),new T(-Qi,0,vi),new T(vi,Qi,0),new T(-vi,Qi,0)];class ru{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){To=this._renderer.getRenderTarget(),this._setSize(256);const a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(e,n,i,a),t>0&&this._blur(a,0,0,t),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=lu(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=ou(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(To),e.scissorTest=!1,Zr(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Ma||e.mapping===wa?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),To=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize-32,n={magFilter:Pt,minFilter:Pt,generateMipmaps:!1,type:ga,format:ln,encoding:zn,depthBuffer:!1},i=su(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=su(e,t,n);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=h_(a)),this._blurMaterial=d_(a,e,t)}return i}_compileMaterial(e){const t=new St(this._lodPlanes[0],e);this._renderer.compile(t,wo)}_sceneToCubeUV(e,t,n,i){const o=new Tt(90,1,t,n),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(iu),u.toneMapping=Bn,u.autoClear=!1;const p=new Sr({name:"PMREM.Background",side:$t,depthWrite:!1,depthTest:!1}),g=new St(new Ua,p);let f=!1;const m=e.background;m?m.isColor&&(p.color.copy(m),e.background=null,f=!0):(p.color.copy(iu),f=!0);for(let _=0;_<6;_++){const b=_%3;b===0?(o.up.set(0,c[_],0),o.lookAt(l[_],0,0)):b===1?(o.up.set(0,0,c[_]),o.lookAt(0,l[_],0)):(o.up.set(0,c[_],0),o.lookAt(0,0,l[_]));const A=this._cubeSize;Zr(i,b*A,_>2?A:0,A,A),u.setRenderTarget(i),f&&u.render(g,o),u.render(e,o)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=d,u.autoClear=h,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Ma||e.mapping===wa;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=lu()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=ou());const a=i?this._cubemapMaterial:this._equirectMaterial,s=new St(this._lodPlanes[0],a),o=a.uniforms;o.envMap.value=e;const c=this._cubeSize;Zr(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(s,wo)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const a=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),s=au[(i-1)%au.length];this._blur(e,i-1,i,a,s)}t.autoClear=n}_blur(e,t,n,i,a){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,n,i,"latitudinal",a),this._halfBlur(s,e,n,n,i,"longitudinal",a)}_halfBlur(e,t,n,i,a,s,o){const c=this._renderer,l=this._blurMaterial;s!=="latitudinal"&&s!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new St(this._lodPlanes[i],l),d=l.uniforms,p=this._sizeLods[n]-1,g=isFinite(a)?Math.PI/(2*p):2*Math.PI/(2*bi-1),f=a/g,m=isFinite(a)?1+Math.floor(u*f):bi;m>bi&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${bi}`);const _=[];let b=0;for(let E=0;E<bi;++E){const L=E/f,z=Math.exp(-L*L/2);_.push(z),E===0?b+=z:E<m&&(b+=2*z)}for(let E=0;E<_.length;E++)_[E]=_[E]/b;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=_,d.latitudinal.value=s==="latitudinal",o&&(d.poleAxis.value=o);const{_lodMax:A}=this;d.dTheta.value=g,d.mipInt.value=A-n;const S=this._sizeLods[i],y=3*S*(i>A-ca?i-A+ca:0),w=4*(this._cubeSize-S);Zr(t,y,w,3*S,2*S),c.setRenderTarget(t),c.render(h,wo)}}function h_(r){const e=[],t=[],n=[];let i=r;const a=r-ca+1+nu.length;for(let s=0;s<a;s++){const o=Math.pow(2,i);t.push(o);let c=1/o;s>r-ca?c=nu[s-r+ca-1]:s===0&&(c=0),n.push(c);const l=1/(o-1),u=-l/2,h=1+l/2,d=[u,u,h,u,h,h,u,u,h,h,u,h],p=6,g=6,f=3,m=2,_=1,b=new Float32Array(f*g*p),A=new Float32Array(m*g*p),S=new Float32Array(_*g*p);for(let w=0;w<p;w++){const E=w%3*2/3-1,L=w>2?0:-1,z=[E,L,0,E+2/3,L,0,E+2/3,L+1,0,E,L,0,E+2/3,L+1,0,E,L+1,0];b.set(z,f*g*w),A.set(d,m*g*w);const B=[w,w,w,w,w,w];S.set(B,_*g*w)}const y=new Xe;y.setAttribute("position",new ut(b,f)),y.setAttribute("uv",new ut(A,m)),y.setAttribute("faceIndex",new ut(S,_)),e.push(y),i>ca&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function su(r,e,t){const n=new Wt(r,e,t);return n.texture.mapping=Es,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Zr(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function d_(r,e,t){const n=new Float32Array(bi),i=new T(0,1,0);return new Kt({name:"SphericalGaussianBlur",defines:{n:bi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Bl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ei,depthTest:!1,depthWrite:!1})}function ou(){return new Kt({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Bl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ei,depthTest:!1,depthWrite:!1})}function lu(){return new Kt({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Bl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ei,depthTest:!1,depthWrite:!1})}function Bl(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function f_(r){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const c=o.mapping,l=c===Yo||c===$o,u=c===Ma||c===wa;if(l||u)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let h=e.get(o);return t===null&&(t=new ru(r)),h=l?t.fromEquirectangular(o,h):t.fromCubemap(o,h),e.set(o,h),h.texture}else{if(e.has(o))return e.get(o).texture;{const h=o.image;if(l&&h&&h.height>0||u&&h&&i(h)){t===null&&(t=new ru(r));const d=l?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,d),o.addEventListener("dispose",a),d.texture}else return null}}}return o}function i(o){let c=0;const l=6;for(let u=0;u<l;u++)o[u]!==void 0&&c++;return c===l}function a(o){const c=o.target;c.removeEventListener("dispose",a);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function s(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:s}}function p_(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function m_(r,e,t,n){const i={},a=new WeakMap;function s(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const g in d.attributes)e.remove(d.attributes[g]);d.removeEventListener("dispose",s),delete i[d.id];const p=a.get(d);p&&(e.remove(p),a.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function o(h,d){return i[d.id]===!0||(d.addEventListener("dispose",s),i[d.id]=!0,t.memory.geometries++),d}function c(h){const d=h.attributes;for(const g in d)e.update(d[g],34962);const p=h.morphAttributes;for(const g in p){const f=p[g];for(let m=0,_=f.length;m<_;m++)e.update(f[m],34962)}}function l(h){const d=[],p=h.index,g=h.attributes.position;let f=0;if(p!==null){const b=p.array;f=p.version;for(let A=0,S=b.length;A<S;A+=3){const y=b[A+0],w=b[A+1],E=b[A+2];d.push(y,w,w,E,E,y)}}else{const b=g.array;f=g.version;for(let A=0,S=b.length/3-1;A<S;A+=3){const y=A+0,w=A+1,E=A+2;d.push(y,w,w,E,E,y)}}const m=new($h(d)?nd:td)(d,1);m.version=f;const _=a.get(h);_&&e.remove(_),a.set(h,m)}function u(h){const d=a.get(h);if(d){const p=h.index;p!==null&&d.version<p.version&&l(h)}else l(h);return a.get(h)}return{get:o,update:c,getWireframeAttribute:u}}function g_(r,e,t,n){const i=n.isWebGL2;let a;function s(d){a=d}let o,c;function l(d){o=d.type,c=d.bytesPerElement}function u(d,p){r.drawElements(a,p,o,d*c),t.update(p,a,1)}function h(d,p,g){if(g===0)return;let f,m;if(i)f=r,m="drawElementsInstanced";else if(f=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",f===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[m](a,p,o,d*c,g),t.update(p,a,g)}this.setMode=s,this.setIndex=l,this.render=u,this.renderInstances=h}function __(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(a,s,o){switch(t.calls++,s){case 4:t.triangles+=o*(a/3);break;case 1:t.lines+=o*(a/2);break;case 3:t.lines+=o*(a-1);break;case 2:t.lines+=o*a;break;case 0:t.points+=o*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function y_(r,e){return r[0]-e[0]}function v_(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Eo(r,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),r.divideScalar(t)}function b_(r,e,t){const n={},i=new Float32Array(8),a=new WeakMap,s=new je,o=[];for(let l=0;l<8;l++)o[l]=[l,0];function c(l,u,h,d){const p=l.morphTargetInfluences;if(e.isWebGL2===!0){const f=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=f!==void 0?f.length:0;let _=a.get(u);if(_===void 0||_.count!==m){let D=function(){U.dispose(),a.delete(u),u.removeEventListener("dispose",D)};var g=D;_!==void 0&&_.texture.dispose();const S=u.morphAttributes.position!==void 0,y=u.morphAttributes.normal!==void 0,w=u.morphAttributes.color!==void 0,E=u.morphAttributes.position||[],L=u.morphAttributes.normal||[],z=u.morphAttributes.color||[];let B=0;S===!0&&(B=1),y===!0&&(B=2),w===!0&&(B=3);let v=u.attributes.position.count*B,N=1;v>e.maxTextureSize&&(N=Math.ceil(v/e.maxTextureSize),v=e.maxTextureSize);const W=new Float32Array(v*N*4*m),U=new Rs(W,v,N,m);U.type=Si,U.needsUpdate=!0;const F=B*4;for(let k=0;k<m;k++){const P=E[k],j=L[k],J=z[k],Y=v*N*4*k;for(let Q=0;Q<P.count;Q++){const ae=Q*F;S===!0&&(s.fromBufferAttribute(P,Q),P.normalized===!0&&Eo(s,P),W[Y+ae+0]=s.x,W[Y+ae+1]=s.y,W[Y+ae+2]=s.z,W[Y+ae+3]=0),y===!0&&(s.fromBufferAttribute(j,Q),j.normalized===!0&&Eo(s,j),W[Y+ae+4]=s.x,W[Y+ae+5]=s.y,W[Y+ae+6]=s.z,W[Y+ae+7]=0),w===!0&&(s.fromBufferAttribute(J,Q),J.normalized===!0&&Eo(s,J),W[Y+ae+8]=s.x,W[Y+ae+9]=s.y,W[Y+ae+10]=s.z,W[Y+ae+11]=J.itemSize===4?s.w:1)}}_={count:m,texture:U,size:new ee(v,N)},a.set(u,_),u.addEventListener("dispose",D)}let b=0;for(let S=0;S<p.length;S++)b+=p[S];const A=u.morphTargetsRelative?1:1-b;d.getUniforms().setValue(r,"morphTargetBaseInfluence",A),d.getUniforms().setValue(r,"morphTargetInfluences",p),d.getUniforms().setValue(r,"morphTargetsTexture",_.texture,t),d.getUniforms().setValue(r,"morphTargetsTextureSize",_.size)}else{const f=p===void 0?0:p.length;let m=n[u.id];if(m===void 0||m.length!==f){m=[];for(let y=0;y<f;y++)m[y]=[y,0];n[u.id]=m}for(let y=0;y<f;y++){const w=m[y];w[0]=y,w[1]=p[y]}m.sort(v_);for(let y=0;y<8;y++)y<f&&m[y][1]?(o[y][0]=m[y][0],o[y][1]=m[y][1]):(o[y][0]=Number.MAX_SAFE_INTEGER,o[y][1]=0);o.sort(y_);const _=u.morphAttributes.position,b=u.morphAttributes.normal;let A=0;for(let y=0;y<8;y++){const w=o[y],E=w[0],L=w[1];E!==Number.MAX_SAFE_INTEGER&&L?(_&&u.getAttribute("morphTarget"+y)!==_[E]&&u.setAttribute("morphTarget"+y,_[E]),b&&u.getAttribute("morphNormal"+y)!==b[E]&&u.setAttribute("morphNormal"+y,b[E]),i[y]=L,A+=L):(_&&u.hasAttribute("morphTarget"+y)===!0&&u.deleteAttribute("morphTarget"+y),b&&u.hasAttribute("morphNormal"+y)===!0&&u.deleteAttribute("morphNormal"+y),i[y]=0)}const S=u.morphTargetsRelative?1:1-A;d.getUniforms().setValue(r,"morphTargetBaseInfluence",S),d.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:c}}function x_(r,e,t,n){let i=new WeakMap;function a(c){const l=n.render.frame,u=c.geometry,h=e.get(c,u);return i.get(h)!==l&&(e.update(h),i.set(h,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",o)===!1&&c.addEventListener("dispose",o),t.update(c.instanceMatrix,34962),c.instanceColor!==null&&t.update(c.instanceColor,34962)),h}function s(){i=new WeakMap}function o(c){const l=c.target;l.removeEventListener("dispose",o),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:a,dispose:s}}const rd=new _t,sd=new Rs,od=new Nl,ld=new Ls,cu=[],uu=[],hu=new Float32Array(16),du=new Float32Array(9),fu=new Float32Array(4);function Pa(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let a=cu[i];if(a===void 0&&(a=new Float32Array(i),cu[i]=a),e!==0){n.toArray(a,0);for(let s=1,o=0;s!==e;++s)o+=t,r[s].toArray(a,o)}return a}function Ut(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Rt(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Ps(r,e){let t=uu[e];t===void 0&&(t=new Int32Array(e),uu[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function S_(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function A_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ut(t,e))return;r.uniform2fv(this.addr,e),Rt(t,e)}}function C_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Ut(t,e))return;r.uniform3fv(this.addr,e),Rt(t,e)}}function M_(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ut(t,e))return;r.uniform4fv(this.addr,e),Rt(t,e)}}function w_(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ut(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Rt(t,e)}else{if(Ut(t,n))return;fu.set(n),r.uniformMatrix2fv(this.addr,!1,fu),Rt(t,n)}}function T_(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ut(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Rt(t,e)}else{if(Ut(t,n))return;du.set(n),r.uniformMatrix3fv(this.addr,!1,du),Rt(t,n)}}function E_(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ut(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Rt(t,e)}else{if(Ut(t,n))return;hu.set(n),r.uniformMatrix4fv(this.addr,!1,hu),Rt(t,n)}}function N_(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function R_(r,e){const t=this.cache;Ut(t,e)||(r.uniform2iv(this.addr,e),Rt(t,e))}function L_(r,e){const t=this.cache;Ut(t,e)||(r.uniform3iv(this.addr,e),Rt(t,e))}function U_(r,e){const t=this.cache;Ut(t,e)||(r.uniform4iv(this.addr,e),Rt(t,e))}function P_(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function D_(r,e){const t=this.cache;Ut(t,e)||(r.uniform2uiv(this.addr,e),Rt(t,e))}function B_(r,e){const t=this.cache;Ut(t,e)||(r.uniform3uiv(this.addr,e),Rt(t,e))}function I_(r,e){const t=this.cache;Ut(t,e)||(r.uniform4uiv(this.addr,e),Rt(t,e))}function F_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||rd,i)}function z_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||od,i)}function k_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||ld,i)}function O_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||sd,i)}function G_(r){switch(r){case 5126:return S_;case 35664:return A_;case 35665:return C_;case 35666:return M_;case 35674:return w_;case 35675:return T_;case 35676:return E_;case 5124:case 35670:return N_;case 35667:case 35671:return R_;case 35668:case 35672:return L_;case 35669:case 35673:return U_;case 5125:return P_;case 36294:return D_;case 36295:return B_;case 36296:return I_;case 35678:case 36198:case 36298:case 36306:case 35682:return F_;case 35679:case 36299:case 36307:return z_;case 35680:case 36300:case 36308:case 36293:return k_;case 36289:case 36303:case 36311:case 36292:return O_}}function H_(r,e){r.uniform1fv(this.addr,e)}function V_(r,e){const t=Pa(e,this.size,2);r.uniform2fv(this.addr,t)}function W_(r,e){const t=Pa(e,this.size,3);r.uniform3fv(this.addr,t)}function j_(r,e){const t=Pa(e,this.size,4);r.uniform4fv(this.addr,t)}function K_(r,e){const t=Pa(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function q_(r,e){const t=Pa(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function Z_(r,e){const t=Pa(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function X_(r,e){r.uniform1iv(this.addr,e)}function J_(r,e){r.uniform2iv(this.addr,e)}function Y_(r,e){r.uniform3iv(this.addr,e)}function $_(r,e){r.uniform4iv(this.addr,e)}function Q_(r,e){r.uniform1uiv(this.addr,e)}function ey(r,e){r.uniform2uiv(this.addr,e)}function ty(r,e){r.uniform3uiv(this.addr,e)}function ny(r,e){r.uniform4uiv(this.addr,e)}function iy(r,e,t){const n=e.length,i=Ps(t,n);r.uniform1iv(this.addr,i);for(let a=0;a!==n;++a)t.setTexture2D(e[a]||rd,i[a])}function ay(r,e,t){const n=e.length,i=Ps(t,n);r.uniform1iv(this.addr,i);for(let a=0;a!==n;++a)t.setTexture3D(e[a]||od,i[a])}function ry(r,e,t){const n=e.length,i=Ps(t,n);r.uniform1iv(this.addr,i);for(let a=0;a!==n;++a)t.setTextureCube(e[a]||ld,i[a])}function sy(r,e,t){const n=e.length,i=Ps(t,n);r.uniform1iv(this.addr,i);for(let a=0;a!==n;++a)t.setTexture2DArray(e[a]||sd,i[a])}function oy(r){switch(r){case 5126:return H_;case 35664:return V_;case 35665:return W_;case 35666:return j_;case 35674:return K_;case 35675:return q_;case 35676:return Z_;case 5124:case 35670:return X_;case 35667:case 35671:return J_;case 35668:case 35672:return Y_;case 35669:case 35673:return $_;case 5125:return Q_;case 36294:return ey;case 36295:return ty;case 36296:return ny;case 35678:case 36198:case 36298:case 36306:case 35682:return iy;case 35679:case 36299:case 36307:return ay;case 35680:case 36300:case 36308:case 36293:return ry;case 36289:case 36303:case 36311:case 36292:return sy}}function ly(r,e,t){this.id=r,this.addr=t,this.cache=[],this.setValue=G_(e.type)}function cd(r,e,t){this.id=r,this.addr=t,this.cache=[],this.size=e.size,this.setValue=oy(e.type)}cd.prototype.updateCache=function(r){const e=this.cache;r instanceof Float32Array&&e.length!==r.length&&(this.cache=new Float32Array(r.length)),Rt(e,r)};function ud(r){this.id=r,this.seq=[],this.map={}}ud.prototype.setValue=function(r,e,t){const n=this.seq;for(let i=0,a=n.length;i!==a;++i){const s=n[i];s.setValue(r,e[s.id],t)}};const No=/(\w+)(\])?(\[|\.)?/g;function pu(r,e){r.seq.push(e),r.map[e.id]=e}function cy(r,e,t){const n=r.name,i=n.length;for(No.lastIndex=0;;){const a=No.exec(n),s=No.lastIndex;let o=a[1];const c=a[2]==="]",l=a[3];if(c&&(o=o|0),l===void 0||l==="["&&s+2===i){pu(t,l===void 0?new ly(o,r,e):new cd(o,r,e));break}else{let h=t.map[o];h===void 0&&(h=new ud(o),pu(t,h)),t=h}}}function ti(r,e){this.seq=[],this.map={};const t=r.getProgramParameter(e,35718);for(let n=0;n<t;++n){const i=r.getActiveUniform(e,n),a=r.getUniformLocation(e,i.name);cy(i,a,this)}}ti.prototype.setValue=function(r,e,t,n){const i=this.map[e];i!==void 0&&i.setValue(r,t,n)};ti.prototype.setOptional=function(r,e,t){const n=e[t];n!==void 0&&this.setValue(r,t,n)};ti.upload=function(r,e,t,n){for(let i=0,a=e.length;i!==a;++i){const s=e[i],o=t[s.id];o.needsUpdate!==!1&&s.setValue(r,o.value,n)}};ti.seqWithValue=function(r,e){const t=[];for(let n=0,i=r.length;n!==i;++n){const a=r[n];a.id in e&&t.push(a)}return t};function mu(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let uy=0;function hy(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),a=Math.min(e+6,t.length);for(let s=i;s<a;s++)n.push(s+1+": "+t[s]);return n.join(`
`)}function dy(r){switch(r){case zn:return["Linear","( value )"];case $e:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function gu(r,e,t){const n=r.getShaderParameter(e,35713),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const a=parseInt(/ERROR: 0:(\d+)/.exec(i)[1]);return t.toUpperCase()+`

`+i+`

`+hy(r.getShaderSource(e),a)}function fy(r,e){const t=dy(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function py(r,e){let t;switch(e){case Bp:t="Linear";break;case Ip:t="Reinhard";break;case Fp:t="OptimizedCineon";break;case zp:t="ACESFilmic";break;case kp:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function my(r){return[r.extensionDerivatives||!!r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter($a).join(`
`)}function gy(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function _y(r,e){const t={},n=r.getProgramParameter(e,35721);for(let i=0;i<n;i++){const a=r.getActiveAttrib(e,i),s=a.name;let o=1;a.type===35674&&(o=2),a.type===35675&&(o=3),a.type===35676&&(o=4),t[s]={type:a.type,location:r.getAttribLocation(e,s),locationSize:o}}return t}function $a(r){return r!==""}function _u(r,e){return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function yu(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const yy=/^[ \t]*#include +<([\w\d./]+)>/gm;function al(r){return r.replace(yy,vy)}function vy(r,e){const t=De[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return al(t)}const by=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,xy=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function vu(r){return r.replace(xy,hd).replace(by,Sy)}function Sy(r,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),hd(r,e,t,n)}function hd(r,e,t,n){let i="";for(let a=parseInt(e);a<parseInt(t);a++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return i}function bu(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Ay(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Kh?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===fp?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Ya&&(e="SHADOWMAP_TYPE_VSM"),e}function Cy(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Ma:case wa:e="ENVMAP_TYPE_CUBE";break;case Es:e="ENVMAP_TYPE_CUBE_UV";break}return e}function My(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case wa:e="ENVMAP_MODE_REFRACTION";break}return e}function wy(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ts:e="ENVMAP_BLENDING_MULTIPLY";break;case Pp:e="ENVMAP_BLENDING_MIX";break;case Dp:e="ENVMAP_BLENDING_ADD";break}return e}function Ty(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e/32+1)+3,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Ey(r,e,t,n){const i=r.getContext(),a=t.defines;let s=t.vertexShader,o=t.fragmentShader;const c=Ay(t),l=Cy(t),u=My(t),h=wy(t),d=Ty(t),p=t.isWebGL2?"":my(t),g=gy(a),f=i.createProgram();let m,_,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=[g].filter($a).join(`
`),m.length>0&&(m+=`
`),_=[p,g].filter($a).join(`
`),_.length>0&&(_+=`
`)):(m=[bu(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter($a).join(`
`),_=[p,bu(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Bn?"#define TONE_MAPPING":"",t.toneMapping!==Bn?De.tonemapping_pars_fragment:"",t.toneMapping!==Bn?py("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",De.encodings_pars_fragment,fy("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter($a).join(`
`)),s=al(s),s=_u(s,t),s=yu(s,t),o=al(o),o=_u(o,t),o=yu(o,t),s=vu(s),o=vu(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,_=["#define varying in",t.glslVersion===Vc?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Vc?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const A=b+m+s,S=b+_+o,y=mu(i,35633,A),w=mu(i,35632,S);if(i.attachShader(f,y),i.attachShader(f,w),t.index0AttributeName!==void 0?i.bindAttribLocation(f,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(f,0,"position"),i.linkProgram(f),r.debug.checkShaderErrors){const z=i.getProgramInfoLog(f).trim(),B=i.getShaderInfoLog(y).trim(),v=i.getShaderInfoLog(w).trim();let N=!0,W=!0;if(i.getProgramParameter(f,35714)===!1){N=!1;const U=gu(i,y,"vertex"),F=gu(i,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(f,35715)+`

Program Info Log: `+z+`
`+U+`
`+F)}else z!==""?console.warn("THREE.WebGLProgram: Program Info Log:",z):(B===""||v==="")&&(W=!1);W&&(this.diagnostics={runnable:N,programLog:z,vertexShader:{log:B,prefix:m},fragmentShader:{log:v,prefix:_}})}i.deleteShader(y),i.deleteShader(w);let E;this.getUniforms=function(){return E===void 0&&(E=new ti(i,f)),E};let L;return this.getAttributes=function(){return L===void 0&&(L=_y(i,f)),L},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(f),this.program=void 0},this.name=t.shaderName,this.id=uy++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=y,this.fragmentShader=w,this}let Ny=0;class Ry{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),a=this._getShaderStage(n),s=this._getShaderCacheForMaterial(e);return s.has(i)===!1&&(s.add(i),i.usedTimes++),s.has(a)===!1&&(s.add(a),a.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new Ly(e);t.set(e,n)}return t.get(e)}}class Ly{constructor(e){this.id=Ny++,this.code=e,this.usedTimes=0}}function Uy(r,e,t,n,i,a,s){const o=new Rl,c=new Ry,l=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.floatVertexTextures,p=i.maxVertexUniforms,g=i.vertexTextures;let f=i.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(v){const W=v.skeleton.bones;if(d)return 1024;{const F=Math.floor((p-20)/4),D=Math.min(F,W.length);return D<W.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+W.length+" bones. This GPU supports "+D+"."),0):D}}function b(v,N,W,U,F){const D=U.fog,k=F.geometry,P=v.isMeshStandardMaterial?U.environment:null,j=(v.isMeshStandardMaterial?t:e).get(v.envMap||P),J=!!j&&j.mapping===Es?j.image.height:null,Y=m[v.type],Q=F.isSkinnedMesh?_(F):0;v.precision!==null&&(f=i.getMaxPrecision(v.precision),f!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",f,"instead."));const ae=k.morphAttributes.position||k.morphAttributes.normal||k.morphAttributes.color,Se=ae!==void 0?ae.length:0;let Ae=0;k.morphAttributes.position!==void 0&&(Ae=1),k.morphAttributes.normal!==void 0&&(Ae=2),k.morphAttributes.color!==void 0&&(Ae=3);let q,ke,Te,Ee;if(Y){const te=vn[Y];q=te.vertexShader,ke=te.fragmentShader}else q=v.vertexShader,ke=v.fragmentShader,c.update(v),Te=c.getVertexShaderID(v),Ee=c.getFragmentShaderID(v);const ne=r.getRenderTarget(),Pe=v.alphaTest>0,K=v.clearcoat>0;return{isWebGL2:u,shaderID:Y,shaderName:v.type,vertexShader:q,fragmentShader:ke,defines:v.defines,customVertexShaderID:Te,customFragmentShaderID:Ee,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:f,instancing:F.isInstancedMesh===!0,instancingColor:F.isInstancedMesh===!0&&F.instanceColor!==null,supportsVertexTextures:g,outputEncoding:ne===null?r.outputEncoding:ne.isXRRenderTarget===!0?ne.texture.encoding:zn,map:!!v.map,matcap:!!v.matcap,envMap:!!j,envMapMode:j&&j.mapping,envMapCubeUVHeight:J,lightMap:!!v.lightMap,aoMap:!!v.aoMap,emissiveMap:!!v.emissiveMap,bumpMap:!!v.bumpMap,normalMap:!!v.normalMap,objectSpaceNormalMap:v.normalMapType===lm,tangentSpaceNormalMap:v.normalMapType===Ra,decodeVideoTexture:!!v.map&&v.map.isVideoTexture===!0&&v.map.encoding===$e,clearcoat:K,clearcoatMap:K&&!!v.clearcoatMap,clearcoatRoughnessMap:K&&!!v.clearcoatRoughnessMap,clearcoatNormalMap:K&&!!v.clearcoatNormalMap,displacementMap:!!v.displacementMap,roughnessMap:!!v.roughnessMap,metalnessMap:!!v.metalnessMap,specularMap:!!v.specularMap,specularIntensityMap:!!v.specularIntensityMap,specularColorMap:!!v.specularColorMap,opaque:v.transparent===!1&&v.blending===ma,alphaMap:!!v.alphaMap,alphaTest:Pe,gradientMap:!!v.gradientMap,sheen:v.sheen>0,sheenColorMap:!!v.sheenColorMap,sheenRoughnessMap:!!v.sheenRoughnessMap,transmission:v.transmission>0,transmissionMap:!!v.transmissionMap,thicknessMap:!!v.thicknessMap,combine:v.combine,vertexTangents:!!v.normalMap&&!!k.attributes.tangent,vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!k.attributes.color&&k.attributes.color.itemSize===4,vertexUvs:!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatMap||!!v.clearcoatRoughnessMap||!!v.clearcoatNormalMap||!!v.displacementMap||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||!!v.sheenColorMap||!!v.sheenRoughnessMap,uvsVertexOnly:!(!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatNormalMap||v.transmission>0||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||v.sheen>0||!!v.sheenColorMap||!!v.sheenRoughnessMap)&&!!v.displacementMap,fog:!!D,useFog:v.fog,fogExp2:D&&D.isFogExp2,flatShading:!!v.flatShading,sizeAttenuation:v.sizeAttenuation,logarithmicDepthBuffer:h,skinning:F.isSkinnedMesh===!0&&Q>0,maxBones:Q,useVertexTexture:d,morphTargets:k.morphAttributes.position!==void 0,morphNormals:k.morphAttributes.normal!==void 0,morphColors:k.morphAttributes.color!==void 0,morphTargetsCount:Se,morphTextureStride:Ae,numDirLights:N.directional.length,numPointLights:N.point.length,numSpotLights:N.spot.length,numRectAreaLights:N.rectArea.length,numHemiLights:N.hemi.length,numDirLightShadows:N.directionalShadowMap.length,numPointLightShadows:N.pointShadowMap.length,numSpotLightShadows:N.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:v.dithering,shadowMapEnabled:r.shadowMap.enabled&&W.length>0,shadowMapType:r.shadowMap.type,toneMapping:v.toneMapped?r.toneMapping:Bn,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===Ca,flipSided:v.side===$t,depthPacking:v.depthPacking!==void 0?v.depthPacking:!1,index0AttributeName:v.index0AttributeName,extensionDerivatives:v.extensions&&v.extensions.derivatives,extensionFragDepth:v.extensions&&v.extensions.fragDepth,extensionDrawBuffers:v.extensions&&v.extensions.drawBuffers,extensionShaderTextureLOD:v.extensions&&v.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:v.customProgramCacheKey()}}function A(v){const N=[];if(v.shaderID?N.push(v.shaderID):(N.push(v.customVertexShaderID),N.push(v.customFragmentShaderID)),v.defines!==void 0)for(const W in v.defines)N.push(W),N.push(v.defines[W]);return v.isRawShaderMaterial===!1&&(S(N,v),y(N,v),N.push(r.outputEncoding)),N.push(v.customProgramCacheKey),N.join()}function S(v,N){v.push(N.precision),v.push(N.outputEncoding),v.push(N.envMapMode),v.push(N.envMapCubeUVHeight),v.push(N.combine),v.push(N.vertexUvs),v.push(N.fogExp2),v.push(N.sizeAttenuation),v.push(N.maxBones),v.push(N.morphTargetsCount),v.push(N.morphAttributeCount),v.push(N.numDirLights),v.push(N.numPointLights),v.push(N.numSpotLights),v.push(N.numHemiLights),v.push(N.numRectAreaLights),v.push(N.numDirLightShadows),v.push(N.numPointLightShadows),v.push(N.numSpotLightShadows),v.push(N.shadowMapType),v.push(N.toneMapping),v.push(N.numClippingPlanes),v.push(N.numClipIntersection)}function y(v,N){o.disableAll(),N.isWebGL2&&o.enable(0),N.supportsVertexTextures&&o.enable(1),N.instancing&&o.enable(2),N.instancingColor&&o.enable(3),N.map&&o.enable(4),N.matcap&&o.enable(5),N.envMap&&o.enable(6),N.lightMap&&o.enable(7),N.aoMap&&o.enable(8),N.emissiveMap&&o.enable(9),N.bumpMap&&o.enable(10),N.normalMap&&o.enable(11),N.objectSpaceNormalMap&&o.enable(12),N.tangentSpaceNormalMap&&o.enable(13),N.clearcoat&&o.enable(14),N.clearcoatMap&&o.enable(15),N.clearcoatRoughnessMap&&o.enable(16),N.clearcoatNormalMap&&o.enable(17),N.displacementMap&&o.enable(18),N.specularMap&&o.enable(19),N.roughnessMap&&o.enable(20),N.metalnessMap&&o.enable(21),N.gradientMap&&o.enable(22),N.alphaMap&&o.enable(23),N.alphaTest&&o.enable(24),N.vertexColors&&o.enable(25),N.vertexAlphas&&o.enable(26),N.vertexUvs&&o.enable(27),N.vertexTangents&&o.enable(28),N.uvsVertexOnly&&o.enable(29),N.fog&&o.enable(30),v.push(o.mask),o.disableAll(),N.useFog&&o.enable(0),N.flatShading&&o.enable(1),N.logarithmicDepthBuffer&&o.enable(2),N.skinning&&o.enable(3),N.useVertexTexture&&o.enable(4),N.morphTargets&&o.enable(5),N.morphNormals&&o.enable(6),N.morphColors&&o.enable(7),N.premultipliedAlpha&&o.enable(8),N.shadowMapEnabled&&o.enable(9),N.physicallyCorrectLights&&o.enable(10),N.doubleSided&&o.enable(11),N.flipSided&&o.enable(12),N.depthPacking&&o.enable(13),N.dithering&&o.enable(14),N.specularIntensityMap&&o.enable(15),N.specularColorMap&&o.enable(16),N.transmission&&o.enable(17),N.transmissionMap&&o.enable(18),N.thicknessMap&&o.enable(19),N.sheen&&o.enable(20),N.sheenColorMap&&o.enable(21),N.sheenRoughnessMap&&o.enable(22),N.decodeVideoTexture&&o.enable(23),N.opaque&&o.enable(24),v.push(o.mask)}function w(v){const N=m[v.type];let W;if(N){const U=vn[N];W=wm.clone(U.uniforms)}else W=v.uniforms;return W}function E(v,N){let W;for(let U=0,F=l.length;U<F;U++){const D=l[U];if(D.cacheKey===N){W=D,++W.usedTimes;break}}return W===void 0&&(W=new Ey(r,N,v,a),l.push(W)),W}function L(v){if(--v.usedTimes===0){const N=l.indexOf(v);l[N]=l[l.length-1],l.pop(),v.destroy()}}function z(v){c.remove(v)}function B(){c.dispose()}return{getParameters:b,getProgramCacheKey:A,getUniforms:w,acquireProgram:E,releaseProgram:L,releaseShaderCache:z,programs:l,dispose:B}}function Py(){let r=new WeakMap;function e(a){let s=r.get(a);return s===void 0&&(s={},r.set(a,s)),s}function t(a){r.delete(a)}function n(a,s,o){r.get(a)[s]=o}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function Dy(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function xu(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Su(){const r=[];let e=0;const t=[],n=[],i=[];function a(){e=0,t.length=0,n.length=0,i.length=0}function s(h,d,p,g,f,m){let _=r[e];return _===void 0?(_={id:h.id,object:h,geometry:d,material:p,groupOrder:g,renderOrder:h.renderOrder,z:f,group:m},r[e]=_):(_.id=h.id,_.object=h,_.geometry=d,_.material=p,_.groupOrder=g,_.renderOrder=h.renderOrder,_.z=f,_.group=m),e++,_}function o(h,d,p,g,f,m){const _=s(h,d,p,g,f,m);p.transmission>0?n.push(_):p.transparent===!0?i.push(_):t.push(_)}function c(h,d,p,g,f,m){const _=s(h,d,p,g,f,m);p.transmission>0?n.unshift(_):p.transparent===!0?i.unshift(_):t.unshift(_)}function l(h,d){t.length>1&&t.sort(h||Dy),n.length>1&&n.sort(d||xu),i.length>1&&i.sort(d||xu)}function u(){for(let h=e,d=r.length;h<d;h++){const p=r[h];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:t,transmissive:n,transparent:i,init:a,push:o,unshift:c,finish:u,sort:l}}function By(){let r=new WeakMap;function e(n,i){let a;return r.has(n)===!1?(a=new Su,r.set(n,[a])):i>=r.get(n).length?(a=new Su,r.get(n).push(a)):a=r.get(n)[i],a}function t(){r=new WeakMap}return{get:e,dispose:t}}function Iy(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new T,color:new pe};break;case"SpotLight":t={position:new T,direction:new T,color:new pe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new T,color:new pe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new T,skyColor:new pe,groundColor:new pe};break;case"RectAreaLight":t={color:new pe,position:new T,halfWidth:new T,halfHeight:new T};break}return r[e.id]=t,t}}}function Fy(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ee};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ee};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ee,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let zy=0;function ky(r,e){return(e.castShadow?1:0)-(r.castShadow?1:0)}function Oy(r,e){const t=new Iy,n=Fy(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new T);const a=new T,s=new me,o=new me;function c(u,h){let d=0,p=0,g=0;for(let z=0;z<9;z++)i.probe[z].set(0,0,0);let f=0,m=0,_=0,b=0,A=0,S=0,y=0,w=0;u.sort(ky);const E=h!==!0?Math.PI:1;for(let z=0,B=u.length;z<B;z++){const v=u[z],N=v.color,W=v.intensity,U=v.distance,F=v.shadow&&v.shadow.map?v.shadow.map.texture:null;if(v.isAmbientLight)d+=N.r*W*E,p+=N.g*W*E,g+=N.b*W*E;else if(v.isLightProbe)for(let D=0;D<9;D++)i.probe[D].addScaledVector(v.sh.coefficients[D],W);else if(v.isDirectionalLight){const D=t.get(v);if(D.color.copy(v.color).multiplyScalar(v.intensity*E),v.castShadow){const k=v.shadow,P=n.get(v);P.shadowBias=k.bias,P.shadowNormalBias=k.normalBias,P.shadowRadius=k.radius,P.shadowMapSize=k.mapSize,i.directionalShadow[f]=P,i.directionalShadowMap[f]=F,i.directionalShadowMatrix[f]=v.shadow.matrix,S++}i.directional[f]=D,f++}else if(v.isSpotLight){const D=t.get(v);if(D.position.setFromMatrixPosition(v.matrixWorld),D.color.copy(N).multiplyScalar(W*E),D.distance=U,D.coneCos=Math.cos(v.angle),D.penumbraCos=Math.cos(v.angle*(1-v.penumbra)),D.decay=v.decay,v.castShadow){const k=v.shadow,P=n.get(v);P.shadowBias=k.bias,P.shadowNormalBias=k.normalBias,P.shadowRadius=k.radius,P.shadowMapSize=k.mapSize,i.spotShadow[_]=P,i.spotShadowMap[_]=F,i.spotShadowMatrix[_]=v.shadow.matrix,w++}i.spot[_]=D,_++}else if(v.isRectAreaLight){const D=t.get(v);D.color.copy(N).multiplyScalar(W),D.halfWidth.set(v.width*.5,0,0),D.halfHeight.set(0,v.height*.5,0),i.rectArea[b]=D,b++}else if(v.isPointLight){const D=t.get(v);if(D.color.copy(v.color).multiplyScalar(v.intensity*E),D.distance=v.distance,D.decay=v.decay,v.castShadow){const k=v.shadow,P=n.get(v);P.shadowBias=k.bias,P.shadowNormalBias=k.normalBias,P.shadowRadius=k.radius,P.shadowMapSize=k.mapSize,P.shadowCameraNear=k.camera.near,P.shadowCameraFar=k.camera.far,i.pointShadow[m]=P,i.pointShadowMap[m]=F,i.pointShadowMatrix[m]=v.shadow.matrix,y++}i.point[m]=D,m++}else if(v.isHemisphereLight){const D=t.get(v);D.skyColor.copy(v.color).multiplyScalar(W*E),D.groundColor.copy(v.groundColor).multiplyScalar(W*E),i.hemi[A]=D,A++}}b>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=se.LTC_FLOAT_1,i.rectAreaLTC2=se.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=se.LTC_HALF_1,i.rectAreaLTC2=se.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=p,i.ambient[2]=g;const L=i.hash;(L.directionalLength!==f||L.pointLength!==m||L.spotLength!==_||L.rectAreaLength!==b||L.hemiLength!==A||L.numDirectionalShadows!==S||L.numPointShadows!==y||L.numSpotShadows!==w)&&(i.directional.length=f,i.spot.length=_,i.rectArea.length=b,i.point.length=m,i.hemi.length=A,i.directionalShadow.length=S,i.directionalShadowMap.length=S,i.pointShadow.length=y,i.pointShadowMap.length=y,i.spotShadow.length=w,i.spotShadowMap.length=w,i.directionalShadowMatrix.length=S,i.pointShadowMatrix.length=y,i.spotShadowMatrix.length=w,L.directionalLength=f,L.pointLength=m,L.spotLength=_,L.rectAreaLength=b,L.hemiLength=A,L.numDirectionalShadows=S,L.numPointShadows=y,L.numSpotShadows=w,i.version=zy++)}function l(u,h){let d=0,p=0,g=0,f=0,m=0;const _=h.matrixWorldInverse;for(let b=0,A=u.length;b<A;b++){const S=u[b];if(S.isDirectionalLight){const y=i.directional[d];y.direction.setFromMatrixPosition(S.matrixWorld),a.setFromMatrixPosition(S.target.matrixWorld),y.direction.sub(a),y.direction.transformDirection(_),d++}else if(S.isSpotLight){const y=i.spot[g];y.position.setFromMatrixPosition(S.matrixWorld),y.position.applyMatrix4(_),y.direction.setFromMatrixPosition(S.matrixWorld),a.setFromMatrixPosition(S.target.matrixWorld),y.direction.sub(a),y.direction.transformDirection(_),g++}else if(S.isRectAreaLight){const y=i.rectArea[f];y.position.setFromMatrixPosition(S.matrixWorld),y.position.applyMatrix4(_),o.identity(),s.copy(S.matrixWorld),s.premultiply(_),o.extractRotation(s),y.halfWidth.set(S.width*.5,0,0),y.halfHeight.set(0,S.height*.5,0),y.halfWidth.applyMatrix4(o),y.halfHeight.applyMatrix4(o),f++}else if(S.isPointLight){const y=i.point[p];y.position.setFromMatrixPosition(S.matrixWorld),y.position.applyMatrix4(_),p++}else if(S.isHemisphereLight){const y=i.hemi[m];y.direction.setFromMatrixPosition(S.matrixWorld),y.direction.transformDirection(_),y.direction.normalize(),m++}}}return{setup:c,setupView:l,state:i}}function Au(r,e){const t=new Oy(r,e),n=[],i=[];function a(){n.length=0,i.length=0}function s(h){n.push(h)}function o(h){i.push(h)}function c(h){t.setup(n,h)}function l(h){t.setupView(n,h)}return{init:a,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:c,setupLightsView:l,pushLight:s,pushShadow:o}}function Gy(r,e){let t=new WeakMap;function n(a,s=0){let o;return t.has(a)===!1?(o=new Au(r,e),t.set(a,[o])):s>=t.get(a).length?(o=new Au(r,e),t.get(a).push(o)):o=t.get(a)[s],o}function i(){t=new WeakMap}return{get:n,dispose:i}}class Il extends ht{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=sm,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}Il.prototype.isMeshDepthMaterial=!0;class Fl extends ht{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new T,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Fl.prototype.isMeshDistanceMaterial=!0;const Hy=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Vy=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function dd(r,e,t){let n=new Us;const i=new ee,a=new ee,s=new je,o=new Il({depthPacking:om}),c=new Fl,l={},u=t.maxTextureSize,h={0:$t,1:hr,2:Ca},d=new Kt({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ee},radius:{value:4}},vertexShader:Hy,fragmentShader:Vy}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const g=new Xe;g.setAttribute("position",new ut(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new St(g,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Kh,this.render=function(S,y,w){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||S.length===0)return;const E=r.getRenderTarget(),L=r.getActiveCubeFace(),z=r.getActiveMipmapLevel(),B=r.state;B.setBlending(ei),B.buffers.color.setClear(1,1,1,1),B.buffers.depth.setTest(!0),B.setScissorTest(!1);for(let v=0,N=S.length;v<N;v++){const W=S[v],U=W.shadow;if(U===void 0){console.warn("THREE.WebGLShadowMap:",W,"has no shadow.");continue}if(U.autoUpdate===!1&&U.needsUpdate===!1)continue;i.copy(U.mapSize);const F=U.getFrameExtents();if(i.multiply(F),a.copy(U.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(a.x=Math.floor(u/F.x),i.x=a.x*F.x,U.mapSize.x=a.x),i.y>u&&(a.y=Math.floor(u/F.y),i.y=a.y*F.y,U.mapSize.y=a.y)),U.map===null&&!U.isPointLightShadow&&this.type===Ya&&(U.map=new Wt(i.x,i.y),U.map.texture.name=W.name+".shadowMap",U.mapPass=new Wt(i.x,i.y),U.camera.updateProjectionMatrix()),U.map===null){const k={minFilter:pt,magFilter:pt,format:ln};U.map=new Wt(i.x,i.y,k),U.map.texture.name=W.name+".shadowMap",U.camera.updateProjectionMatrix()}r.setRenderTarget(U.map),r.clear();const D=U.getViewportCount();for(let k=0;k<D;k++){const P=U.getViewport(k);s.set(a.x*P.x,a.y*P.y,a.x*P.z,a.y*P.w),B.viewport(s),U.updateMatrices(W,k),n=U.getFrustum(),A(y,w,U.camera,W,this.type)}!U.isPointLightShadow&&this.type===Ya&&_(U,w),U.needsUpdate=!1}m.needsUpdate=!1,r.setRenderTarget(E,L,z)};function _(S,y){const w=e.update(f);d.defines.VSM_SAMPLES!==S.blurSamples&&(d.defines.VSM_SAMPLES=S.blurSamples,p.defines.VSM_SAMPLES=S.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),d.uniforms.shadow_pass.value=S.map.texture,d.uniforms.resolution.value=S.mapSize,d.uniforms.radius.value=S.radius,r.setRenderTarget(S.mapPass),r.clear(),r.renderBufferDirect(y,null,w,d,f,null),p.uniforms.shadow_pass.value=S.mapPass.texture,p.uniforms.resolution.value=S.mapSize,p.uniforms.radius.value=S.radius,r.setRenderTarget(S.map),r.clear(),r.renderBufferDirect(y,null,w,p,f,null)}function b(S,y,w,E,L,z){let B=null;const v=w.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(v!==void 0?B=v:B=w.isPointLight===!0?c:o,r.localClippingEnabled&&y.clipShadows===!0&&y.clippingPlanes.length!==0||y.displacementMap&&y.displacementScale!==0||y.alphaMap&&y.alphaTest>0){const N=B.uuid,W=y.uuid;let U=l[N];U===void 0&&(U={},l[N]=U);let F=U[W];F===void 0&&(F=B.clone(),U[W]=F),B=F}return B.visible=y.visible,B.wireframe=y.wireframe,z===Ya?B.side=y.shadowSide!==null?y.shadowSide:y.side:B.side=y.shadowSide!==null?y.shadowSide:h[y.side],B.alphaMap=y.alphaMap,B.alphaTest=y.alphaTest,B.clipShadows=y.clipShadows,B.clippingPlanes=y.clippingPlanes,B.clipIntersection=y.clipIntersection,B.displacementMap=y.displacementMap,B.displacementScale=y.displacementScale,B.displacementBias=y.displacementBias,B.wireframeLinewidth=y.wireframeLinewidth,B.linewidth=y.linewidth,w.isPointLight===!0&&B.isMeshDistanceMaterial===!0&&(B.referencePosition.setFromMatrixPosition(w.matrixWorld),B.nearDistance=E,B.farDistance=L),B}function A(S,y,w,E,L){if(S.visible===!1)return;if(S.layers.test(y.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&L===Ya)&&(!S.frustumCulled||n.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,S.matrixWorld);const v=e.update(S),N=S.material;if(Array.isArray(N)){const W=v.groups;for(let U=0,F=W.length;U<F;U++){const D=W[U],k=N[D.materialIndex];if(k&&k.visible){const P=b(S,k,E,w.near,w.far,L);r.renderBufferDirect(w,null,v,P,S,D)}}}else if(N.visible){const W=b(S,N,E,w.near,w.far,L);r.renderBufferDirect(w,null,v,W,S,null)}}const B=S.children;for(let v=0,N=B.length;v<N;v++)A(B[v],y,w,E,L)}}function Wy(r,e,t){const n=t.isWebGL2;function i(){let R=!1;const oe=new je;let re=null;const ve=new je(0,0,0,0);return{setMask:function(he){re!==he&&!R&&(r.colorMask(he,he,he,he),re=he)},setLocked:function(he){R=he},setClear:function(he,be,ie,Ce,Je){Je===!0&&(he*=Ce,be*=Ce,ie*=Ce),oe.set(he,be,ie,Ce),ve.equals(oe)===!1&&(r.clearColor(he,be,ie,Ce),ve.copy(oe))},reset:function(){R=!1,re=null,ve.set(-1,0,0,0)}}}function a(){let R=!1,oe=null,re=null,ve=null;return{setTest:function(he){he?Ae(2929):q(2929)},setMask:function(he){oe!==he&&!R&&(r.depthMask(he),oe=he)},setFunc:function(he){if(re!==he){if(he)switch(he){case wp:r.depthFunc(512);break;case Tp:r.depthFunc(519);break;case Ep:r.depthFunc(513);break;case Jo:r.depthFunc(515);break;case Np:r.depthFunc(514);break;case Rp:r.depthFunc(518);break;case Lp:r.depthFunc(516);break;case Up:r.depthFunc(517);break;default:r.depthFunc(515)}else r.depthFunc(515);re=he}},setLocked:function(he){R=he},setClear:function(he){ve!==he&&(r.clearDepth(he),ve=he)},reset:function(){R=!1,oe=null,re=null,ve=null}}}function s(){let R=!1,oe=null,re=null,ve=null,he=null,be=null,ie=null,Ce=null,Je=null;return{setTest:function(Ie){R||(Ie?Ae(2960):q(2960))},setMask:function(Ie){oe!==Ie&&!R&&(r.stencilMask(Ie),oe=Ie)},setFunc:function(Ie,dn,fn){(re!==Ie||ve!==dn||he!==fn)&&(r.stencilFunc(Ie,dn,fn),re=Ie,ve=dn,he=fn)},setOp:function(Ie,dn,fn){(be!==Ie||ie!==dn||Ce!==fn)&&(r.stencilOp(Ie,dn,fn),be=Ie,ie=dn,Ce=fn)},setLocked:function(Ie){R=Ie},setClear:function(Ie){Je!==Ie&&(r.clearStencil(Ie),Je=Ie)},reset:function(){R=!1,oe=null,re=null,ve=null,he=null,be=null,ie=null,Ce=null,Je=null}}}const o=new i,c=new a,l=new s;let u={},h={},d=new WeakMap,p=[],g=null,f=!1,m=null,_=null,b=null,A=null,S=null,y=null,w=null,E=!1,L=null,z=null,B=null,v=null,N=null;const W=r.getParameter(35661);let U=!1,F=0;const D=r.getParameter(7938);D.indexOf("WebGL")!==-1?(F=parseFloat(/^WebGL (\d)/.exec(D)[1]),U=F>=1):D.indexOf("OpenGL ES")!==-1&&(F=parseFloat(/^OpenGL ES (\d)/.exec(D)[1]),U=F>=2);let k=null,P={};const j=r.getParameter(3088),J=r.getParameter(2978),Y=new je().fromArray(j),Q=new je().fromArray(J);function ae(R,oe,re){const ve=new Uint8Array(4),he=r.createTexture();r.bindTexture(R,he),r.texParameteri(R,10241,9728),r.texParameteri(R,10240,9728);for(let be=0;be<re;be++)r.texImage2D(oe+be,0,6408,1,1,0,6408,5121,ve);return he}const Se={};Se[3553]=ae(3553,3553,1),Se[34067]=ae(34067,34069,6),o.setClear(0,0,0,1),c.setClear(1),l.setClear(0),Ae(2929),c.setFunc(Jo),te(!1),de(mc),Ae(2884),K(ei);function Ae(R){u[R]!==!0&&(r.enable(R),u[R]=!0)}function q(R){u[R]!==!1&&(r.disable(R),u[R]=!1)}function ke(R,oe){return h[R]!==oe?(r.bindFramebuffer(R,oe),h[R]=oe,n&&(R===36009&&(h[36160]=oe),R===36160&&(h[36009]=oe)),!0):!1}function Te(R,oe){let re=p,ve=!1;if(R)if(re=d.get(oe),re===void 0&&(re=[],d.set(oe,re)),R.isWebGLMultipleRenderTargets){const he=R.texture;if(re.length!==he.length||re[0]!==36064){for(let be=0,ie=he.length;be<ie;be++)re[be]=36064+be;re.length=he.length,ve=!0}}else re[0]!==36064&&(re[0]=36064,ve=!0);else re[0]!==1029&&(re[0]=1029,ve=!0);ve&&(t.isWebGL2?r.drawBuffers(re):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(re))}function Ee(R){return g!==R?(r.useProgram(R),g=R,!0):!1}const ne={[aa]:32774,[mp]:32778,[gp]:32779};if(n)ne[yc]=32775,ne[vc]=32776;else{const R=e.get("EXT_blend_minmax");R!==null&&(ne[yc]=R.MIN_EXT,ne[vc]=R.MAX_EXT)}const Pe={[_p]:0,[yp]:1,[vp]:768,[Zh]:770,[Mp]:776,[Ap]:774,[xp]:772,[bp]:769,[Xh]:771,[Cp]:775,[Sp]:773};function K(R,oe,re,ve,he,be,ie,Ce){if(R===ei){f===!0&&(q(3042),f=!1);return}if(f===!1&&(Ae(3042),f=!0),R!==pp){if(R!==m||Ce!==E){if((_!==aa||S!==aa)&&(r.blendEquation(32774),_=aa,S=aa),Ce)switch(R){case ma:r.blendFuncSeparate(1,771,1,771);break;case Xo:r.blendFunc(1,1);break;case gc:r.blendFuncSeparate(0,769,0,1);break;case _c:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}else switch(R){case ma:r.blendFuncSeparate(770,771,1,771);break;case Xo:r.blendFunc(770,1);break;case gc:r.blendFuncSeparate(0,769,0,1);break;case _c:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}b=null,A=null,y=null,w=null,m=R,E=Ce}return}he=he||oe,be=be||re,ie=ie||ve,(oe!==_||he!==S)&&(r.blendEquationSeparate(ne[oe],ne[he]),_=oe,S=he),(re!==b||ve!==A||be!==y||ie!==w)&&(r.blendFuncSeparate(Pe[re],Pe[ve],Pe[be],Pe[ie]),b=re,A=ve,y=be,w=ie),m=R,E=null}function X(R,oe){R.side===Ca?q(2884):Ae(2884);let re=R.side===$t;oe&&(re=!re),te(re),R.blending===ma&&R.transparent===!1?K(ei):K(R.blending,R.blendEquation,R.blendSrc,R.blendDst,R.blendEquationAlpha,R.blendSrcAlpha,R.blendDstAlpha,R.premultipliedAlpha),c.setFunc(R.depthFunc),c.setTest(R.depthTest),c.setMask(R.depthWrite),o.setMask(R.colorWrite);const ve=R.stencilWrite;l.setTest(ve),ve&&(l.setMask(R.stencilWriteMask),l.setFunc(R.stencilFunc,R.stencilRef,R.stencilFuncMask),l.setOp(R.stencilFail,R.stencilZFail,R.stencilZPass)),Me(R.polygonOffset,R.polygonOffsetFactor,R.polygonOffsetUnits),R.alphaToCoverage===!0?Ae(32926):q(32926)}function te(R){L!==R&&(R?r.frontFace(2304):r.frontFace(2305),L=R)}function de(R){R!==hp?(Ae(2884),R!==z&&(R===mc?r.cullFace(1029):R===dp?r.cullFace(1028):r.cullFace(1032))):q(2884),z=R}function ce(R){R!==B&&(U&&r.lineWidth(R),B=R)}function Me(R,oe,re){R?(Ae(32823),(v!==oe||N!==re)&&(r.polygonOffset(oe,re),v=oe,N=re)):q(32823)}function ye(R){R?Ae(3089):q(3089)}function ge(R){R===void 0&&(R=33984+W-1),k!==R&&(r.activeTexture(R),k=R)}function et(R,oe){k===null&&ge();let re=P[k];re===void 0&&(re={type:void 0,texture:void 0},P[k]=re),(re.type!==R||re.texture!==oe)&&(r.bindTexture(R,oe||Se[R]),re.type=R,re.texture=oe)}function Ke(){const R=P[k];R!==void 0&&R.type!==void 0&&(r.bindTexture(R.type,null),R.type=void 0,R.texture=void 0)}function M(){try{r.compressedTexImage2D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function x(){try{r.texSubImage2D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function H(){try{r.texSubImage3D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function $(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function le(){try{r.texStorage2D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function ue(){try{r.texStorage3D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function _e(){try{r.texImage2D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function V(){try{r.texImage3D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function Ne(R){Y.equals(R)===!1&&(r.scissor(R.x,R.y,R.z,R.w),Y.copy(R))}function Le(R){Q.equals(R)===!1&&(r.viewport(R.x,R.y,R.z,R.w),Q.copy(R))}function fe(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),n===!0&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},k=null,P={},h={},d=new WeakMap,p=[],g=null,f=!1,m=null,_=null,b=null,A=null,S=null,y=null,w=null,E=!1,L=null,z=null,B=null,v=null,N=null,Y.set(0,0,r.canvas.width,r.canvas.height),Q.set(0,0,r.canvas.width,r.canvas.height),o.reset(),c.reset(),l.reset()}return{buffers:{color:o,depth:c,stencil:l},enable:Ae,disable:q,bindFramebuffer:ke,drawBuffers:Te,useProgram:Ee,setBlending:K,setMaterial:X,setFlipSided:te,setCullFace:de,setLineWidth:ce,setPolygonOffset:Me,setScissorTest:ye,activeTexture:ge,bindTexture:et,unbindTexture:Ke,compressedTexImage2D:M,texImage2D:_e,texImage3D:V,texStorage2D:le,texStorage3D:ue,texSubImage2D:x,texSubImage3D:H,compressedTexSubImage2D:$,scissor:Ne,viewport:Le,reset:fe}}function jy(r,e,t,n,i,a,s){const o=i.isWebGL2,c=i.maxTextures,l=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let f;const m=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b(M,x){return _?new OffscreenCanvas(M,x):pr("canvas")}function A(M,x,H,$){let le=1;if((M.width>$||M.height>$)&&(le=$/Math.max(M.width,M.height)),le<1||x===!0)if(typeof HTMLImageElement!="undefined"&&M instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&M instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&M instanceof ImageBitmap){const ue=x?il:Math.floor,_e=ue(le*M.width),V=ue(le*M.height);f===void 0&&(f=b(_e,V));const Ne=H?b(_e,V):f;return Ne.width=_e,Ne.height=V,Ne.getContext("2d").drawImage(M,0,0,_e,V),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+M.width+"x"+M.height+") to ("+_e+"x"+V+")."),Ne}else return"data"in M&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+M.width+"x"+M.height+")."),M;return M}function S(M){return Wc(M.width)&&Wc(M.height)}function y(M){return o?!1:M.wrapS!==on||M.wrapT!==on||M.minFilter!==pt&&M.minFilter!==Pt}function w(M,x){return M.generateMipmaps&&x&&M.minFilter!==pt&&M.minFilter!==Pt}function E(M){r.generateMipmap(M)}function L(M,x,H,$,le=!1){if(o===!1)return x;if(M!==null){if(r[M]!==void 0)return r[M];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+M+"'")}let ue=x;return x===6403&&(H===5126&&(ue=33326),H===5131&&(ue=33325),H===5121&&(ue=33321)),x===33319&&(H===5126&&(ue=33328),H===5131&&(ue=33327),H===5121&&(ue=33323)),x===6408&&(H===5126&&(ue=34836),H===5131&&(ue=34842),H===5121&&(ue=$===$e&&le===!1?35907:32856),H===32819&&(ue=32854),H===32820&&(ue=32855)),(ue===33325||ue===33326||ue===33327||ue===33328||ue===34842||ue===34836)&&e.get("EXT_color_buffer_float"),ue}function z(M,x,H){return w(M,H)===!0||M.isFramebufferTexture&&M.minFilter!==pt&&M.minFilter!==Pt?Math.log2(Math.max(x.width,x.height))+1:M.mipmaps!==void 0&&M.mipmaps.length>0?M.mipmaps.length:M.isCompressedTexture&&Array.isArray(M.image)?x.mipmaps.length:1}function B(M){return M===pt||M===bc||M===xc?9728:9729}function v(M){const x=M.target;x.removeEventListener("dispose",v),W(x),x.isVideoTexture&&g.delete(x)}function N(M){const x=M.target;x.removeEventListener("dispose",N),F(x)}function W(M){const x=n.get(M);if(x.__webglInit===void 0)return;const H=M.source,$=m.get(H);if($){const le=$[x.__cacheKey];le.usedTimes--,le.usedTimes===0&&U(M),Object.keys($).length===0&&m.delete(H)}n.remove(M)}function U(M){const x=n.get(M);r.deleteTexture(x.__webglTexture);const H=M.source,$=m.get(H);delete $[x.__cacheKey],s.memory.textures--}function F(M){const x=M.texture,H=n.get(M),$=n.get(x);if($.__webglTexture!==void 0&&(r.deleteTexture($.__webglTexture),s.memory.textures--),M.depthTexture&&M.depthTexture.dispose(),M.isWebGLCubeRenderTarget)for(let le=0;le<6;le++)r.deleteFramebuffer(H.__webglFramebuffer[le]),H.__webglDepthbuffer&&r.deleteRenderbuffer(H.__webglDepthbuffer[le]);else r.deleteFramebuffer(H.__webglFramebuffer),H.__webglDepthbuffer&&r.deleteRenderbuffer(H.__webglDepthbuffer),H.__webglMultisampledFramebuffer&&r.deleteFramebuffer(H.__webglMultisampledFramebuffer),H.__webglColorRenderbuffer&&r.deleteRenderbuffer(H.__webglColorRenderbuffer),H.__webglDepthRenderbuffer&&r.deleteRenderbuffer(H.__webglDepthRenderbuffer);if(M.isWebGLMultipleRenderTargets)for(let le=0,ue=x.length;le<ue;le++){const _e=n.get(x[le]);_e.__webglTexture&&(r.deleteTexture(_e.__webglTexture),s.memory.textures--),n.remove(x[le])}n.remove(x),n.remove(M)}let D=0;function k(){D=0}function P(){const M=D;return M>=c&&console.warn("THREE.WebGLTextures: Trying to use "+M+" texture units while this GPU supports only "+c),D+=1,M}function j(M){const x=[];return x.push(M.wrapS),x.push(M.wrapT),x.push(M.magFilter),x.push(M.minFilter),x.push(M.anisotropy),x.push(M.internalFormat),x.push(M.format),x.push(M.type),x.push(M.generateMipmaps),x.push(M.premultiplyAlpha),x.push(M.flipY),x.push(M.unpackAlignment),x.push(M.encoding),x.join()}function J(M,x){const H=n.get(M);if(M.isVideoTexture&&et(M),M.isRenderTargetTexture===!1&&M.version>0&&H.__version!==M.version){const $=M.image;if($===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if($.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Te(H,M,x);return}}t.activeTexture(33984+x),t.bindTexture(3553,H.__webglTexture)}function Y(M,x){const H=n.get(M);if(M.version>0&&H.__version!==M.version){Te(H,M,x);return}t.activeTexture(33984+x),t.bindTexture(35866,H.__webglTexture)}function Q(M,x){const H=n.get(M);if(M.version>0&&H.__version!==M.version){Te(H,M,x);return}t.activeTexture(33984+x),t.bindTexture(32879,H.__webglTexture)}function ae(M,x){const H=n.get(M);if(M.version>0&&H.__version!==M.version){Ee(H,M,x);return}t.activeTexture(33984+x),t.bindTexture(34067,H.__webglTexture)}const Se={[Qo]:10497,[on]:33071,[el]:33648},Ae={[pt]:9728,[bc]:9984,[xc]:9986,[Pt]:9729,[Op]:9985,[Ns]:9987};function q(M,x,H){if(H?(r.texParameteri(M,10242,Se[x.wrapS]),r.texParameteri(M,10243,Se[x.wrapT]),(M===32879||M===35866)&&r.texParameteri(M,32882,Se[x.wrapR]),r.texParameteri(M,10240,Ae[x.magFilter]),r.texParameteri(M,10241,Ae[x.minFilter])):(r.texParameteri(M,10242,33071),r.texParameteri(M,10243,33071),(M===32879||M===35866)&&r.texParameteri(M,32882,33071),(x.wrapS!==on||x.wrapT!==on)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(M,10240,B(x.magFilter)),r.texParameteri(M,10241,B(x.minFilter)),x.minFilter!==pt&&x.minFilter!==Pt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const $=e.get("EXT_texture_filter_anisotropic");if(x.type===Si&&e.has("OES_texture_float_linear")===!1||o===!1&&x.type===ga&&e.has("OES_texture_half_float_linear")===!1)return;(x.anisotropy>1||n.get(x).__currentAnisotropy)&&(r.texParameterf(M,$.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(x.anisotropy,i.getMaxAnisotropy())),n.get(x).__currentAnisotropy=x.anisotropy)}}function ke(M,x){let H=!1;M.__webglInit===void 0&&(M.__webglInit=!0,x.addEventListener("dispose",v));const $=x.source;let le=m.get($);le===void 0&&(le={},m.set($,le));const ue=j(x);if(ue!==M.__cacheKey){le[ue]===void 0&&(le[ue]={texture:r.createTexture(),usedTimes:0},s.memory.textures++,H=!0),le[ue].usedTimes++;const _e=le[M.__cacheKey];_e!==void 0&&(le[M.__cacheKey].usedTimes--,_e.usedTimes===0&&U(x)),M.__cacheKey=ue,M.__webglTexture=le[ue].texture}return H}function Te(M,x,H){let $=3553;x.isDataArrayTexture&&($=35866),x.isData3DTexture&&($=32879);const le=ke(M,x),ue=x.source;if(t.activeTexture(33984+H),t.bindTexture($,M.__webglTexture),ue.version!==ue.__currentVersion||le===!0){r.pixelStorei(37440,x.flipY),r.pixelStorei(37441,x.premultiplyAlpha),r.pixelStorei(3317,x.unpackAlignment),r.pixelStorei(37443,0);const _e=y(x)&&S(x.image)===!1;let V=A(x.image,_e,!1,u);V=Ke(x,V);const Ne=S(V)||o,Le=a.convert(x.format,x.encoding);let fe=a.convert(x.type),R=L(x.internalFormat,Le,fe,x.encoding,x.isVideoTexture);q($,x,Ne);let oe;const re=x.mipmaps,ve=o&&x.isVideoTexture!==!0,he=M.__version===void 0,be=z(x,V,Ne);if(x.isDepthTexture)R=6402,o?x.type===Si?R=36012:x.type===ls?R=33190:x.type===_a?R=35056:R=33189:x.type===Si&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),x.format===Ti&&R===6402&&x.type!==dr&&x.type!==ls&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),x.type=dr,fe=a.convert(x.type)),x.format===Ta&&R===6402&&(R=34041,x.type!==_a&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),x.type=_a,fe=a.convert(x.type))),ve&&he?t.texStorage2D(3553,1,R,V.width,V.height):t.texImage2D(3553,0,R,V.width,V.height,0,Le,fe,null);else if(x.isDataTexture)if(re.length>0&&Ne){ve&&he&&t.texStorage2D(3553,be,R,re[0].width,re[0].height);for(let ie=0,Ce=re.length;ie<Ce;ie++)oe=re[ie],ve?t.texSubImage2D(3553,ie,0,0,oe.width,oe.height,Le,fe,oe.data):t.texImage2D(3553,ie,R,oe.width,oe.height,0,Le,fe,oe.data);x.generateMipmaps=!1}else ve?(he&&t.texStorage2D(3553,be,R,V.width,V.height),t.texSubImage2D(3553,0,0,0,V.width,V.height,Le,fe,V.data)):t.texImage2D(3553,0,R,V.width,V.height,0,Le,fe,V.data);else if(x.isCompressedTexture){ve&&he&&t.texStorage2D(3553,be,R,re[0].width,re[0].height);for(let ie=0,Ce=re.length;ie<Ce;ie++)oe=re[ie],x.format!==ln?Le!==null?ve?t.compressedTexSubImage2D(3553,ie,0,0,oe.width,oe.height,Le,oe.data):t.compressedTexImage2D(3553,ie,R,oe.width,oe.height,0,oe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ve?t.texSubImage2D(3553,ie,0,0,oe.width,oe.height,Le,fe,oe.data):t.texImage2D(3553,ie,R,oe.width,oe.height,0,Le,fe,oe.data)}else if(x.isDataArrayTexture)ve?(he&&t.texStorage3D(35866,be,R,V.width,V.height,V.depth),t.texSubImage3D(35866,0,0,0,0,V.width,V.height,V.depth,Le,fe,V.data)):t.texImage3D(35866,0,R,V.width,V.height,V.depth,0,Le,fe,V.data);else if(x.isData3DTexture)ve?(he&&t.texStorage3D(32879,be,R,V.width,V.height,V.depth),t.texSubImage3D(32879,0,0,0,0,V.width,V.height,V.depth,Le,fe,V.data)):t.texImage3D(32879,0,R,V.width,V.height,V.depth,0,Le,fe,V.data);else if(x.isFramebufferTexture)ve&&he?t.texStorage2D(3553,be,R,V.width,V.height):t.texImage2D(3553,0,R,V.width,V.height,0,Le,fe,null);else if(re.length>0&&Ne){ve&&he&&t.texStorage2D(3553,be,R,re[0].width,re[0].height);for(let ie=0,Ce=re.length;ie<Ce;ie++)oe=re[ie],ve?t.texSubImage2D(3553,ie,0,0,Le,fe,oe):t.texImage2D(3553,ie,R,Le,fe,oe);x.generateMipmaps=!1}else ve?(he&&t.texStorage2D(3553,be,R,V.width,V.height),t.texSubImage2D(3553,0,0,0,Le,fe,V)):t.texImage2D(3553,0,R,Le,fe,V);w(x,Ne)&&E($),ue.__currentVersion=ue.version,x.onUpdate&&x.onUpdate(x)}M.__version=x.version}function Ee(M,x,H){if(x.image.length!==6)return;const $=ke(M,x),le=x.source;if(t.activeTexture(33984+H),t.bindTexture(34067,M.__webglTexture),le.version!==le.__currentVersion||$===!0){r.pixelStorei(37440,x.flipY),r.pixelStorei(37441,x.premultiplyAlpha),r.pixelStorei(3317,x.unpackAlignment),r.pixelStorei(37443,0);const ue=x.isCompressedTexture||x.image[0].isCompressedTexture,_e=x.image[0]&&x.image[0].isDataTexture,V=[];for(let ie=0;ie<6;ie++)!ue&&!_e?V[ie]=A(x.image[ie],!1,!0,l):V[ie]=_e?x.image[ie].image:x.image[ie],V[ie]=Ke(x,V[ie]);const Ne=V[0],Le=S(Ne)||o,fe=a.convert(x.format,x.encoding),R=a.convert(x.type),oe=L(x.internalFormat,fe,R,x.encoding),re=o&&x.isVideoTexture!==!0,ve=M.__version===void 0;let he=z(x,Ne,Le);q(34067,x,Le);let be;if(ue){re&&ve&&t.texStorage2D(34067,he,oe,Ne.width,Ne.height);for(let ie=0;ie<6;ie++){be=V[ie].mipmaps;for(let Ce=0;Ce<be.length;Ce++){const Je=be[Ce];x.format!==ln?fe!==null?re?t.compressedTexSubImage2D(34069+ie,Ce,0,0,Je.width,Je.height,fe,Je.data):t.compressedTexImage2D(34069+ie,Ce,oe,Je.width,Je.height,0,Je.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):re?t.texSubImage2D(34069+ie,Ce,0,0,Je.width,Je.height,fe,R,Je.data):t.texImage2D(34069+ie,Ce,oe,Je.width,Je.height,0,fe,R,Je.data)}}}else{be=x.mipmaps,re&&ve&&(be.length>0&&he++,t.texStorage2D(34067,he,oe,V[0].width,V[0].height));for(let ie=0;ie<6;ie++)if(_e){re?t.texSubImage2D(34069+ie,0,0,0,V[ie].width,V[ie].height,fe,R,V[ie].data):t.texImage2D(34069+ie,0,oe,V[ie].width,V[ie].height,0,fe,R,V[ie].data);for(let Ce=0;Ce<be.length;Ce++){const Ie=be[Ce].image[ie].image;re?t.texSubImage2D(34069+ie,Ce+1,0,0,Ie.width,Ie.height,fe,R,Ie.data):t.texImage2D(34069+ie,Ce+1,oe,Ie.width,Ie.height,0,fe,R,Ie.data)}}else{re?t.texSubImage2D(34069+ie,0,0,0,fe,R,V[ie]):t.texImage2D(34069+ie,0,oe,fe,R,V[ie]);for(let Ce=0;Ce<be.length;Ce++){const Je=be[Ce];re?t.texSubImage2D(34069+ie,Ce+1,0,0,fe,R,Je.image[ie]):t.texImage2D(34069+ie,Ce+1,oe,fe,R,Je.image[ie])}}}w(x,Le)&&E(34067),le.__currentVersion=le.version,x.onUpdate&&x.onUpdate(x)}M.__version=x.version}function ne(M,x,H,$,le){const ue=a.convert(H.format,H.encoding),_e=a.convert(H.type),V=L(H.internalFormat,ue,_e,H.encoding);n.get(x).__hasExternalTextures||(le===32879||le===35866?t.texImage3D(le,0,V,x.width,x.height,x.depth,0,ue,_e,null):t.texImage2D(le,0,V,x.width,x.height,0,ue,_e,null)),t.bindFramebuffer(36160,M),ge(x)?d.framebufferTexture2DMultisampleEXT(36160,$,le,n.get(H).__webglTexture,0,ye(x)):r.framebufferTexture2D(36160,$,le,n.get(H).__webglTexture,0),t.bindFramebuffer(36160,null)}function Pe(M,x,H){if(r.bindRenderbuffer(36161,M),x.depthBuffer&&!x.stencilBuffer){let $=33189;if(H||ge(x)){const le=x.depthTexture;le&&le.isDepthTexture&&(le.type===Si?$=36012:le.type===ls&&($=33190));const ue=ye(x);ge(x)?d.renderbufferStorageMultisampleEXT(36161,ue,$,x.width,x.height):r.renderbufferStorageMultisample(36161,ue,$,x.width,x.height)}else r.renderbufferStorage(36161,$,x.width,x.height);r.framebufferRenderbuffer(36160,36096,36161,M)}else if(x.depthBuffer&&x.stencilBuffer){const $=ye(x);H&&ge(x)===!1?r.renderbufferStorageMultisample(36161,$,35056,x.width,x.height):ge(x)?d.renderbufferStorageMultisampleEXT(36161,$,35056,x.width,x.height):r.renderbufferStorage(36161,34041,x.width,x.height),r.framebufferRenderbuffer(36160,33306,36161,M)}else{const $=x.isWebGLMultipleRenderTargets===!0?x.texture[0]:x.texture,le=a.convert($.format,$.encoding),ue=a.convert($.type),_e=L($.internalFormat,le,ue,$.encoding),V=ye(x);H&&ge(x)===!1?r.renderbufferStorageMultisample(36161,V,_e,x.width,x.height):ge(x)?d.renderbufferStorageMultisampleEXT(36161,V,_e,x.width,x.height):r.renderbufferStorage(36161,_e,x.width,x.height)}r.bindRenderbuffer(36161,null)}function K(M,x){if(x&&x.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,M),!(x.depthTexture&&x.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(x.depthTexture).__webglTexture||x.depthTexture.image.width!==x.width||x.depthTexture.image.height!==x.height)&&(x.depthTexture.image.width=x.width,x.depthTexture.image.height=x.height,x.depthTexture.needsUpdate=!0),J(x.depthTexture,0);const $=n.get(x.depthTexture).__webglTexture,le=ye(x);if(x.depthTexture.format===Ti)ge(x)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,$,0,le):r.framebufferTexture2D(36160,36096,3553,$,0);else if(x.depthTexture.format===Ta)ge(x)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,$,0,le):r.framebufferTexture2D(36160,33306,3553,$,0);else throw new Error("Unknown depthTexture format")}function X(M){const x=n.get(M),H=M.isWebGLCubeRenderTarget===!0;if(M.depthTexture&&!x.__autoAllocateDepthBuffer){if(H)throw new Error("target.depthTexture not supported in Cube render targets");K(x.__webglFramebuffer,M)}else if(H){x.__webglDepthbuffer=[];for(let $=0;$<6;$++)t.bindFramebuffer(36160,x.__webglFramebuffer[$]),x.__webglDepthbuffer[$]=r.createRenderbuffer(),Pe(x.__webglDepthbuffer[$],M,!1)}else t.bindFramebuffer(36160,x.__webglFramebuffer),x.__webglDepthbuffer=r.createRenderbuffer(),Pe(x.__webglDepthbuffer,M,!1);t.bindFramebuffer(36160,null)}function te(M,x,H){const $=n.get(M);x!==void 0&&ne($.__webglFramebuffer,M,M.texture,36064,3553),H!==void 0&&X(M)}function de(M){const x=M.texture,H=n.get(M),$=n.get(x);M.addEventListener("dispose",N),M.isWebGLMultipleRenderTargets!==!0&&($.__webglTexture===void 0&&($.__webglTexture=r.createTexture()),$.__version=x.version,s.memory.textures++);const le=M.isWebGLCubeRenderTarget===!0,ue=M.isWebGLMultipleRenderTargets===!0,_e=S(M)||o;if(le){H.__webglFramebuffer=[];for(let V=0;V<6;V++)H.__webglFramebuffer[V]=r.createFramebuffer()}else if(H.__webglFramebuffer=r.createFramebuffer(),ue)if(i.drawBuffers){const V=M.texture;for(let Ne=0,Le=V.length;Ne<Le;Ne++){const fe=n.get(V[Ne]);fe.__webglTexture===void 0&&(fe.__webglTexture=r.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(o&&M.samples>0&&ge(M)===!1){H.__webglMultisampledFramebuffer=r.createFramebuffer(),H.__webglColorRenderbuffer=r.createRenderbuffer(),r.bindRenderbuffer(36161,H.__webglColorRenderbuffer);const V=a.convert(x.format,x.encoding),Ne=a.convert(x.type),Le=L(x.internalFormat,V,Ne,x.encoding),fe=ye(M);r.renderbufferStorageMultisample(36161,fe,Le,M.width,M.height),t.bindFramebuffer(36160,H.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064,36161,H.__webglColorRenderbuffer),r.bindRenderbuffer(36161,null),M.depthBuffer&&(H.__webglDepthRenderbuffer=r.createRenderbuffer(),Pe(H.__webglDepthRenderbuffer,M,!0)),t.bindFramebuffer(36160,null)}if(le){t.bindTexture(34067,$.__webglTexture),q(34067,x,_e);for(let V=0;V<6;V++)ne(H.__webglFramebuffer[V],M,x,36064,34069+V);w(x,_e)&&E(34067),t.unbindTexture()}else if(ue){const V=M.texture;for(let Ne=0,Le=V.length;Ne<Le;Ne++){const fe=V[Ne],R=n.get(fe);t.bindTexture(3553,R.__webglTexture),q(3553,fe,_e),ne(H.__webglFramebuffer,M,fe,36064+Ne,3553),w(fe,_e)&&E(3553)}t.unbindTexture()}else{let V=3553;(M.isWebGL3DRenderTarget||M.isWebGLArrayRenderTarget)&&(o?V=M.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(V,$.__webglTexture),q(V,x,_e),ne(H.__webglFramebuffer,M,x,36064,V),w(x,_e)&&E(V),t.unbindTexture()}M.depthBuffer&&X(M)}function ce(M){const x=S(M)||o,H=M.isWebGLMultipleRenderTargets===!0?M.texture:[M.texture];for(let $=0,le=H.length;$<le;$++){const ue=H[$];if(w(ue,x)){const _e=M.isWebGLCubeRenderTarget?34067:3553,V=n.get(ue).__webglTexture;t.bindTexture(_e,V),E(_e),t.unbindTexture()}}}function Me(M){if(o&&M.samples>0&&ge(M)===!1){const x=M.width,H=M.height;let $=16384;const le=[36064],ue=M.stencilBuffer?33306:36096;M.depthBuffer&&le.push(ue);const _e=n.get(M),V=_e.__ignoreDepthValues!==void 0?_e.__ignoreDepthValues:!1;V===!1&&(M.depthBuffer&&($|=256),M.stencilBuffer&&($|=1024)),t.bindFramebuffer(36008,_e.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,_e.__webglFramebuffer),V===!0&&(r.invalidateFramebuffer(36008,[ue]),r.invalidateFramebuffer(36009,[ue])),r.blitFramebuffer(0,0,x,H,0,0,x,H,$,9728),p&&r.invalidateFramebuffer(36008,le),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,_e.__webglMultisampledFramebuffer)}}function ye(M){return Math.min(h,M.samples)}function ge(M){const x=n.get(M);return o&&M.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&x.__useRenderToTexture!==!1}function et(M){const x=s.render.frame;g.get(M)!==x&&(g.set(M,x),M.update())}function Ke(M,x){const H=M.encoding,$=M.format,le=M.type;return M.isCompressedTexture===!0||M.isVideoTexture===!0||M.format===tl||H!==zn&&(H===$e?o===!1?e.has("EXT_sRGB")===!0&&$===ln?(M.format=tl,M.minFilter=Pt,M.generateMipmaps=!1):x=Pi.sRGBToLinear(x):($!==ln||le!==Ri)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",H)),x}this.allocateTextureUnit=P,this.resetTextureUnits=k,this.setTexture2D=J,this.setTexture2DArray=Y,this.setTexture3D=Q,this.setTextureCube=ae,this.rebindTextures=te,this.setupRenderTarget=de,this.updateRenderTargetMipmap=ce,this.updateMultisampleRenderTarget=Me,this.setupDepthRenderbuffer=X,this.setupFrameBufferTexture=ne,this.useMultisampledRTT=ge}function Ky(r,e,t){const n=t.isWebGL2;function i(a,s=null){let o;if(a===Ri)return 5121;if(a===Wp)return 32819;if(a===jp)return 32820;if(a===Gp)return 5120;if(a===Hp)return 5122;if(a===dr)return 5123;if(a===Vp)return 5124;if(a===ls)return 5125;if(a===Si)return 5126;if(a===ga)return n?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(a===Kp)return 6406;if(a===ln)return 6408;if(a===Zp)return 6409;if(a===Xp)return 6410;if(a===Ti)return 6402;if(a===Ta)return 34041;if(a===Jp)return 6403;if(a===qp)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(a===tl)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(a===Yp)return 36244;if(a===$p)return 33319;if(a===Qp)return 33320;if(a===em)return 36249;if(a===Js||a===Ys||a===$s||a===Qs)if(s===$e)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(a===Js)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(a===Ys)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(a===$s)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(a===Qs)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(a===Js)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===Ys)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===$s)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===Qs)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(a===Sc||a===Ac||a===Cc||a===Mc)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(a===Sc)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===Ac)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===Cc)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===Mc)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(a===tm)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(a===wc||a===Tc)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(a===wc)return s===$e?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(a===Tc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(a===Ec||a===Nc||a===Rc||a===Lc||a===Uc||a===Pc||a===Dc||a===Bc||a===Ic||a===Fc||a===zc||a===kc||a===Oc||a===Gc)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(a===Ec)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(a===Nc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(a===Rc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(a===Lc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(a===Uc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(a===Pc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(a===Dc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(a===Bc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(a===Ic)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(a===Fc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(a===zc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(a===kc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(a===Oc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(a===Gc)return s===$e?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(a===Hc)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(a===Hc)return s===$e?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(a===_a)return n?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:i}}class fd extends Tt{constructor(e=[]){super(),this.cameras=e}}fd.prototype.isArrayCamera=!0;class ua extends Ve{constructor(){super(),this.type="Group"}}ua.prototype.isGroup=!0;const qy={type:"move"};class Ro{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ua,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ua,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new T,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new T),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ua,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new T,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new T),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,a=null,s=null;const o=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(o!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(qy))),l&&e.hand){s=!0;for(const f of e.hand.values()){const m=t.getJointPose(f,n);if(l.joints[f.jointName]===void 0){const b=new ua;b.matrixAutoUpdate=!1,b.visible=!1,l.joints[f.jointName]=b,l.add(b)}const _=l.joints[f.jointName];m!==null&&(_.matrix.fromArray(m.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.jointRadius=m.radius),_.visible=m!==null}const u=l.joints["index-finger-tip"],h=l.joints["thumb-tip"],d=u.position.distanceTo(h.position),p=.02,g=.005;l.inputState.pinching&&d>p+g?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&d<=p-g&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(a=t.getPose(e.gripSpace,n),a!==null&&(c.matrix.fromArray(a.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),a.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(a.linearVelocity)):c.hasLinearVelocity=!1,a.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(a.angularVelocity)):c.hasAngularVelocity=!1));return o!==null&&(o.visible=i!==null),c!==null&&(c.visible=a!==null),l!==null&&(l.visible=s!==null),this}}class pd extends _t{constructor(e,t,n,i,a,s,o,c,l,u){if(u=u!==void 0?u:Ti,u!==Ti&&u!==Ta)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Ti&&(n=dr),n===void 0&&u===Ta&&(n=_a),super(null,i,a,s,o,c,u,n,l),this.image={width:e,height:t},this.magFilter=o!==void 0?o:pt,this.minFilter=c!==void 0?c:pt,this.flipY=!1,this.generateMipmaps=!1}}pd.prototype.isDepthTexture=!0;class Zy extends Ui{constructor(e,t){super();const n=this;let i=null,a=1,s=null,o="local-floor",c=null,l=null,u=null,h=null,d=null;const p=t.getContextAttributes();let g=null,f=null;const m=[],_=new Map,b=new Tt;b.layers.enable(1),b.viewport=new je;const A=new Tt;A.layers.enable(2),A.viewport=new je;const S=[b,A],y=new fd;y.layers.enable(1),y.layers.enable(2);let w=null,E=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(P){let j=m[P];return j===void 0&&(j=new Ro,m[P]=j),j.getTargetRaySpace()},this.getControllerGrip=function(P){let j=m[P];return j===void 0&&(j=new Ro,m[P]=j),j.getGripSpace()},this.getHand=function(P){let j=m[P];return j===void 0&&(j=new Ro,m[P]=j),j.getHandSpace()};function L(P){const j=_.get(P.inputSource);j&&j.dispatchEvent({type:P.type,data:P.inputSource})}function z(){_.forEach(function(P,j){P.disconnect(j)}),_.clear(),w=null,E=null,e.setRenderTarget(g),h=null,u=null,l=null,i=null,f=null,k.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(P){a=P,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(P){o=P,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getBaseLayer=function(){return u!==null?u:h},this.getBinding=function(){return l},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(P){if(i=P,i!==null){if(g=e.getRenderTarget(),i.addEventListener("select",L),i.addEventListener("selectstart",L),i.addEventListener("selectend",L),i.addEventListener("squeeze",L),i.addEventListener("squeezestart",L),i.addEventListener("squeezeend",L),i.addEventListener("end",z),i.addEventListener("inputsourceschange",B),p.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const j={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:a};h=new XRWebGLLayer(i,t,j),i.updateRenderState({baseLayer:h}),f=new Wt(h.framebufferWidth,h.framebufferHeight,{format:ln,type:Ri,encoding:e.outputEncoding})}else{let j=null,J=null,Y=null;p.depth&&(Y=p.stencil?35056:33190,j=p.stencil?Ta:Ti,J=p.stencil?_a:dr);const Q={colorFormat:e.outputEncoding===$e?35907:32856,depthFormat:Y,scaleFactor:a};l=new XRWebGLBinding(i,t),u=l.createProjectionLayer(Q),i.updateRenderState({layers:[u]}),f=new Wt(u.textureWidth,u.textureHeight,{format:ln,type:Ri,depthTexture:new pd(u.textureWidth,u.textureHeight,J,void 0,void 0,void 0,void 0,void 0,void 0,j),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const ae=e.properties.get(f);ae.__ignoreDepthValues=u.ignoreDepthValues}f.isXRRenderTarget=!0,this.setFoveation(1),s=await i.requestReferenceSpace(o),k.setContext(i),k.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function B(P){const j=i.inputSources;for(let J=0;J<m.length;J++)_.set(j[J],m[J]);for(let J=0;J<P.removed.length;J++){const Y=P.removed[J],Q=_.get(Y);Q&&(Q.dispatchEvent({type:"disconnected",data:Y}),_.delete(Y))}for(let J=0;J<P.added.length;J++){const Y=P.added[J],Q=_.get(Y);Q&&Q.dispatchEvent({type:"connected",data:Y})}}const v=new T,N=new T;function W(P,j,J){v.setFromMatrixPosition(j.matrixWorld),N.setFromMatrixPosition(J.matrixWorld);const Y=v.distanceTo(N),Q=j.projectionMatrix.elements,ae=J.projectionMatrix.elements,Se=Q[14]/(Q[10]-1),Ae=Q[14]/(Q[10]+1),q=(Q[9]+1)/Q[5],ke=(Q[9]-1)/Q[5],Te=(Q[8]-1)/Q[0],Ee=(ae[8]+1)/ae[0],ne=Se*Te,Pe=Se*Ee,K=Y/(-Te+Ee),X=K*-Te;j.matrixWorld.decompose(P.position,P.quaternion,P.scale),P.translateX(X),P.translateZ(K),P.matrixWorld.compose(P.position,P.quaternion,P.scale),P.matrixWorldInverse.copy(P.matrixWorld).invert();const te=Se+K,de=Ae+K,ce=ne-X,Me=Pe+(Y-X),ye=q*Ae/de*te,ge=ke*Ae/de*te;P.projectionMatrix.makePerspective(ce,Me,ye,ge,te,de)}function U(P,j){j===null?P.matrixWorld.copy(P.matrix):P.matrixWorld.multiplyMatrices(j.matrixWorld,P.matrix),P.matrixWorldInverse.copy(P.matrixWorld).invert()}this.updateCamera=function(P){if(i===null)return;y.near=A.near=b.near=P.near,y.far=A.far=b.far=P.far,(w!==y.near||E!==y.far)&&(i.updateRenderState({depthNear:y.near,depthFar:y.far}),w=y.near,E=y.far);const j=P.parent,J=y.cameras;U(y,j);for(let Q=0;Q<J.length;Q++)U(J[Q],j);y.matrixWorld.decompose(y.position,y.quaternion,y.scale),P.position.copy(y.position),P.quaternion.copy(y.quaternion),P.scale.copy(y.scale),P.matrix.copy(y.matrix),P.matrixWorld.copy(y.matrixWorld);const Y=P.children;for(let Q=0,ae=Y.length;Q<ae;Q++)Y[Q].updateMatrixWorld(!0);J.length===2?W(y,b,A):y.projectionMatrix.copy(b.projectionMatrix)},this.getCamera=function(){return y},this.getFoveation=function(){if(u!==null)return u.fixedFoveation;if(h!==null)return h.fixedFoveation},this.setFoveation=function(P){u!==null&&(u.fixedFoveation=P),h!==null&&h.fixedFoveation!==void 0&&(h.fixedFoveation=P)};let F=null;function D(P,j){if(c=j.getViewerPose(s),d=j,c!==null){const Y=c.views;h!==null&&(e.setRenderTargetFramebuffer(f,h.framebuffer),e.setRenderTarget(f));let Q=!1;Y.length!==y.cameras.length&&(y.cameras.length=0,Q=!0);for(let ae=0;ae<Y.length;ae++){const Se=Y[ae];let Ae=null;if(h!==null)Ae=h.getViewport(Se);else{const ke=l.getViewSubImage(u,Se);Ae=ke.viewport,ae===0&&(e.setRenderTargetTextures(f,ke.colorTexture,u.ignoreDepthValues?void 0:ke.depthStencilTexture),e.setRenderTarget(f))}const q=S[ae];q.matrix.fromArray(Se.transform.matrix),q.projectionMatrix.fromArray(Se.projectionMatrix),q.viewport.set(Ae.x,Ae.y,Ae.width,Ae.height),ae===0&&y.matrix.copy(q.matrix),Q===!0&&y.cameras.push(q)}}const J=i.inputSources;for(let Y=0;Y<m.length;Y++){const Q=m[Y],ae=J[Y];Q.update(ae,j,s)}F&&F(P,j),d=null}const k=new ad;k.setAnimationLoop(D),this.setAnimationLoop=function(P){F=P},this.dispose=function(){}}}function Xy(r,e){function t(f,m){f.fogColor.value.copy(m.color),m.isFog?(f.fogNear.value=m.near,f.fogFar.value=m.far):m.isFogExp2&&(f.fogDensity.value=m.density)}function n(f,m,_,b,A){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(f,m):m.isMeshToonMaterial?(i(f,m),u(f,m)):m.isMeshPhongMaterial?(i(f,m),l(f,m)):m.isMeshStandardMaterial?(i(f,m),h(f,m),m.isMeshPhysicalMaterial&&d(f,m,A)):m.isMeshMatcapMaterial?(i(f,m),p(f,m)):m.isMeshDepthMaterial?i(f,m):m.isMeshDistanceMaterial?(i(f,m),g(f,m)):m.isMeshNormalMaterial?i(f,m):m.isLineBasicMaterial?(a(f,m),m.isLineDashedMaterial&&s(f,m)):m.isPointsMaterial?o(f,m,_,b):m.isSpriteMaterial?c(f,m):m.isShadowMaterial?(f.color.value.copy(m.color),f.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(f,m){f.opacity.value=m.opacity,m.color&&f.diffuse.value.copy(m.color),m.emissive&&f.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(f.map.value=m.map),m.alphaMap&&(f.alphaMap.value=m.alphaMap),m.bumpMap&&(f.bumpMap.value=m.bumpMap,f.bumpScale.value=m.bumpScale,m.side===$t&&(f.bumpScale.value*=-1)),m.displacementMap&&(f.displacementMap.value=m.displacementMap,f.displacementScale.value=m.displacementScale,f.displacementBias.value=m.displacementBias),m.emissiveMap&&(f.emissiveMap.value=m.emissiveMap),m.normalMap&&(f.normalMap.value=m.normalMap,f.normalScale.value.copy(m.normalScale),m.side===$t&&f.normalScale.value.negate()),m.specularMap&&(f.specularMap.value=m.specularMap),m.alphaTest>0&&(f.alphaTest.value=m.alphaTest);const _=e.get(m).envMap;if(_&&(f.envMap.value=_,f.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,f.reflectivity.value=m.reflectivity,f.ior.value=m.ior,f.refractionRatio.value=m.refractionRatio),m.lightMap){f.lightMap.value=m.lightMap;const S=r.physicallyCorrectLights!==!0?Math.PI:1;f.lightMapIntensity.value=m.lightMapIntensity*S}m.aoMap&&(f.aoMap.value=m.aoMap,f.aoMapIntensity.value=m.aoMapIntensity);let b;m.map?b=m.map:m.specularMap?b=m.specularMap:m.displacementMap?b=m.displacementMap:m.normalMap?b=m.normalMap:m.bumpMap?b=m.bumpMap:m.roughnessMap?b=m.roughnessMap:m.metalnessMap?b=m.metalnessMap:m.alphaMap?b=m.alphaMap:m.emissiveMap?b=m.emissiveMap:m.clearcoatMap?b=m.clearcoatMap:m.clearcoatNormalMap?b=m.clearcoatNormalMap:m.clearcoatRoughnessMap?b=m.clearcoatRoughnessMap:m.specularIntensityMap?b=m.specularIntensityMap:m.specularColorMap?b=m.specularColorMap:m.transmissionMap?b=m.transmissionMap:m.thicknessMap?b=m.thicknessMap:m.sheenColorMap?b=m.sheenColorMap:m.sheenRoughnessMap&&(b=m.sheenRoughnessMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),f.uvTransform.value.copy(b.matrix));let A;m.aoMap?A=m.aoMap:m.lightMap&&(A=m.lightMap),A!==void 0&&(A.isWebGLRenderTarget&&(A=A.texture),A.matrixAutoUpdate===!0&&A.updateMatrix(),f.uv2Transform.value.copy(A.matrix))}function a(f,m){f.diffuse.value.copy(m.color),f.opacity.value=m.opacity}function s(f,m){f.dashSize.value=m.dashSize,f.totalSize.value=m.dashSize+m.gapSize,f.scale.value=m.scale}function o(f,m,_,b){f.diffuse.value.copy(m.color),f.opacity.value=m.opacity,f.size.value=m.size*_,f.scale.value=b*.5,m.map&&(f.map.value=m.map),m.alphaMap&&(f.alphaMap.value=m.alphaMap),m.alphaTest>0&&(f.alphaTest.value=m.alphaTest);let A;m.map?A=m.map:m.alphaMap&&(A=m.alphaMap),A!==void 0&&(A.matrixAutoUpdate===!0&&A.updateMatrix(),f.uvTransform.value.copy(A.matrix))}function c(f,m){f.diffuse.value.copy(m.color),f.opacity.value=m.opacity,f.rotation.value=m.rotation,m.map&&(f.map.value=m.map),m.alphaMap&&(f.alphaMap.value=m.alphaMap),m.alphaTest>0&&(f.alphaTest.value=m.alphaTest);let _;m.map?_=m.map:m.alphaMap&&(_=m.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),f.uvTransform.value.copy(_.matrix))}function l(f,m){f.specular.value.copy(m.specular),f.shininess.value=Math.max(m.shininess,1e-4)}function u(f,m){m.gradientMap&&(f.gradientMap.value=m.gradientMap)}function h(f,m){f.roughness.value=m.roughness,f.metalness.value=m.metalness,m.roughnessMap&&(f.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(f.metalnessMap.value=m.metalnessMap),e.get(m).envMap&&(f.envMapIntensity.value=m.envMapIntensity)}function d(f,m,_){f.ior.value=m.ior,m.sheen>0&&(f.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),f.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(f.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(f.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(f.clearcoat.value=m.clearcoat,f.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(f.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(f.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(f.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),f.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===$t&&f.clearcoatNormalScale.value.negate())),m.transmission>0&&(f.transmission.value=m.transmission,f.transmissionSamplerMap.value=_.texture,f.transmissionSamplerSize.value.set(_.width,_.height),m.transmissionMap&&(f.transmissionMap.value=m.transmissionMap),f.thickness.value=m.thickness,m.thicknessMap&&(f.thicknessMap.value=m.thicknessMap),f.attenuationDistance.value=m.attenuationDistance,f.attenuationColor.value.copy(m.attenuationColor)),f.specularIntensity.value=m.specularIntensity,f.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(f.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(f.specularColorMap.value=m.specularColorMap)}function p(f,m){m.matcap&&(f.matcap.value=m.matcap)}function g(f,m){f.referencePosition.value.copy(m.referencePosition),f.nearDistance.value=m.nearDistance,f.farDistance.value=m.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function Jy(){const r=pr("canvas");return r.style.display="block",r}function We(r={}){const e=r.canvas!==void 0?r.canvas:Jy(),t=r.context!==void 0?r.context:null,n=r.depth!==void 0?r.depth:!0,i=r.stencil!==void 0?r.stencil:!0,a=r.antialias!==void 0?r.antialias:!1,s=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,o=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,c=r.powerPreference!==void 0?r.powerPreference:"default",l=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let u;r.context!==void 0?u=t.getContextAttributes().alpha:u=r.alpha!==void 0?r.alpha:!1;let h=null,d=null;const p=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=zn,this.physicallyCorrectLights=!1,this.toneMapping=Bn,this.toneMappingExposure=1;const f=this;let m=!1,_=0,b=0,A=null,S=-1,y=null;const w=new je,E=new je;let L=null,z=e.width,B=e.height,v=1,N=null,W=null;const U=new je(0,0,z,B),F=new je(0,0,z,B);let D=!1;const k=new Us;let P=!1,j=!1,J=null;const Y=new me,Q=new ee,ae=new T,Se={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ae(){return A===null?v:1}let q=t;function ke(C,I){for(let G=0;G<C.length;G++){const O=C[G],Z=e.getContext(O,I);if(Z!==null)return Z}return null}try{const C={alpha:!0,depth:n,stencil:i,antialias:a,premultipliedAlpha:s,preserveDrawingBuffer:o,powerPreference:c,failIfMajorPerformanceCaveat:l};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Tl}`),e.addEventListener("webglcontextlost",R,!1),e.addEventListener("webglcontextrestored",oe,!1),q===null){const I=["webgl2","webgl","experimental-webgl"];if(f.isWebGL1Renderer===!0&&I.shift(),q=ke(I,C),q===null)throw ke(I)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}q.getShaderPrecisionFormat===void 0&&(q.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Te,Ee,ne,Pe,K,X,te,de,ce,Me,ye,ge,et,Ke,M,x,H,$,le,ue,_e,V,Ne;function Le(){Te=new p_(q),Ee=new l_(q,Te,r),Te.init(Ee),V=new Ky(q,Te,Ee),ne=new Wy(q,Te,Ee),Pe=new __(q),K=new Py,X=new jy(q,Te,ne,K,Ee,V,Pe),te=new u_(f),de=new f_(f),ce=new Lm(q,Ee),Ne=new s_(q,Te,ce,Ee),Me=new m_(q,ce,Pe,Ne),ye=new x_(q,Me,ce,Pe),le=new b_(q,Ee,X),x=new c_(K),ge=new Uy(f,te,de,Te,Ee,Ne,x),et=new Xy(f,K),Ke=new By,M=new Gy(Te,Ee),$=new r_(f,te,ne,ye,u,s),H=new dd(f,ye,Ee),ue=new o_(q,Te,Pe,Ee),_e=new g_(q,Te,Pe,Ee),Pe.programs=ge.programs,f.capabilities=Ee,f.extensions=Te,f.properties=K,f.renderLists=Ke,f.shadowMap=H,f.state=ne,f.info=Pe}Le();const fe=new Zy(f,q);this.xr=fe,this.getContext=function(){return q},this.getContextAttributes=function(){return q.getContextAttributes()},this.forceContextLoss=function(){const C=Te.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Te.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return v},this.setPixelRatio=function(C){C!==void 0&&(v=C,this.setSize(z,B,!1))},this.getSize=function(C){return C.set(z,B)},this.setSize=function(C,I,G){if(fe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}z=C,B=I,e.width=Math.floor(C*v),e.height=Math.floor(I*v),G!==!1&&(e.style.width=C+"px",e.style.height=I+"px"),this.setViewport(0,0,C,I)},this.getDrawingBufferSize=function(C){return C.set(z*v,B*v).floor()},this.setDrawingBufferSize=function(C,I,G){z=C,B=I,v=G,e.width=Math.floor(C*G),e.height=Math.floor(I*G),this.setViewport(0,0,C,I)},this.getCurrentViewport=function(C){return C.copy(w)},this.getViewport=function(C){return C.copy(U)},this.setViewport=function(C,I,G,O){C.isVector4?U.set(C.x,C.y,C.z,C.w):U.set(C,I,G,O),ne.viewport(w.copy(U).multiplyScalar(v).floor())},this.getScissor=function(C){return C.copy(F)},this.setScissor=function(C,I,G,O){C.isVector4?F.set(C.x,C.y,C.z,C.w):F.set(C,I,G,O),ne.scissor(E.copy(F).multiplyScalar(v).floor())},this.getScissorTest=function(){return D},this.setScissorTest=function(C){ne.setScissorTest(D=C)},this.setOpaqueSort=function(C){N=C},this.setTransparentSort=function(C){W=C},this.getClearColor=function(C){return C.copy($.getClearColor())},this.setClearColor=function(){$.setClearColor.apply($,arguments)},this.getClearAlpha=function(){return $.getClearAlpha()},this.setClearAlpha=function(){$.setClearAlpha.apply($,arguments)},this.clear=function(C=!0,I=!0,G=!0){let O=0;C&&(O|=16384),I&&(O|=256),G&&(O|=1024),q.clear(O)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",R,!1),e.removeEventListener("webglcontextrestored",oe,!1),Ke.dispose(),M.dispose(),K.dispose(),te.dispose(),de.dispose(),ye.dispose(),Ne.dispose(),ge.dispose(),fe.dispose(),fe.removeEventListener("sessionstart",Ce),fe.removeEventListener("sessionend",Je),J&&(J.dispose(),J=null),Ie.stop()};function R(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function oe(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const C=Pe.autoReset,I=H.enabled,G=H.autoUpdate,O=H.needsUpdate,Z=H.type;Le(),Pe.autoReset=C,H.enabled=I,H.autoUpdate=G,H.needsUpdate=O,H.type=Z}function re(C){const I=C.target;I.removeEventListener("dispose",re),ve(I)}function ve(C){he(C),K.remove(C)}function he(C){const I=K.get(C).programs;I!==void 0&&(I.forEach(function(G){ge.releaseProgram(G)}),C.isShaderMaterial&&ge.releaseShaderCache(C))}this.renderBufferDirect=function(C,I,G,O,Z,xe){I===null&&(I=Se);const we=Z.isMesh&&Z.matrixWorld.determinant()<0,Ue=$d(C,I,G,O,Z);ne.setMaterial(O,we);let Re=G.index;const Ge=G.attributes.position;if(Re===null){if(Ge===void 0||Ge.count===0)return}else if(Re.count===0)return;let Fe=1;O.wireframe===!0&&(Re=Me.getWireframeAttribute(G),Fe=2),Ne.setup(Z,O,Ue,G,Re);let ze,it=ue;Re!==null&&(ze=ce.get(Re),it=_e,it.setIndex(ze));const hi=Re!==null?Re.count:Ge.count,Ii=G.drawRange.start*Fe,Fi=G.drawRange.count*Fe,pn=xe!==null?xe.start*Fe:0,Oe=xe!==null?xe.count*Fe:1/0,zi=Math.max(Ii,pn),st=Math.min(hi,Ii+Fi,pn+Oe)-1,mn=Math.max(0,st-zi+1);if(mn!==0){if(Z.isMesh)O.wireframe===!0?(ne.setLineWidth(O.wireframeLinewidth*Ae()),it.setMode(1)):it.setMode(4);else if(Z.isLine){let kn=O.linewidth;kn===void 0&&(kn=1),ne.setLineWidth(kn*Ae()),Z.isLineSegments?it.setMode(1):Z.isLineLoop?it.setMode(2):it.setMode(3)}else Z.isPoints?it.setMode(0):Z.isSprite&&it.setMode(4);if(Z.isInstancedMesh)it.renderInstances(zi,mn,Z.count);else if(G.isInstancedBufferGeometry){const kn=Math.min(G.instanceCount,G._maxInstanceCount);it.renderInstances(zi,mn,kn)}else it.render(zi,mn)}},this.compile=function(C,I){d=M.get(C),d.init(),g.push(d),C.traverseVisible(function(G){G.isLight&&G.layers.test(I.layers)&&(d.pushLight(G),G.castShadow&&d.pushShadow(G))}),d.setupLights(f.physicallyCorrectLights),C.traverse(function(G){const O=G.material;if(O)if(Array.isArray(O))for(let Z=0;Z<O.length;Z++){const xe=O[Z];ks(xe,C,G)}else ks(O,C,G)}),g.pop(),d=null};let be=null;function ie(C){be&&be(C)}function Ce(){Ie.stop()}function Je(){Ie.start()}const Ie=new ad;Ie.setAnimationLoop(ie),typeof self!="undefined"&&Ie.setContext(self),this.setAnimationLoop=function(C){be=C,fe.setAnimationLoop(C),C===null?Ie.stop():Ie.start()},fe.addEventListener("sessionstart",Ce),fe.addEventListener("sessionend",Je),this.render=function(C,I){if(I!==void 0&&I.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;C.autoUpdate===!0&&C.updateMatrixWorld(),I.parent===null&&I.updateMatrixWorld(),fe.enabled===!0&&fe.isPresenting===!0&&(fe.cameraAutoUpdate===!0&&fe.updateCamera(I),I=fe.getCamera()),C.isScene===!0&&C.onBeforeRender(f,C,I,A),d=M.get(C,g.length),d.init(),g.push(d),Y.multiplyMatrices(I.projectionMatrix,I.matrixWorldInverse),k.setFromProjectionMatrix(Y),j=this.localClippingEnabled,P=x.init(this.clippingPlanes,j,I),h=Ke.get(C,p.length),h.init(),p.push(h),dn(C,I,0,f.sortObjects),h.finish(),f.sortObjects===!0&&h.sort(N,W),P===!0&&x.beginShadows();const G=d.state.shadowsArray;if(H.render(G,C,I),P===!0&&x.endShadows(),this.info.autoReset===!0&&this.info.reset(),$.render(h,C),d.setupLights(f.physicallyCorrectLights),I.isArrayCamera){const O=I.cameras;for(let Z=0,xe=O.length;Z<xe;Z++){const we=O[Z];fn(h,C,we,we.viewport)}}else fn(h,C,I);A!==null&&(X.updateMultisampleRenderTarget(A),X.updateRenderTargetMipmap(A)),C.isScene===!0&&C.onAfterRender(f,C,I),Ne.resetDefaultState(),S=-1,y=null,g.pop(),g.length>0?d=g[g.length-1]:d=null,p.pop(),p.length>0?h=p[p.length-1]:h=null};function dn(C,I,G,O){if(C.visible===!1)return;if(C.layers.test(I.layers)){if(C.isGroup)G=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(I);else if(C.isLight)d.pushLight(C),C.castShadow&&d.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||k.intersectsSprite(C)){O&&ae.setFromMatrixPosition(C.matrixWorld).applyMatrix4(Y);const we=ye.update(C),Ue=C.material;Ue.visible&&h.push(C,we,Ue,G,ae.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==Pe.render.frame&&(C.skeleton.update(),C.skeleton.frame=Pe.render.frame),!C.frustumCulled||k.intersectsObject(C))){O&&ae.setFromMatrixPosition(C.matrixWorld).applyMatrix4(Y);const we=ye.update(C),Ue=C.material;if(Array.isArray(Ue)){const Re=we.groups;for(let Ge=0,Fe=Re.length;Ge<Fe;Ge++){const ze=Re[Ge],it=Ue[ze.materialIndex];it&&it.visible&&h.push(C,we,it,G,ae.z,ze)}}else Ue.visible&&h.push(C,we,Ue,G,ae.z,null)}}const xe=C.children;for(let we=0,Ue=xe.length;we<Ue;we++)dn(xe[we],I,G,O)}function fn(C,I,G,O){const Z=C.opaque,xe=C.transmissive,we=C.transparent;d.setupLightsView(G),xe.length>0&&Jd(Z,I,G),O&&ne.viewport(w.copy(O)),Z.length>0&&Tr(Z,I,G),xe.length>0&&Tr(xe,I,G),we.length>0&&Tr(we,I,G),ne.buffers.depth.setTest(!0),ne.buffers.depth.setMask(!0),ne.buffers.color.setMask(!0),ne.setPolygonOffset(!1)}function Jd(C,I,G){const O=Ee.isWebGL2;J===null&&(J=new Wt(1,1,{generateMipmaps:!0,type:V.convert(ga)!==null?ga:Ri,minFilter:Ns,samples:O&&a===!0?4:0})),f.getDrawingBufferSize(Q),O?J.setSize(Q.x,Q.y):J.setSize(il(Q.x),il(Q.y));const Z=f.getRenderTarget();f.setRenderTarget(J),f.clear();const xe=f.toneMapping;f.toneMapping=Bn,Tr(C,I,G),f.toneMapping=xe,X.updateMultisampleRenderTarget(J),X.updateRenderTargetMipmap(J),f.setRenderTarget(Z)}function Tr(C,I,G){const O=I.isScene===!0?I.overrideMaterial:null;for(let Z=0,xe=C.length;Z<xe;Z++){const we=C[Z],Ue=we.object,Re=we.geometry,Ge=O===null?we.material:O,Fe=we.group;Ue.layers.test(G.layers)&&Yd(Ue,I,G,Re,Ge,Fe)}}function Yd(C,I,G,O,Z,xe){C.onBeforeRender(f,I,G,O,Z,xe),C.modelViewMatrix.multiplyMatrices(G.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),Z.onBeforeRender(f,I,G,O,C,xe),Z.transparent===!0&&Z.side===Ca?(Z.side=$t,Z.needsUpdate=!0,f.renderBufferDirect(G,I,O,Z,C,xe),Z.side=hr,Z.needsUpdate=!0,f.renderBufferDirect(G,I,O,Z,C,xe),Z.side=Ca):f.renderBufferDirect(G,I,O,Z,C,xe),C.onAfterRender(f,I,G,O,Z,xe)}function ks(C,I,G){I.isScene!==!0&&(I=Se);const O=K.get(C),Z=d.state.lights,xe=d.state.shadowsArray,we=Z.state.version,Ue=ge.getParameters(C,Z.state,xe,I,G),Re=ge.getProgramCacheKey(Ue);let Ge=O.programs;O.environment=C.isMeshStandardMaterial?I.environment:null,O.fog=I.fog,O.envMap=(C.isMeshStandardMaterial?de:te).get(C.envMap||O.environment),Ge===void 0&&(C.addEventListener("dispose",re),Ge=new Map,O.programs=Ge);let Fe=Ge.get(Re);if(Fe!==void 0){if(O.currentProgram===Fe&&O.lightsStateVersion===we)return Ql(C,Ue),Fe}else Ue.uniforms=ge.getUniforms(C),C.onBuild(G,Ue,f),C.onBeforeCompile(Ue,f),Fe=ge.acquireProgram(Ue,Re),Ge.set(Re,Fe),O.uniforms=Ue.uniforms;const ze=O.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(ze.clippingPlanes=x.uniform),Ql(C,Ue),O.needsLights=ef(C),O.lightsStateVersion=we,O.needsLights&&(ze.ambientLightColor.value=Z.state.ambient,ze.lightProbe.value=Z.state.probe,ze.directionalLights.value=Z.state.directional,ze.directionalLightShadows.value=Z.state.directionalShadow,ze.spotLights.value=Z.state.spot,ze.spotLightShadows.value=Z.state.spotShadow,ze.rectAreaLights.value=Z.state.rectArea,ze.ltc_1.value=Z.state.rectAreaLTC1,ze.ltc_2.value=Z.state.rectAreaLTC2,ze.pointLights.value=Z.state.point,ze.pointLightShadows.value=Z.state.pointShadow,ze.hemisphereLights.value=Z.state.hemi,ze.directionalShadowMap.value=Z.state.directionalShadowMap,ze.directionalShadowMatrix.value=Z.state.directionalShadowMatrix,ze.spotShadowMap.value=Z.state.spotShadowMap,ze.spotShadowMatrix.value=Z.state.spotShadowMatrix,ze.pointShadowMap.value=Z.state.pointShadowMap,ze.pointShadowMatrix.value=Z.state.pointShadowMatrix);const it=Fe.getUniforms(),hi=ti.seqWithValue(it.seq,ze);return O.currentProgram=Fe,O.uniformsList=hi,Fe}function Ql(C,I){const G=K.get(C);G.outputEncoding=I.outputEncoding,G.instancing=I.instancing,G.skinning=I.skinning,G.morphTargets=I.morphTargets,G.morphNormals=I.morphNormals,G.morphColors=I.morphColors,G.morphTargetsCount=I.morphTargetsCount,G.numClippingPlanes=I.numClippingPlanes,G.numIntersection=I.numClipIntersection,G.vertexAlphas=I.vertexAlphas,G.vertexTangents=I.vertexTangents,G.toneMapping=I.toneMapping}function $d(C,I,G,O,Z){I.isScene!==!0&&(I=Se),X.resetTextureUnits();const xe=I.fog,we=O.isMeshStandardMaterial?I.environment:null,Ue=A===null?f.outputEncoding:A.isXRRenderTarget===!0?A.texture.encoding:zn,Re=(O.isMeshStandardMaterial?de:te).get(O.envMap||we),Ge=O.vertexColors===!0&&!!G.attributes.color&&G.attributes.color.itemSize===4,Fe=!!O.normalMap&&!!G.attributes.tangent,ze=!!G.morphAttributes.position,it=!!G.morphAttributes.normal,hi=!!G.morphAttributes.color,Ii=O.toneMapped?f.toneMapping:Bn,Fi=G.morphAttributes.position||G.morphAttributes.normal||G.morphAttributes.color,pn=Fi!==void 0?Fi.length:0,Oe=K.get(O),zi=d.state.lights;if(P===!0&&(j===!0||C!==y)){const tn=C===y&&O.id===S;x.setState(O,C,tn)}let st=!1;O.version===Oe.__version?(Oe.needsLights&&Oe.lightsStateVersion!==zi.state.version||Oe.outputEncoding!==Ue||Z.isInstancedMesh&&Oe.instancing===!1||!Z.isInstancedMesh&&Oe.instancing===!0||Z.isSkinnedMesh&&Oe.skinning===!1||!Z.isSkinnedMesh&&Oe.skinning===!0||Oe.envMap!==Re||O.fog&&Oe.fog!==xe||Oe.numClippingPlanes!==void 0&&(Oe.numClippingPlanes!==x.numPlanes||Oe.numIntersection!==x.numIntersection)||Oe.vertexAlphas!==Ge||Oe.vertexTangents!==Fe||Oe.morphTargets!==ze||Oe.morphNormals!==it||Oe.morphColors!==hi||Oe.toneMapping!==Ii||Ee.isWebGL2===!0&&Oe.morphTargetsCount!==pn)&&(st=!0):(st=!0,Oe.__version=O.version);let mn=Oe.currentProgram;st===!0&&(mn=ks(O,I,Z));let kn=!1,za=!1,Os=!1;const At=mn.getUniforms(),ka=Oe.uniforms;if(ne.useProgram(mn.program)&&(kn=!0,za=!0,Os=!0),O.id!==S&&(S=O.id,za=!0),kn||y!==C){if(At.setValue(q,"projectionMatrix",C.projectionMatrix),Ee.logarithmicDepthBuffer&&At.setValue(q,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),y!==C&&(y=C,za=!0,Os=!0),O.isShaderMaterial||O.isMeshPhongMaterial||O.isMeshToonMaterial||O.isMeshStandardMaterial||O.envMap){const tn=At.map.cameraPosition;tn!==void 0&&tn.setValue(q,ae.setFromMatrixPosition(C.matrixWorld))}(O.isMeshPhongMaterial||O.isMeshToonMaterial||O.isMeshLambertMaterial||O.isMeshBasicMaterial||O.isMeshStandardMaterial||O.isShaderMaterial)&&At.setValue(q,"isOrthographic",C.isOrthographicCamera===!0),(O.isMeshPhongMaterial||O.isMeshToonMaterial||O.isMeshLambertMaterial||O.isMeshBasicMaterial||O.isMeshStandardMaterial||O.isShaderMaterial||O.isShadowMaterial||Z.isSkinnedMesh)&&At.setValue(q,"viewMatrix",C.matrixWorldInverse)}if(Z.isSkinnedMesh){At.setOptional(q,Z,"bindMatrix"),At.setOptional(q,Z,"bindMatrixInverse");const tn=Z.skeleton;tn&&(Ee.floatVertexTextures?(tn.boneTexture===null&&tn.computeBoneTexture(),At.setValue(q,"boneTexture",tn.boneTexture,X),At.setValue(q,"boneTextureSize",tn.boneTextureSize)):At.setOptional(q,tn,"boneMatrices"))}const Gs=G.morphAttributes;return(Gs.position!==void 0||Gs.normal!==void 0||Gs.color!==void 0&&Ee.isWebGL2===!0)&&le.update(Z,G,O,mn),(za||Oe.receiveShadow!==Z.receiveShadow)&&(Oe.receiveShadow=Z.receiveShadow,At.setValue(q,"receiveShadow",Z.receiveShadow)),za&&(At.setValue(q,"toneMappingExposure",f.toneMappingExposure),Oe.needsLights&&Qd(ka,Os),xe&&O.fog&&et.refreshFogUniforms(ka,xe),et.refreshMaterialUniforms(ka,O,v,B,J),ti.upload(q,Oe.uniformsList,ka,X)),O.isShaderMaterial&&O.uniformsNeedUpdate===!0&&(ti.upload(q,Oe.uniformsList,ka,X),O.uniformsNeedUpdate=!1),O.isSpriteMaterial&&At.setValue(q,"center",Z.center),At.setValue(q,"modelViewMatrix",Z.modelViewMatrix),At.setValue(q,"normalMatrix",Z.normalMatrix),At.setValue(q,"modelMatrix",Z.matrixWorld),mn}function Qd(C,I){C.ambientLightColor.needsUpdate=I,C.lightProbe.needsUpdate=I,C.directionalLights.needsUpdate=I,C.directionalLightShadows.needsUpdate=I,C.pointLights.needsUpdate=I,C.pointLightShadows.needsUpdate=I,C.spotLights.needsUpdate=I,C.spotLightShadows.needsUpdate=I,C.rectAreaLights.needsUpdate=I,C.hemisphereLights.needsUpdate=I}function ef(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(C,I,G){K.get(C.texture).__webglTexture=I,K.get(C.depthTexture).__webglTexture=G;const O=K.get(C);O.__hasExternalTextures=!0,O.__hasExternalTextures&&(O.__autoAllocateDepthBuffer=G===void 0,O.__autoAllocateDepthBuffer||Te.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),O.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,I){const G=K.get(C);G.__webglFramebuffer=I,G.__useDefaultFramebuffer=I===void 0},this.setRenderTarget=function(C,I=0,G=0){A=C,_=I,b=G;let O=!0;if(C){const Re=K.get(C);Re.__useDefaultFramebuffer!==void 0?(ne.bindFramebuffer(36160,null),O=!1):Re.__webglFramebuffer===void 0?X.setupRenderTarget(C):Re.__hasExternalTextures&&X.rebindTextures(C,K.get(C.texture).__webglTexture,K.get(C.depthTexture).__webglTexture)}let Z=null,xe=!1,we=!1;if(C){const Re=C.texture;(Re.isData3DTexture||Re.isDataArrayTexture)&&(we=!0);const Ge=K.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(Z=Ge[I],xe=!0):Ee.isWebGL2&&C.samples>0&&X.useMultisampledRTT(C)===!1?Z=K.get(C).__webglMultisampledFramebuffer:Z=Ge,w.copy(C.viewport),E.copy(C.scissor),L=C.scissorTest}else w.copy(U).multiplyScalar(v).floor(),E.copy(F).multiplyScalar(v).floor(),L=D;if(ne.bindFramebuffer(36160,Z)&&Ee.drawBuffers&&O&&ne.drawBuffers(C,Z),ne.viewport(w),ne.scissor(E),ne.setScissorTest(L),xe){const Re=K.get(C.texture);q.framebufferTexture2D(36160,36064,34069+I,Re.__webglTexture,G)}else if(we){const Re=K.get(C.texture),Ge=I||0;q.framebufferTextureLayer(36160,36064,Re.__webglTexture,G||0,Ge)}S=-1},this.readRenderTargetPixels=function(C,I,G,O,Z,xe,we){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ue=K.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&we!==void 0&&(Ue=Ue[we]),Ue){ne.bindFramebuffer(36160,Ue);try{const Re=C.texture,Ge=Re.format,Fe=Re.type;if(Ge!==ln&&V.convert(Ge)!==q.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ze=Fe===ga&&(Te.has("EXT_color_buffer_half_float")||Ee.isWebGL2&&Te.has("EXT_color_buffer_float"));if(Fe!==Ri&&V.convert(Fe)!==q.getParameter(35738)&&!(Fe===Si&&(Ee.isWebGL2||Te.has("OES_texture_float")||Te.has("WEBGL_color_buffer_float")))&&!ze){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}I>=0&&I<=C.width-O&&G>=0&&G<=C.height-Z&&q.readPixels(I,G,O,Z,V.convert(Ge),V.convert(Fe),xe)}finally{const Re=A!==null?K.get(A).__webglFramebuffer:null;ne.bindFramebuffer(36160,Re)}}},this.copyFramebufferToTexture=function(C,I,G=0){if(I.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const O=Math.pow(2,-G),Z=Math.floor(I.image.width*O),xe=Math.floor(I.image.height*O);X.setTexture2D(I,0),q.copyTexSubImage2D(3553,G,0,0,C.x,C.y,Z,xe),ne.unbindTexture()},this.copyTextureToTexture=function(C,I,G,O=0){const Z=I.image.width,xe=I.image.height,we=V.convert(G.format),Ue=V.convert(G.type);X.setTexture2D(G,0),q.pixelStorei(37440,G.flipY),q.pixelStorei(37441,G.premultiplyAlpha),q.pixelStorei(3317,G.unpackAlignment),I.isDataTexture?q.texSubImage2D(3553,O,C.x,C.y,Z,xe,we,Ue,I.image.data):I.isCompressedTexture?q.compressedTexSubImage2D(3553,O,C.x,C.y,I.mipmaps[0].width,I.mipmaps[0].height,we,I.mipmaps[0].data):q.texSubImage2D(3553,O,C.x,C.y,we,Ue,I.image),O===0&&G.generateMipmaps&&q.generateMipmap(3553),ne.unbindTexture()},this.copyTextureToTexture3D=function(C,I,G,O,Z=0){if(f.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const xe=C.max.x-C.min.x+1,we=C.max.y-C.min.y+1,Ue=C.max.z-C.min.z+1,Re=V.convert(O.format),Ge=V.convert(O.type);let Fe;if(O.isData3DTexture)X.setTexture3D(O,0),Fe=32879;else if(O.isDataArrayTexture)X.setTexture2DArray(O,0),Fe=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}q.pixelStorei(37440,O.flipY),q.pixelStorei(37441,O.premultiplyAlpha),q.pixelStorei(3317,O.unpackAlignment);const ze=q.getParameter(3314),it=q.getParameter(32878),hi=q.getParameter(3316),Ii=q.getParameter(3315),Fi=q.getParameter(32877),pn=G.isCompressedTexture?G.mipmaps[0]:G.image;q.pixelStorei(3314,pn.width),q.pixelStorei(32878,pn.height),q.pixelStorei(3316,C.min.x),q.pixelStorei(3315,C.min.y),q.pixelStorei(32877,C.min.z),G.isDataTexture||G.isData3DTexture?q.texSubImage3D(Fe,Z,I.x,I.y,I.z,xe,we,Ue,Re,Ge,pn.data):G.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),q.compressedTexSubImage3D(Fe,Z,I.x,I.y,I.z,xe,we,Ue,Re,pn.data)):q.texSubImage3D(Fe,Z,I.x,I.y,I.z,xe,we,Ue,Re,Ge,pn),q.pixelStorei(3314,ze),q.pixelStorei(32878,it),q.pixelStorei(3316,hi),q.pixelStorei(3315,Ii),q.pixelStorei(32877,Fi),Z===0&&O.generateMipmaps&&q.generateMipmap(Fe),ne.unbindTexture()},this.initTexture=function(C){X.setTexture2D(C,0),ne.unbindTexture()},this.resetState=function(){_=0,b=0,A=null,ne.reset(),Ne.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}We.prototype.isWebGLRenderer=!0;class Yy extends We{}Yy.prototype.isWebGL1Renderer=!0;class zl extends Ve{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}zl.prototype.isScene=!0;class Ar{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=fr,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=xn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,a=this.stride;i<a;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=xn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=xn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Ar.prototype.isInterleavedBuffer=!0;const Lt=new T;class mr{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Lt.fromBufferAttribute(this,t),Lt.applyMatrix4(e),this.setXYZ(t,Lt.x,Lt.y,Lt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Lt.fromBufferAttribute(this,t),Lt.applyNormalMatrix(e),this.setXYZ(t,Lt.x,Lt.y,Lt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Lt.fromBufferAttribute(this,t),Lt.transformDirection(e),this.setXYZ(t,Lt.x,Lt.y,Lt.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,a){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=a,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)t.push(this.data.array[i+a])}return new ut(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new mr(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)t.push(this.data.array[i+a])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}mr.prototype.isInterleavedBufferAttribute=!0;class kl extends ht{constructor(e){super(),this.type="SpriteMaterial",this.color=new pe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}kl.prototype.isSpriteMaterial=!0;let ea;const Wa=new T,ta=new T,na=new T,ia=new ee,ja=new ee,md=new me,Xr=new T,Ka=new T,Jr=new T,Cu=new ee,Lo=new ee,Mu=new ee;class $y extends Ve{constructor(e){if(super(),this.type="Sprite",ea===void 0){ea=new Xe;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Ar(t,5);ea.setIndex([0,1,2,0,2,3]),ea.setAttribute("position",new mr(n,3,0,!1)),ea.setAttribute("uv",new mr(n,2,3,!1))}this.geometry=ea,this.material=e!==void 0?e:new kl,this.center=new ee(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ta.setFromMatrixScale(this.matrixWorld),md.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),na.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ta.multiplyScalar(-na.z);const n=this.material.rotation;let i,a;n!==0&&(a=Math.cos(n),i=Math.sin(n));const s=this.center;Yr(Xr.set(-.5,-.5,0),na,s,ta,i,a),Yr(Ka.set(.5,-.5,0),na,s,ta,i,a),Yr(Jr.set(.5,.5,0),na,s,ta,i,a),Cu.set(0,0),Lo.set(1,0),Mu.set(1,1);let o=e.ray.intersectTriangle(Xr,Ka,Jr,!1,Wa);if(o===null&&(Yr(Ka.set(-.5,.5,0),na,s,ta,i,a),Lo.set(0,1),o=e.ray.intersectTriangle(Xr,Jr,Ka,!1,Wa),o===null))return;const c=e.ray.origin.distanceTo(Wa);c<e.near||c>e.far||t.push({distance:c,point:Wa.clone(),uv:lt.getUV(Wa,Xr,Ka,Jr,Cu,Lo,Mu,new ee),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}$y.prototype.isSprite=!0;function Yr(r,e,t,n,i,a){ia.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(ja.x=a*ia.x-i*ia.y,ja.y=i*ia.x+a*ia.y):ja.copy(ia),r.copy(e),r.x+=ja.x,r.y+=ja.y,r.applyMatrix4(md)}const wu=new T,Tu=new je,Eu=new je,Qy=new T,Nu=new me;class gd extends St{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new me,this.bindMatrixInverse=new me}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new je,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const a=1/e.manhattanLength();a!==1/0?e.multiplyScalar(a):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Tu.fromBufferAttribute(i.attributes.skinIndex,e),Eu.fromBufferAttribute(i.attributes.skinWeight,e),wu.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let a=0;a<4;a++){const s=Eu.getComponent(a);if(s!==0){const o=Tu.getComponent(a);Nu.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(Qy.copy(wu).applyMatrix4(Nu),s)}}return t.applyMatrix4(this.bindMatrixInverse)}}gd.prototype.isSkinnedMesh=!0;class ev extends Ve{constructor(){super(),this.type="Bone"}}ev.prototype.isBone=!0;class tv extends _t{constructor(e=null,t=1,n=1,i,a,s,o,c,l=pt,u=pt,h,d){super(null,s,o,c,l,u,i,a,h,d),this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}tv.prototype.isDataTexture=!0;class rl extends ut{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}rl.prototype.isInstancedBufferAttribute=!0;const Ru=new me,Lu=new me,$r=[],qa=new St;class nv extends St{constructor(e,t,n){super(e,t),this.instanceMatrix=new rl(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(qa.geometry=this.geometry,qa.material=this.material,qa.material!==void 0)for(let a=0;a<i;a++){this.getMatrixAt(a,Ru),Lu.multiplyMatrices(n,Ru),qa.matrixWorld=Lu,qa.raycast(e,$r);for(let s=0,o=$r.length;s<o;s++){const c=$r[s];c.instanceId=a,c.object=this,t.push(c)}$r.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new rl(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}nv.prototype.isInstancedMesh=!0;class Da extends ht{constructor(e){super(),this.type="LineBasicMaterial",this.color=new pe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}Da.prototype.isLineBasicMaterial=!0;const Uu=new T,Pu=new T,Du=new me,Uo=new Di,Qr=new La;class Ol extends Ve{constructor(e=new Xe,t=new Da){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,a=t.count;i<a;i++)Uu.fromBufferAttribute(t,i-1),Pu.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Uu.distanceTo(Pu);e.setAttribute("lineDistance",new at(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,a=e.params.Line.threshold,s=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Qr.copy(n.boundingSphere),Qr.applyMatrix4(i),Qr.radius+=a,e.ray.intersectsSphere(Qr)===!1)return;Du.copy(i).invert(),Uo.copy(e.ray).applyMatrix4(Du);const o=a/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o,l=new T,u=new T,h=new T,d=new T,p=this.isLineSegments?2:1;if(n.isBufferGeometry){const g=n.index,m=n.attributes.position;if(g!==null){const _=Math.max(0,s.start),b=Math.min(g.count,s.start+s.count);for(let A=_,S=b-1;A<S;A+=p){const y=g.getX(A),w=g.getX(A+1);if(l.fromBufferAttribute(m,y),u.fromBufferAttribute(m,w),Uo.distanceSqToSegment(l,u,d,h)>c)continue;d.applyMatrix4(this.matrixWorld);const L=e.ray.origin.distanceTo(d);L<e.near||L>e.far||t.push({distance:L,point:h.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,s.start),b=Math.min(m.count,s.start+s.count);for(let A=_,S=b-1;A<S;A+=p){if(l.fromBufferAttribute(m,A),u.fromBufferAttribute(m,A+1),Uo.distanceSqToSegment(l,u,d,h)>c)continue;d.applyMatrix4(this.matrixWorld);const w=e.ray.origin.distanceTo(d);w<e.near||w>e.far||t.push({distance:w,point:h.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=i.length;a<s;a++){const o=i[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Ol.prototype.isLine=!0;const Bu=new T,Iu=new T;class Gl extends Ol{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,a=t.count;i<a;i+=2)Bu.fromBufferAttribute(t,i),Iu.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Bu.distanceTo(Iu);e.setAttribute("lineDistance",new at(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Gl.prototype.isLineSegments=!0;class iv extends Ol{constructor(e,t){super(e,t),this.type="LineLoop"}}iv.prototype.isLineLoop=!0;class Ds extends ht{constructor(e){super(),this.type="PointsMaterial",this.color=new pe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}Ds.prototype.isPointsMaterial=!0;const Fu=new me,sl=new Di,es=new La,ts=new T;class _d extends Ve{constructor(e=new Xe,t=new Ds){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,a=e.params.Points.threshold,s=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),es.copy(n.boundingSphere),es.applyMatrix4(i),es.radius+=a,e.ray.intersectsSphere(es)===!1)return;Fu.copy(i).invert(),sl.copy(e.ray).applyMatrix4(Fu);const o=a/((this.scale.x+this.scale.y+this.scale.z)/3),c=o*o;if(n.isBufferGeometry){const l=n.index,h=n.attributes.position;if(l!==null){const d=Math.max(0,s.start),p=Math.min(l.count,s.start+s.count);for(let g=d,f=p;g<f;g++){const m=l.getX(g);ts.fromBufferAttribute(h,m),zu(ts,m,c,i,e,t,this)}}else{const d=Math.max(0,s.start),p=Math.min(h.count,s.start+s.count);for(let g=d,f=p;g<f;g++)ts.fromBufferAttribute(h,g),zu(ts,g,c,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=i.length;a<s;a++){const o=i[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}_d.prototype.isPoints=!0;function zu(r,e,t,n,i,a,s){const o=sl.distanceSqToPoint(r);if(o<t){const c=new T;sl.closestPointToPoint(r,c),c.applyMatrix4(n);const l=i.ray.origin.distanceTo(c);if(l<i.near||l>i.far)return;a.push({distance:l,distanceToRay:Math.sqrt(o),point:c,index:e,face:null,object:s})}}class av extends _t{constructor(e,t,n,i,a,s,o,c,l){super(e,t,n,i,a,s,o,c,l),this.minFilter=s!==void 0?s:Pt,this.magFilter=a!==void 0?a:Pt,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}av.prototype.isVideoTexture=!0;class rv extends _t{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=pt,this.minFilter=pt,this.generateMipmaps=!1,this.needsUpdate=!0}}rv.prototype.isFramebufferTexture=!0;class sv extends _t{constructor(e,t,n,i,a,s,o,c,l,u,h,d){super(null,s,o,c,l,u,i,a,h,d),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}sv.prototype.isCompressedTexture=!0;class ov extends _t{constructor(e,t,n,i,a,s,o,c,l){super(e,t,n,i,a,s,o,c,l),this.needsUpdate=!0}}ov.prototype.isCanvasTexture=!0;class en{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),a=0;t.push(0);for(let s=1;s<=e;s++)n=this.getPoint(s/e),a+=n.distanceTo(i),t.push(a),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const a=n.length;let s;t?s=t:s=e*n[a-1];let o=0,c=a-1,l;for(;o<=c;)if(i=Math.floor(o+(c-o)/2),l=n[i]-s,l<0)o=i+1;else if(l>0)c=i-1;else{c=i;break}if(i=c,n[i]===s)return i/(a-1);const u=n[i],d=n[i+1]-u,p=(s-u)/d;return(i+p)/(a-1)}getTangent(e,t){let i=e-1e-4,a=e+1e-4;i<0&&(i=0),a>1&&(a=1);const s=this.getPoint(i),o=this.getPoint(a),c=t||(s.isVector2?new ee:new T);return c.copy(o).sub(s).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new T,i=[],a=[],s=[],o=new T,c=new me;for(let p=0;p<=e;p++){const g=p/e;i[p]=this.getTangentAt(g,new T)}a[0]=new T,s[0]=new T;let l=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=l&&(l=u,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),d<=l&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),a[0].crossVectors(i[0],o),s[0].crossVectors(i[0],a[0]);for(let p=1;p<=e;p++){if(a[p]=a[p-1].clone(),s[p]=s[p-1].clone(),o.crossVectors(i[p-1],i[p]),o.length()>Number.EPSILON){o.normalize();const g=Math.acos(wt(i[p-1].dot(i[p]),-1,1));a[p].applyMatrix4(c.makeRotationAxis(o,g))}s[p].crossVectors(i[p],a[p])}if(t===!0){let p=Math.acos(wt(a[0].dot(a[e]),-1,1));p/=e,i[0].dot(o.crossVectors(a[0],a[e]))>0&&(p=-p);for(let g=1;g<=e;g++)a[g].applyMatrix4(c.makeRotationAxis(i[g],p*g)),s[g].crossVectors(i[g],a[g])}return{tangents:i,normals:a,binormals:s}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Bs extends en{constructor(e=0,t=0,n=1,i=1,a=0,s=Math.PI*2,o=!1,c=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=a,this.aEndAngle=s,this.aClockwise=o,this.aRotation=c}getPoint(e,t){const n=t||new ee,i=Math.PI*2;let a=this.aEndAngle-this.aStartAngle;const s=Math.abs(a)<Number.EPSILON;for(;a<0;)a+=i;for(;a>i;)a-=i;a<Number.EPSILON&&(s?a=0:a=i),this.aClockwise===!0&&!s&&(a===i?a=-i:a=a-i);const o=this.aStartAngle+e*a;let c=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=c-this.aX,p=l-this.aY;c=d*u-p*h+this.aX,l=d*h+p*u+this.aY}return n.set(c,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}Bs.prototype.isEllipseCurve=!0;class yd extends Bs{constructor(e,t,n,i,a,s){super(e,t,n,n,i,a,s),this.type="ArcCurve"}}yd.prototype.isArcCurve=!0;function Hl(){let r=0,e=0,t=0,n=0;function i(a,s,o,c){r=a,e=o,t=-3*a+3*s-2*o-c,n=2*a-2*s+o+c}return{initCatmullRom:function(a,s,o,c,l){i(s,o,l*(o-a),l*(c-s))},initNonuniformCatmullRom:function(a,s,o,c,l,u,h){let d=(s-a)/l-(o-a)/(l+u)+(o-s)/u,p=(o-s)/u-(c-s)/(u+h)+(c-o)/h;d*=u,p*=u,i(s,o,d,p)},calc:function(a){const s=a*a,o=s*a;return r+e*a+t*s+n*o}}}const ns=new T,Po=new Hl,Do=new Hl,Bo=new Hl;class vd extends en{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new T){const n=t,i=this.points,a=i.length,s=(a-(this.closed?0:1))*e;let o=Math.floor(s),c=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/a)+1)*a:c===0&&o===a-1&&(o=a-2,c=1);let l,u;this.closed||o>0?l=i[(o-1)%a]:(ns.subVectors(i[0],i[1]).add(i[0]),l=ns);const h=i[o%a],d=i[(o+1)%a];if(this.closed||o+2<a?u=i[(o+2)%a]:(ns.subVectors(i[a-1],i[a-2]).add(i[a-1]),u=ns),this.curveType==="centripetal"||this.curveType==="chordal"){const p=this.curveType==="chordal"?.5:.25;let g=Math.pow(l.distanceToSquared(h),p),f=Math.pow(h.distanceToSquared(d),p),m=Math.pow(d.distanceToSquared(u),p);f<1e-4&&(f=1),g<1e-4&&(g=f),m<1e-4&&(m=f),Po.initNonuniformCatmullRom(l.x,h.x,d.x,u.x,g,f,m),Do.initNonuniformCatmullRom(l.y,h.y,d.y,u.y,g,f,m),Bo.initNonuniformCatmullRom(l.z,h.z,d.z,u.z,g,f,m)}else this.curveType==="catmullrom"&&(Po.initCatmullRom(l.x,h.x,d.x,u.x,this.tension),Do.initCatmullRom(l.y,h.y,d.y,u.y,this.tension),Bo.initCatmullRom(l.z,h.z,d.z,u.z,this.tension));return n.set(Po.calc(c),Do.calc(c),Bo.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new T().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}vd.prototype.isCatmullRomCurve3=!0;function ku(r,e,t,n,i){const a=(n-e)*.5,s=(i-t)*.5,o=r*r,c=r*o;return(2*t-2*n+a+s)*c+(-3*t+3*n-2*a-s)*o+a*r+t}function lv(r,e){const t=1-r;return t*t*e}function cv(r,e){return 2*(1-r)*r*e}function uv(r,e){return r*r*e}function nr(r,e,t,n){return lv(r,e)+cv(r,t)+uv(r,n)}function hv(r,e){const t=1-r;return t*t*t*e}function dv(r,e){const t=1-r;return 3*t*t*r*e}function fv(r,e){return 3*(1-r)*r*r*e}function pv(r,e){return r*r*r*e}function ir(r,e,t,n,i){return hv(r,e)+dv(r,t)+fv(r,n)+pv(r,i)}class Vl extends en{constructor(e=new ee,t=new ee,n=new ee,i=new ee){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ee){const n=t,i=this.v0,a=this.v1,s=this.v2,o=this.v3;return n.set(ir(e,i.x,a.x,s.x,o.x),ir(e,i.y,a.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Vl.prototype.isCubicBezierCurve=!0;class bd extends en{constructor(e=new T,t=new T,n=new T,i=new T){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new T){const n=t,i=this.v0,a=this.v1,s=this.v2,o=this.v3;return n.set(ir(e,i.x,a.x,s.x,o.x),ir(e,i.y,a.y,s.y,o.y),ir(e,i.z,a.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}bd.prototype.isCubicBezierCurve3=!0;class Is extends en{constructor(e=new ee,t=new ee){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ee){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new ee;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Is.prototype.isLineCurve=!0;class mv extends en{constructor(e=new T,t=new T){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new T){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Wl extends en{constructor(e=new ee,t=new ee,n=new ee){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ee){const n=t,i=this.v0,a=this.v1,s=this.v2;return n.set(nr(e,i.x,a.x,s.x),nr(e,i.y,a.y,s.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Wl.prototype.isQuadraticBezierCurve=!0;class xd extends en{constructor(e=new T,t=new T,n=new T){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new T){const n=t,i=this.v0,a=this.v1,s=this.v2;return n.set(nr(e,i.x,a.x,s.x),nr(e,i.y,a.y,s.y),nr(e,i.z,a.z,s.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}xd.prototype.isQuadraticBezierCurve3=!0;class jl extends en{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new ee){const n=t,i=this.points,a=(i.length-1)*e,s=Math.floor(a),o=a-s,c=i[s===0?s:s-1],l=i[s],u=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(ku(o,c.x,l.x,u.x,h.x),ku(o,c.y,l.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ee().fromArray(i))}return this}}jl.prototype.isSplineCurve=!0;var Sd=Object.freeze({__proto__:null,ArcCurve:yd,CatmullRomCurve3:vd,CubicBezierCurve:Vl,CubicBezierCurve3:bd,EllipseCurve:Bs,LineCurve:Is,LineCurve3:mv,QuadraticBezierCurve:Wl,QuadraticBezierCurve3:xd,SplineCurve:jl});class gv extends en{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Is(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let a=0;for(;a<i.length;){if(i[a]>=n){const s=i[a]-n,o=this.curves[a],c=o.getLength(),l=c===0?0:1-s/c;return o.getPointAt(l,t)}a++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,a=this.curves;i<a.length;i++){const s=a[i],o=s.isEllipseCurve?e*2:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?e*s.points.length:e,c=s.getPoints(o);for(let l=0;l<c.length;l++){const u=c[l];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Sd[i.type]().fromJSON(i))}return this}}class ol extends gv{constructor(e){super(),this.type="Path",this.currentPoint=new ee,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Is(this.currentPoint.clone(),new ee(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const a=new Wl(this.currentPoint.clone(),new ee(e,t),new ee(n,i));return this.curves.push(a),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,a,s){const o=new Vl(this.currentPoint.clone(),new ee(e,t),new ee(n,i),new ee(a,s));return this.curves.push(o),this.currentPoint.set(a,s),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new jl(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,a,s){const o=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+o,t+c,n,i,a,s),this}absarc(e,t,n,i,a,s){return this.absellipse(e,t,n,n,i,a,s),this}ellipse(e,t,n,i,a,s,o,c){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,n,i,a,s,o,c),this}absellipse(e,t,n,i,a,s,o,c){const l=new Bs(e,t,n,i,a,s,o,c);if(this.curves.length>0){const h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}new T;new T;new T;new lt;class Cr extends ol{constructor(e){super(e),this.uuid=xn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new ol().fromJSON(i))}return this}}const _v={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let a=Ad(r,0,i,t,!0);const s=[];if(!a||a.next===a.prev)return s;let o,c,l,u,h,d,p;if(n&&(a=Sv(r,e,a,t)),r.length>80*t){o=l=r[0],c=u=r[1];for(let g=t;g<i;g+=t)h=r[g],d=r[g+1],h<o&&(o=h),d<c&&(c=d),h>l&&(l=h),d>u&&(u=d);p=Math.max(l-o,u-c),p=p!==0?1/p:0}return gr(a,s,t,o,c,p),s}};function Ad(r,e,t,n,i){let a,s;if(i===Pv(r,e,t,n)>0)for(a=e;a<t;a+=n)s=Ou(a,r[a],r[a+1],s);else for(a=t-n;a>=e;a-=n)s=Ou(a,r[a],r[a+1],s);return s&&Fs(s,s.next)&&(yr(s),s=s.next),s}function oi(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Fs(t,t.next)||nt(t.prev,t,t.next)===0)){if(yr(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function gr(r,e,t,n,i,a,s){if(!r)return;!s&&a&&Tv(r,n,i,a);let o=r,c,l;for(;r.prev!==r.next;){if(c=r.prev,l=r.next,a?vv(r,n,i,a):yv(r)){e.push(c.i/t),e.push(r.i/t),e.push(l.i/t),yr(r),r=l.next,o=l.next;continue}if(r=l,r===o){s?s===1?(r=bv(oi(r),e,t),gr(r,e,t,n,i,a,2)):s===2&&xv(r,e,t,n,i,a):gr(oi(r),e,t,n,i,a,1);break}}}function yv(r){const e=r.prev,t=r,n=r.next;if(nt(e,t,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(ha(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&nt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function vv(r,e,t,n){const i=r.prev,a=r,s=r.next;if(nt(i,a,s)>=0)return!1;const o=i.x<a.x?i.x<s.x?i.x:s.x:a.x<s.x?a.x:s.x,c=i.y<a.y?i.y<s.y?i.y:s.y:a.y<s.y?a.y:s.y,l=i.x>a.x?i.x>s.x?i.x:s.x:a.x>s.x?a.x:s.x,u=i.y>a.y?i.y>s.y?i.y:s.y:a.y>s.y?a.y:s.y,h=ll(o,c,e,t,n),d=ll(l,u,e,t,n);let p=r.prevZ,g=r.nextZ;for(;p&&p.z>=h&&g&&g.z<=d;){if(p!==r.prev&&p!==r.next&&ha(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&nt(p.prev,p,p.next)>=0||(p=p.prevZ,g!==r.prev&&g!==r.next&&ha(i.x,i.y,a.x,a.y,s.x,s.y,g.x,g.y)&&nt(g.prev,g,g.next)>=0))return!1;g=g.nextZ}for(;p&&p.z>=h;){if(p!==r.prev&&p!==r.next&&ha(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&nt(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;g&&g.z<=d;){if(g!==r.prev&&g!==r.next&&ha(i.x,i.y,a.x,a.y,s.x,s.y,g.x,g.y)&&nt(g.prev,g,g.next)>=0)return!1;g=g.nextZ}return!0}function bv(r,e,t){let n=r;do{const i=n.prev,a=n.next.next;!Fs(i,a)&&Cd(i,n,n.next,a)&&_r(i,a)&&_r(a,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(a.i/t),yr(n),yr(n.next),n=r=a),n=n.next}while(n!==r);return oi(n)}function xv(r,e,t,n,i,a){let s=r;do{let o=s.next.next;for(;o!==s.prev;){if(s.i!==o.i&&Rv(s,o)){let c=Md(s,o);s=oi(s,s.next),c=oi(c,c.next),gr(s,e,t,n,i,a),gr(c,e,t,n,i,a);return}o=o.next}s=s.next}while(s!==r)}function Sv(r,e,t,n){const i=[];let a,s,o,c,l;for(a=0,s=e.length;a<s;a++)o=e[a]*n,c=a<s-1?e[a+1]*n:r.length,l=Ad(r,o,c,n,!1),l===l.next&&(l.steiner=!0),i.push(Nv(l));for(i.sort(Av),a=0;a<i.length;a++)Cv(i[a],t),t=oi(t,t.next);return t}function Av(r,e){return r.x-e.x}function Cv(r,e){if(e=Mv(r,e),e){const t=Md(e,r);oi(e,e.next),oi(t,t.next)}}function Mv(r,e){let t=e;const n=r.x,i=r.y;let a=-1/0,s;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const d=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=n&&d>a){if(a=d,d===n){if(i===t.y)return t;if(i===t.next.y)return t.next}s=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!s)return null;if(n===a)return s;const o=s,c=s.x,l=s.y;let u=1/0,h;t=s;do n>=t.x&&t.x>=c&&n!==t.x&&ha(i<l?n:a,i,c,l,i<l?a:n,i,t.x,t.y)&&(h=Math.abs(i-t.y)/(n-t.x),_r(t,r)&&(h<u||h===u&&(t.x>s.x||t.x===s.x&&wv(s,t)))&&(s=t,u=h)),t=t.next;while(t!==o);return s}function wv(r,e){return nt(r.prev,r,e.prev)<0&&nt(e.next,r,r.next)<0}function Tv(r,e,t,n){let i=r;do i.z===null&&(i.z=ll(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,Ev(i)}function Ev(r){let e,t,n,i,a,s,o,c,l=1;do{for(t=r,r=null,a=null,s=0;t;){for(s++,n=t,o=0,e=0;e<l&&(o++,n=n.nextZ,!!n);e++);for(c=l;o>0||c>0&&n;)o!==0&&(c===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,o--):(i=n,n=n.nextZ,c--),a?a.nextZ=i:r=i,i.prevZ=a,a=i;t=n}a.nextZ=null,l*=2}while(s>1);return r}function ll(r,e,t,n,i){return r=32767*(r-t)*i,e=32767*(e-n)*i,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function Nv(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function ha(r,e,t,n,i,a,s,o){return(i-s)*(e-o)-(r-s)*(a-o)>=0&&(r-s)*(n-o)-(t-s)*(e-o)>=0&&(t-s)*(a-o)-(i-s)*(n-o)>=0}function Rv(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!Lv(r,e)&&(_r(r,e)&&_r(e,r)&&Uv(r,e)&&(nt(r.prev,r,e.prev)||nt(r,e.prev,e))||Fs(r,e)&&nt(r.prev,r,r.next)>0&&nt(e.prev,e,e.next)>0)}function nt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Fs(r,e){return r.x===e.x&&r.y===e.y}function Cd(r,e,t,n){const i=as(nt(r,e,t)),a=as(nt(r,e,n)),s=as(nt(t,n,r)),o=as(nt(t,n,e));return!!(i!==a&&s!==o||i===0&&is(r,t,e)||a===0&&is(r,n,e)||s===0&&is(t,r,n)||o===0&&is(t,e,n))}function is(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function as(r){return r>0?1:r<0?-1:0}function Lv(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Cd(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function _r(r,e){return nt(r.prev,r,r.next)<0?nt(r,e,r.next)>=0&&nt(r,r.prev,e)>=0:nt(r,e,r.prev)<0||nt(r,r.next,e)<0}function Uv(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,a=(r.y+e.y)/2;do t.y>a!=t.next.y>a&&t.next.y!==t.y&&i<(t.next.x-t.x)*(a-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function Md(r,e){const t=new cl(r.i,r.x,r.y),n=new cl(e.i,e.x,e.y),i=r.next,a=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,a.next=n,n.prev=a,n}function Ou(r,e,t,n){const i=new cl(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function yr(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function cl(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Pv(r,e,t,n){let i=0;for(let a=e,s=t-n;a<t;a+=n)i+=(r[s]-r[a])*(r[a+1]+r[s+1]),s=a;return i}class ni{static area(e){const t=e.length;let n=0;for(let i=t-1,a=0;a<t;i=a++)n+=e[i].x*e[a].y-e[a].x*e[i].y;return n*.5}static isClockWise(e){return ni.area(e)<0}static triangulateShape(e,t){const n=[],i=[],a=[];Gu(e),Hu(n,e);let s=e.length;t.forEach(Gu);for(let c=0;c<t.length;c++)i.push(s),s+=t[c].length,Hu(n,t[c]);const o=_v.triangulate(n,i);for(let c=0;c<o.length;c+=3)a.push(o.slice(c,c+3));return a}}function Gu(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Hu(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Ba extends Xe{constructor(e=new Cr([new ee(.5,.5),new ee(-.5,.5),new ee(-.5,-.5),new ee(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],a=[];for(let o=0,c=e.length;o<c;o++){const l=e[o];s(l)}this.setAttribute("position",new at(i,3)),this.setAttribute("uv",new at(a,2)),this.computeVertexNormals();function s(o){const c=[],l=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1;let h=t.depth!==void 0?t.depth:1,d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,p=t.bevelThickness!==void 0?t.bevelThickness:.2,g=t.bevelSize!==void 0?t.bevelSize:p-.1,f=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,b=t.UVGenerator!==void 0?t.UVGenerator:Dv;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let A,S=!1,y,w,E,L;_&&(A=_.getSpacedPoints(u),S=!0,d=!1,y=_.computeFrenetFrames(u,!1),w=new T,E=new T,L=new T),d||(m=0,p=0,g=0,f=0);const z=o.extractPoints(l);let B=z.shape;const v=z.holes;if(!ni.isClockWise(B)){B=B.reverse();for(let K=0,X=v.length;K<X;K++){const te=v[K];ni.isClockWise(te)&&(v[K]=te.reverse())}}const W=ni.triangulateShape(B,v),U=B;for(let K=0,X=v.length;K<X;K++){const te=v[K];B=B.concat(te)}function F(K,X,te){return X||console.error("THREE.ExtrudeGeometry: vec does not exist"),X.clone().multiplyScalar(te).add(K)}const D=B.length,k=W.length;function P(K,X,te){let de,ce,Me;const ye=K.x-X.x,ge=K.y-X.y,et=te.x-K.x,Ke=te.y-K.y,M=ye*ye+ge*ge,x=ye*Ke-ge*et;if(Math.abs(x)>Number.EPSILON){const H=Math.sqrt(M),$=Math.sqrt(et*et+Ke*Ke),le=X.x-ge/H,ue=X.y+ye/H,_e=te.x-Ke/$,V=te.y+et/$,Ne=((_e-le)*Ke-(V-ue)*et)/(ye*Ke-ge*et);de=le+ye*Ne-K.x,ce=ue+ge*Ne-K.y;const Le=de*de+ce*ce;if(Le<=2)return new ee(de,ce);Me=Math.sqrt(Le/2)}else{let H=!1;ye>Number.EPSILON?et>Number.EPSILON&&(H=!0):ye<-Number.EPSILON?et<-Number.EPSILON&&(H=!0):Math.sign(ge)===Math.sign(Ke)&&(H=!0),H?(de=-ge,ce=ye,Me=Math.sqrt(M)):(de=ye,ce=ge,Me=Math.sqrt(M/2))}return new ee(de/Me,ce/Me)}const j=[];for(let K=0,X=U.length,te=X-1,de=K+1;K<X;K++,te++,de++)te===X&&(te=0),de===X&&(de=0),j[K]=P(U[K],U[te],U[de]);const J=[];let Y,Q=j.concat();for(let K=0,X=v.length;K<X;K++){const te=v[K];Y=[];for(let de=0,ce=te.length,Me=ce-1,ye=de+1;de<ce;de++,Me++,ye++)Me===ce&&(Me=0),ye===ce&&(ye=0),Y[de]=P(te[de],te[Me],te[ye]);J.push(Y),Q=Q.concat(Y)}for(let K=0;K<m;K++){const X=K/m,te=p*Math.cos(X*Math.PI/2),de=g*Math.sin(X*Math.PI/2)+f;for(let ce=0,Me=U.length;ce<Me;ce++){const ye=F(U[ce],j[ce],de);ke(ye.x,ye.y,-te)}for(let ce=0,Me=v.length;ce<Me;ce++){const ye=v[ce];Y=J[ce];for(let ge=0,et=ye.length;ge<et;ge++){const Ke=F(ye[ge],Y[ge],de);ke(Ke.x,Ke.y,-te)}}}const ae=g+f;for(let K=0;K<D;K++){const X=d?F(B[K],Q[K],ae):B[K];S?(E.copy(y.normals[0]).multiplyScalar(X.x),w.copy(y.binormals[0]).multiplyScalar(X.y),L.copy(A[0]).add(E).add(w),ke(L.x,L.y,L.z)):ke(X.x,X.y,0)}for(let K=1;K<=u;K++)for(let X=0;X<D;X++){const te=d?F(B[X],Q[X],ae):B[X];S?(E.copy(y.normals[K]).multiplyScalar(te.x),w.copy(y.binormals[K]).multiplyScalar(te.y),L.copy(A[K]).add(E).add(w),ke(L.x,L.y,L.z)):ke(te.x,te.y,h/u*K)}for(let K=m-1;K>=0;K--){const X=K/m,te=p*Math.cos(X*Math.PI/2),de=g*Math.sin(X*Math.PI/2)+f;for(let ce=0,Me=U.length;ce<Me;ce++){const ye=F(U[ce],j[ce],de);ke(ye.x,ye.y,h+te)}for(let ce=0,Me=v.length;ce<Me;ce++){const ye=v[ce];Y=J[ce];for(let ge=0,et=ye.length;ge<et;ge++){const Ke=F(ye[ge],Y[ge],de);S?ke(Ke.x,Ke.y+A[u-1].y,A[u-1].x+te):ke(Ke.x,Ke.y,h+te)}}}Se(),Ae();function Se(){const K=i.length/3;if(d){let X=0,te=D*X;for(let de=0;de<k;de++){const ce=W[de];Te(ce[2]+te,ce[1]+te,ce[0]+te)}X=u+m*2,te=D*X;for(let de=0;de<k;de++){const ce=W[de];Te(ce[0]+te,ce[1]+te,ce[2]+te)}}else{for(let X=0;X<k;X++){const te=W[X];Te(te[2],te[1],te[0])}for(let X=0;X<k;X++){const te=W[X];Te(te[0]+D*u,te[1]+D*u,te[2]+D*u)}}n.addGroup(K,i.length/3-K,0)}function Ae(){const K=i.length/3;let X=0;q(U,X),X+=U.length;for(let te=0,de=v.length;te<de;te++){const ce=v[te];q(ce,X),X+=ce.length}n.addGroup(K,i.length/3-K,1)}function q(K,X){let te=K.length;for(;--te>=0;){const de=te;let ce=te-1;ce<0&&(ce=K.length-1);for(let Me=0,ye=u+m*2;Me<ye;Me++){const ge=D*Me,et=D*(Me+1),Ke=X+de+ge,M=X+ce+ge,x=X+ce+et,H=X+de+et;Ee(Ke,M,x,H)}}}function ke(K,X,te){c.push(K),c.push(X),c.push(te)}function Te(K,X,te){ne(K),ne(X),ne(te);const de=i.length/3,ce=b.generateTopUV(n,i,de-3,de-2,de-1);Pe(ce[0]),Pe(ce[1]),Pe(ce[2])}function Ee(K,X,te,de){ne(K),ne(X),ne(de),ne(X),ne(te),ne(de);const ce=i.length/3,Me=b.generateSideWallUV(n,i,ce-6,ce-3,ce-2,ce-1);Pe(Me[0]),Pe(Me[1]),Pe(Me[3]),Pe(Me[1]),Pe(Me[2]),Pe(Me[3])}function ne(K){i.push(c[K*3+0]),i.push(c[K*3+1]),i.push(c[K*3+2])}function Pe(K){a.push(K.x),a.push(K.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Bv(t,n,e)}static fromJSON(e,t){const n=[];for(let a=0,s=e.shapes.length;a<s;a++){const o=t[e.shapes[a]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Sd[i.type]().fromJSON(i)),new Ba(n,e.options)}}const Dv={generateTopUV:function(r,e,t,n,i){const a=e[t*3],s=e[t*3+1],o=e[n*3],c=e[n*3+1],l=e[i*3],u=e[i*3+1];return[new ee(a,s),new ee(o,c),new ee(l,u)]},generateSideWallUV:function(r,e,t,n,i,a){const s=e[t*3],o=e[t*3+1],c=e[t*3+2],l=e[n*3],u=e[n*3+1],h=e[n*3+2],d=e[i*3],p=e[i*3+1],g=e[i*3+2],f=e[a*3],m=e[a*3+1],_=e[a*3+2];return Math.abs(o-u)<Math.abs(s-l)?[new ee(s,1-c),new ee(l,1-h),new ee(d,1-g),new ee(f,1-_)]:[new ee(o,1-c),new ee(u,1-h),new ee(p,1-g),new ee(m,1-_)]}};function Bv(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const a=r[n];t.shapes.push(a.uuid)}else t.shapes.push(r.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Kl extends Xe{constructor(e=new Cr([new ee(0,.5),new ee(-.5,-.5),new ee(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],a=[],s=[];let o=0,c=0;if(Array.isArray(e)===!1)l(e);else for(let u=0;u<e.length;u++)l(e[u]),this.addGroup(o,c,u),o+=c,c=0;this.setIndex(n),this.setAttribute("position",new at(i,3)),this.setAttribute("normal",new at(a,3)),this.setAttribute("uv",new at(s,2));function l(u){const h=i.length/3,d=u.extractPoints(t);let p=d.shape;const g=d.holes;ni.isClockWise(p)===!1&&(p=p.reverse());for(let m=0,_=g.length;m<_;m++){const b=g[m];ni.isClockWise(b)===!0&&(g[m]=b.reverse())}const f=ni.triangulateShape(p,g);for(let m=0,_=g.length;m<_;m++){const b=g[m];p=p.concat(b)}for(let m=0,_=p.length;m<_;m++){const b=p[m];i.push(b.x,b.y,0),a.push(0,0,1),s.push(b.x,b.y)}for(let m=0,_=f.length;m<_;m++){const b=f[m],A=b[0]+h,S=b[1]+h,y=b[2]+h;n.push(A,S,y),c+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Iv(t,e)}static fromJSON(e,t){const n=[];for(let i=0,a=e.shapes.length;i<a;i++){const s=t[e.shapes[i]];n.push(s)}return new Kl(n,e.curveSegments)}}function Iv(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class zs extends Xe{constructor(e=1,t=32,n=16,i=0,a=Math.PI*2,s=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:a,thetaStart:s,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(s+o,Math.PI);let l=0;const u=[],h=new T,d=new T,p=[],g=[],f=[],m=[];for(let _=0;_<=n;_++){const b=[],A=_/n;let S=0;_==0&&s==0?S=.5/t:_==n&&c==Math.PI&&(S=-.5/t);for(let y=0;y<=t;y++){const w=y/t;h.x=-e*Math.cos(i+w*a)*Math.sin(s+A*o),h.y=e*Math.cos(s+A*o),h.z=e*Math.sin(i+w*a)*Math.sin(s+A*o),g.push(h.x,h.y,h.z),d.copy(h).normalize(),f.push(d.x,d.y,d.z),m.push(w+S,1-A),b.push(l++)}u.push(b)}for(let _=0;_<n;_++)for(let b=0;b<t;b++){const A=u[_][b+1],S=u[_][b],y=u[_+1][b],w=u[_+1][b+1];(_!==0||s>0)&&p.push(A,S,w),(_!==n-1||c<Math.PI)&&p.push(S,y,w)}this.setIndex(p),this.setAttribute("position",new at(g,3)),this.setAttribute("normal",new at(f,3)),this.setAttribute("uv",new at(m,2))}static fromJSON(e){return new zs(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class wd extends ht{constructor(e){super(),this.type="ShadowMaterial",this.color=new pe(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}wd.prototype.isShadowMaterial=!0;class Td extends Kt{constructor(e){super(e),this.type="RawShaderMaterial"}}Td.prototype.isRawShaderMaterial=!0;class ql extends ht{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new pe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ra,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}ql.prototype.isMeshStandardMaterial=!0;class Ed extends ql{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ee(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return wt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new pe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new pe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new pe(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}Ed.prototype.isMeshPhysicalMaterial=!0;class Nd extends ht{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new pe(16777215),this.specular=new pe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ra,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ts,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}Nd.prototype.isMeshPhongMaterial=!0;class Rd extends ht{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new pe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ra,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Rd.prototype.isMeshToonMaterial=!0;class Ld extends ht{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ra,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}Ld.prototype.isMeshNormalMaterial=!0;class Ud extends ht{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ts,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Ud.prototype.isMeshLambertMaterial=!0;class Pd extends ht{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new pe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ra,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}Pd.prototype.isMeshMatcapMaterial=!0;class Dd extends Da{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Dd.prototype.isLineDashedMaterial=!0;const Fv={ShadowMaterial:wd,SpriteMaterial:kl,RawShaderMaterial:Td,ShaderMaterial:Kt,PointsMaterial:Ds,MeshPhysicalMaterial:Ed,MeshStandardMaterial:ql,MeshPhongMaterial:Nd,MeshToonMaterial:Rd,MeshNormalMaterial:Ld,MeshLambertMaterial:Ud,MeshDepthMaterial:Il,MeshDistanceMaterial:Fl,MeshBasicMaterial:Sr,MeshMatcapMaterial:Pd,LineDashedMaterial:Dd,LineBasicMaterial:Da,Material:ht};ht.fromType=function(r){return new Fv[r]};const Qe={arraySlice:function(r,e,t){return Qe.isTypedArray(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)},convertArray:function(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)},isTypedArray:function(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)},getKeyframeOrder:function(r){function e(i,a){return r[i]-r[a]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n},sortedArray:function(r,e,t){const n=r.length,i=new r.constructor(n);for(let a=0,s=0;s!==n;++a){const o=t[a]*e;for(let c=0;c!==e;++c)i[s++]=r[o+c]}return i},flattenJSON:function(r,e,t,n){let i=1,a=r[0];for(;a!==void 0&&a[n]===void 0;)a=r[i++];if(a===void 0)return;let s=a[n];if(s!==void 0)if(Array.isArray(s))do s=a[n],s!==void 0&&(e.push(a.time),t.push.apply(t,s)),a=r[i++];while(a!==void 0);else if(s.toArray!==void 0)do s=a[n],s!==void 0&&(e.push(a.time),s.toArray(t,t.length)),a=r[i++];while(a!==void 0);else do s=a[n],s!==void 0&&(e.push(a.time),t.push(s)),a=r[i++];while(a!==void 0)},subclip:function(r,e,t,n,i=30){const a=r.clone();a.name=e;const s=[];for(let c=0;c<a.tracks.length;++c){const l=a.tracks[c],u=l.getValueSize(),h=[],d=[];for(let p=0;p<l.times.length;++p){const g=l.times[p]*i;if(!(g<t||g>=n)){h.push(l.times[p]);for(let f=0;f<u;++f)d.push(l.values[p*u+f])}}h.length!==0&&(l.times=Qe.convertArray(h,l.times.constructor),l.values=Qe.convertArray(d,l.values.constructor),s.push(l))}a.tracks=s;let o=1/0;for(let c=0;c<a.tracks.length;++c)o>a.tracks[c].times[0]&&(o=a.tracks[c].times[0]);for(let c=0;c<a.tracks.length;++c)a.tracks[c].shift(-1*o);return a.resetDuration(),a},makeClipAdditive:function(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,a=e/n;for(let s=0;s<i;++s){const o=t.tracks[s],c=o.ValueTypeName;if(c==="bool"||c==="string")continue;const l=r.tracks.find(function(_){return _.name===o.name&&_.ValueTypeName===c});if(l===void 0)continue;let u=0;const h=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let d=0;const p=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);const g=o.times.length-1;let f;if(a<=o.times[0]){const _=u,b=h-u;f=Qe.arraySlice(o.values,_,b)}else if(a>=o.times[g]){const _=g*h+u,b=_+h-u;f=Qe.arraySlice(o.values,_,b)}else{const _=o.createInterpolant(),b=u,A=h-u;_.evaluate(a),f=Qe.arraySlice(_.resultBuffer,b,A)}c==="quaternion"&&new zt().fromArray(f).normalize().conjugate().toArray(f);const m=l.times.length;for(let _=0;_<m;++_){const b=_*p+d;if(c==="quaternion")zt.multiplyQuaternionsFlat(l.values,b,f,0,l.values,b);else{const A=p-d*2;for(let S=0;S<A;++S)l.values[b+S]-=f[S]}}}return r.blendMode=Yh,r}};class li{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],a=t[n-1];e:{t:{let s;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<a)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,a)}if(n===o)break;if(a=i,i=t[++n],e<i)break t}s=t.length;break n}if(!(e>=a)){const o=t[1];e<o&&(n=2,a=o);for(let c=n-2;;){if(a===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===c)break;if(i=a,a=t[--n-1],e>=a)break t}s=n,n=0;break n}break e}for(;n<s;){const o=n+s>>>1;e<t[o]?s=o:n=o+1}if(i=t[n],a=t[n-1],a===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,a,e)}this._cachedIndex=n,this.intervalChanged_(n,a,i)}return this.interpolate_(n,a,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,a=e*i;for(let s=0;s!==i;++s)t[s]=n[a+s];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}li.prototype.beforeStart_=li.prototype.copySampleValue_;li.prototype.afterEnd_=li.prototype.copySampleValue_;class zv extends li{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:oa,endingEnd:oa}}intervalChanged_(e,t,n){const i=this.parameterPositions;let a=e-2,s=e+1,o=i[a],c=i[s];if(o===void 0)switch(this.getSettings_().endingStart){case la:a=e,o=2*t-n;break;case bs:a=i.length-2,o=t+i[a]-i[a+1];break;default:a=e,o=n}if(c===void 0)switch(this.getSettings_().endingEnd){case la:s=e,c=2*n-t;break;case bs:s=1,c=n+i[1]-i[0];break;default:s=e-1,c=t}const l=(n-t)*.5,u=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(c-n),this._offsetPrev=a*u,this._offsetNext=s*u}interpolate_(e,t,n,i){const a=this.resultBuffer,s=this.sampleValues,o=this.valueSize,c=e*o,l=c-o,u=this._offsetPrev,h=this._offsetNext,d=this._weightPrev,p=this._weightNext,g=(n-t)/(i-t),f=g*g,m=f*g,_=-d*m+2*d*f-d*g,b=(1+d)*m+(-1.5-2*d)*f+(-.5+d)*g+1,A=(-1-p)*m+(1.5+p)*f+.5*g,S=p*m-p*f;for(let y=0;y!==o;++y)a[y]=_*s[u+y]+b*s[l+y]+A*s[c+y]+S*s[h+y];return a}}class Bd extends li{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const a=this.resultBuffer,s=this.sampleValues,o=this.valueSize,c=e*o,l=c-o,u=(n-t)/(i-t),h=1-u;for(let d=0;d!==o;++d)a[d]=s[l+d]*h+s[c+d]*u;return a}}class kv extends li{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class An{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Qe.convertArray(t,this.TimeBufferType),this.values=Qe.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Qe.convertArray(e.times,Array),values:Qe.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new kv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Bd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new zv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ys:t=this.InterpolantFactoryMethodDiscrete;break;case vs:t=this.InterpolantFactoryMethodLinear;break;case eo:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ys;case this.InterpolantFactoryMethodLinear:return vs;case this.InterpolantFactoryMethodSmooth:return eo}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let a=0,s=i-1;for(;a!==i&&n[a]<e;)++a;for(;s!==-1&&n[s]>t;)--s;if(++s,a!==0||s!==i){a>=s&&(s=Math.max(s,1),a=s-1);const o=this.getValueSize();this.times=Qe.arraySlice(n,a,s),this.values=Qe.arraySlice(this.values,a*o,s*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,a=n.length;a===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let o=0;o!==a;o++){const c=n[o];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,c),e=!1;break}if(s!==null&&s>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,c,s),e=!1;break}s=c}if(i!==void 0&&Qe.isTypedArray(i))for(let o=0,c=i.length;o!==c;++o){const l=i[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),e=!1;break}}return e}optimize(){const e=Qe.arraySlice(this.times),t=Qe.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===eo,a=e.length-1;let s=1;for(let o=1;o<a;++o){let c=!1;const l=e[o],u=e[o+1];if(l!==u&&(o!==1||l!==e[0]))if(i)c=!0;else{const h=o*n,d=h-n,p=h+n;for(let g=0;g!==n;++g){const f=t[h+g];if(f!==t[d+g]||f!==t[p+g]){c=!0;break}}}if(c){if(o!==s){e[s]=e[o];const h=o*n,d=s*n;for(let p=0;p!==n;++p)t[d+p]=t[h+p]}++s}}if(a>0){e[s]=e[a];for(let o=a*n,c=s*n,l=0;l!==n;++l)t[c+l]=t[o+l];++s}return s!==e.length?(this.times=Qe.arraySlice(e,0,s),this.values=Qe.arraySlice(t,0,s*n)):(this.times=e,this.values=t),this}clone(){const e=Qe.arraySlice(this.times,0),t=Qe.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}An.prototype.TimeBufferType=Float32Array;An.prototype.ValueBufferType=Float32Array;An.prototype.DefaultInterpolation=vs;class Ia extends An{}Ia.prototype.ValueTypeName="bool";Ia.prototype.ValueBufferType=Array;Ia.prototype.DefaultInterpolation=ys;Ia.prototype.InterpolantFactoryMethodLinear=void 0;Ia.prototype.InterpolantFactoryMethodSmooth=void 0;class Id extends An{}Id.prototype.ValueTypeName="color";class Ss extends An{}Ss.prototype.ValueTypeName="number";class Ov extends li{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const a=this.resultBuffer,s=this.sampleValues,o=this.valueSize,c=(n-t)/(i-t);let l=e*o;for(let u=l+o;l!==u;l+=4)zt.slerpFlat(a,0,s,l-o,s,l,c);return a}}class Mr extends An{InterpolantFactoryMethodLinear(e){return new Ov(this.times,this.values,this.getValueSize(),e)}}Mr.prototype.ValueTypeName="quaternion";Mr.prototype.DefaultInterpolation=vs;Mr.prototype.InterpolantFactoryMethodSmooth=void 0;class Fa extends An{}Fa.prototype.ValueTypeName="string";Fa.prototype.ValueBufferType=Array;Fa.prototype.DefaultInterpolation=ys;Fa.prototype.InterpolantFactoryMethodLinear=void 0;Fa.prototype.InterpolantFactoryMethodSmooth=void 0;class As extends An{}As.prototype.ValueTypeName="vector";class Vu{constructor(e,t=-1,n,i=El){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=xn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let s=0,o=n.length;s!==o;++s)t.push(Hv(n[s]).scale(i));const a=new this(e.name,e.duration,t,e.blendMode);return a.uuid=e.uuid,a}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let a=0,s=n.length;a!==s;++a)t.push(An.toJSON(n[a]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const a=t.length,s=[];for(let o=0;o<a;o++){let c=[],l=[];c.push((o+a-1)%a,o,(o+1)%a),l.push(0,1,0);const u=Qe.getKeyframeOrder(c);c=Qe.sortedArray(c,1,u),l=Qe.sortedArray(l,1,u),!i&&c[0]===0&&(c.push(a),l.push(l[0])),s.push(new Ss(".morphTargetInfluences["+t[o].name+"]",c,l).scale(1/n))}return new this(e,-1,s)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},a=/^([\w-]*?)([\d]+)$/;for(let o=0,c=e.length;o<c;o++){const l=e[o],u=l.name.match(a);if(u&&u.length>1){const h=u[1];let d=i[h];d||(i[h]=d=[]),d.push(l)}}const s=[];for(const o in i)s.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return s}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,d,p,g,f){if(p.length!==0){const m=[],_=[];Qe.flattenJSON(p,m,_,g),m.length!==0&&f.push(new h(d,m,_))}},i=[],a=e.name||"default",s=e.fps||30,o=e.blendMode;let c=e.length||-1;const l=e.hierarchy||[];for(let h=0;h<l.length;h++){const d=l[h].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const p={};let g;for(g=0;g<d.length;g++)if(d[g].morphTargets)for(let f=0;f<d[g].morphTargets.length;f++)p[d[g].morphTargets[f]]=-1;for(const f in p){const m=[],_=[];for(let b=0;b!==d[g].morphTargets.length;++b){const A=d[g];m.push(A.time),_.push(A.morphTarget===f?1:0)}i.push(new Ss(".morphTargetInfluence["+f+"]",m,_))}c=p.length*s}else{const p=".bones["+t[h].name+"]";n(As,p+".position",d,"pos",i),n(Mr,p+".quaternion",d,"rot",i),n(As,p+".scale",d,"scl",i)}}return i.length===0?null:new this(a,c,i,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const a=this.tracks[n];t=Math.max(t,a.times[a.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Gv(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ss;case"vector":case"vector2":case"vector3":case"vector4":return As;case"color":return Id;case"quaternion":return Mr;case"bool":case"boolean":return Ia;case"string":return Fa}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function Hv(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Gv(r.type);if(r.times===void 0){const t=[],n=[];Qe.flattenJSON(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const Na={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Vv{constructor(e,t,n){const i=this;let a=!1,s=0,o=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){o++,a===!1&&i.onStart!==void 0&&i.onStart(u,s,o),a=!0},this.itemEnd=function(u){s++,i.onProgress!==void 0&&i.onProgress(u,s,o),s===o&&(a=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,h){return l.push(u,h),this},this.removeHandler=function(u){const h=l.indexOf(u);return h!==-1&&l.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=l.length;h<d;h+=2){const p=l[h],g=l[h+1];if(p.global&&(p.lastIndex=0),p.test(u))return g}return null}}}const Wv=new Vv;class ui{constructor(e){this.manager=e!==void 0?e:Wv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,a){n.load(e,i,t,a)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Nn={};class jv extends ui{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=Na.get(e);if(a!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(a),this.manager.itemEnd(e)},0),a;if(Nn[e]!==void 0){Nn[e].push({onLoad:t,onProgress:n,onError:i});return}Nn[e]=[],Nn[e].push({onLoad:t,onProgress:n,onError:i});const s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,c=this.responseType;fetch(s).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||l.body===void 0||l.body.getReader===void 0)return l;const u=Nn[e],h=l.body.getReader(),d=l.headers.get("Content-Length"),p=d?parseInt(d):0,g=p!==0;let f=0;const m=new ReadableStream({start(_){b();function b(){h.read().then(({done:A,value:S})=>{if(A)_.close();else{f+=S.byteLength;const y=new ProgressEvent("progress",{lengthComputable:g,loaded:f,total:p});for(let w=0,E=u.length;w<E;w++){const L=u[w];L.onProgress&&L.onProgress(y)}_.enqueue(S),b()}})}}});return new Response(m)}else throw Error(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`)}).then(l=>{switch(c){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(u=>new DOMParser().parseFromString(u,o));case"json":return l.json();default:if(o===void 0)return l.text();{const h=/charset="?([^;"\s]*)"?/i.exec(o),d=h&&h[1]?h[1].toLowerCase():void 0,p=new TextDecoder(d);return l.arrayBuffer().then(g=>p.decode(g))}}}).then(l=>{Na.add(e,l);const u=Nn[e];delete Nn[e];for(let h=0,d=u.length;h<d;h++){const p=u[h];p.onLoad&&p.onLoad(l)}}).catch(l=>{const u=Nn[e];if(u===void 0)throw this.manager.itemError(e),l;delete Nn[e];for(let h=0,d=u.length;h<d;h++){const p=u[h];p.onError&&p.onError(l)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Fd extends ui{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,s=Na.get(e);if(s!==void 0)return a.manager.itemStart(e),setTimeout(function(){t&&t(s),a.manager.itemEnd(e)},0),s;const o=pr("img");function c(){u(),Na.add(e,this),t&&t(this),a.manager.itemEnd(e)}function l(h){u(),i&&i(h),a.manager.itemError(e),a.manager.itemEnd(e)}function u(){o.removeEventListener("load",c,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",c,!1),o.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),a.manager.itemStart(e),o.src=e,o}}class Kv extends ui{constructor(e){super(e)}load(e,t,n,i){const a=new Ls,s=new Fd(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function c(l){s.load(e[l],function(u){a.images[l]=u,o++,o===6&&(a.needsUpdate=!0,t&&t(a))},void 0,i)}for(let l=0;l<e.length;++l)c(l);return a}}class zd extends ui{constructor(e){super(e)}load(e,t,n,i){const a=new _t,s=new Fd(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(o){a.image=o,a.needsUpdate=!0,t!==void 0&&t(a)},n,i),a}}class Sn extends Ve{constructor(e,t=1){super(),this.type="Light",this.color=new pe(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}Sn.prototype.isLight=!0;class qv extends Sn{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(Ve.DefaultUp),this.updateMatrix(),this.groundColor=new pe(t)}copy(e){return Sn.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}qv.prototype.isHemisphereLight=!0;const Wu=new me,ju=new T,Ku=new T;class Zl{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ee(512,512),this.map=null,this.mapPass=null,this.matrix=new me,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Us,this._frameExtents=new ee(1,1),this._viewportCount=1,this._viewports=[new je(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;ju.setFromMatrixPosition(e.matrixWorld),t.position.copy(ju),Ku.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Ku),t.updateMatrixWorld(),Wu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Wu),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class kd extends Zl{constructor(){super(new Tt(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=nl*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,a=e.distance||t.far;(n!==t.fov||i!==t.aspect||a!==t.far)&&(t.fov=n,t.aspect=i,t.far=a,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}kd.prototype.isSpotLightShadow=!0;class Zv extends Sn{constructor(e,t,n=0,i=Math.PI/3,a=0,s=1){super(e,t),this.type="SpotLight",this.position.copy(Ve.DefaultUp),this.updateMatrix(),this.target=new Ve,this.distance=n,this.angle=i,this.penumbra=a,this.decay=s,this.shadow=new kd}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Zv.prototype.isSpotLight=!0;const qu=new me,Za=new T,Io=new T;class Od extends Zl{constructor(){super(new Tt(90,1,.5,500)),this._frameExtents=new ee(4,2),this._viewportCount=6,this._viewports=[new je(2,1,1,1),new je(0,1,1,1),new je(3,1,1,1),new je(1,1,1,1),new je(3,0,1,1),new je(1,0,1,1)],this._cubeDirections=[new T(1,0,0),new T(-1,0,0),new T(0,0,1),new T(0,0,-1),new T(0,1,0),new T(0,-1,0)],this._cubeUps=[new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,0,1),new T(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,a=e.distance||n.far;a!==n.far&&(n.far=a,n.updateProjectionMatrix()),Za.setFromMatrixPosition(e.matrixWorld),n.position.copy(Za),Io.copy(n.position),Io.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Io),n.updateMatrixWorld(),i.makeTranslation(-Za.x,-Za.y,-Za.z),qu.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(qu)}}Od.prototype.isPointLightShadow=!0;class Xv extends Sn{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Od}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}Xv.prototype.isPointLight=!0;class Gd extends Zl{constructor(){super(new Dl(-5,5,5,-5,.5,500))}}Gd.prototype.isDirectionalLightShadow=!0;class Jv extends Sn{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Ve.DefaultUp),this.updateMatrix(),this.target=new Ve,this.shadow=new Gd}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Jv.prototype.isDirectionalLight=!0;class Yv extends Sn{constructor(e,t){super(e,t),this.type="AmbientLight"}}Yv.prototype.isAmbientLight=!0;class $v extends Sn{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}$v.prototype.isRectAreaLight=!0;class Hd{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new T)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,a=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.282095),t.addScaledVector(s[1],.488603*i),t.addScaledVector(s[2],.488603*a),t.addScaledVector(s[3],.488603*n),t.addScaledVector(s[4],1.092548*(n*i)),t.addScaledVector(s[5],1.092548*(i*a)),t.addScaledVector(s[6],.315392*(3*a*a-1)),t.addScaledVector(s[7],1.092548*(n*a)),t.addScaledVector(s[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,a=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.886227),t.addScaledVector(s[1],2*.511664*i),t.addScaledVector(s[2],2*.511664*a),t.addScaledVector(s[3],2*.511664*n),t.addScaledVector(s[4],2*.429043*n*i),t.addScaledVector(s[5],2*.429043*i*a),t.addScaledVector(s[6],.743125*a*a-.247708),t.addScaledVector(s[7],2*.429043*n*a),t.addScaledVector(s[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,a=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*a,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*a,t[6]=.315392*(3*a*a-1),t[7]=1.092548*n*a,t[8]=.546274*(n*n-i*i)}}Hd.prototype.isSphericalHarmonics3=!0;class Xl extends Sn{constructor(e=new Hd,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Xl.prototype.isLightProbe=!0;class Qv{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class eb extends Xe{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}eb.prototype.isInstancedBufferGeometry=!0;class tb extends ui{constructor(e){super(e),typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,s=Na.get(e);if(s!==void 0)return a.manager.itemStart(e),setTimeout(function(){t&&t(s),a.manager.itemEnd(e)},0),s;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(a.options,{colorSpaceConversion:"none"}))}).then(function(c){Na.add(e,c),t&&t(c),a.manager.itemEnd(e)}).catch(function(c){i&&i(c),a.manager.itemError(e),a.manager.itemEnd(e)}),a.manager.itemStart(e)}}tb.prototype.isImageBitmapLoader=!0;let rs;const nb={getContext:function(){return rs===void 0&&(rs=new(window.AudioContext||window.webkitAudioContext)),rs},setContext:function(r){rs=r}};class ib extends ui{constructor(e){super(e)}load(e,t,n,i){const a=this,s=new jv(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(o){try{const c=o.slice(0);nb.getContext().decodeAudioData(c,function(u){t(u)})}catch(c){i?i(c):console.error(c),a.manager.itemError(e)}},n,i)}}class ab extends Xl{constructor(e,t,n=1){super(void 0,n);const i=new pe().set(e),a=new pe().set(t),s=new T(i.r,i.g,i.b),o=new T(a.r,a.g,a.b),c=Math.sqrt(Math.PI),l=c*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(c),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(l)}}ab.prototype.isHemisphereLightProbe=!0;class rb extends Xl{constructor(e,t=1){super(void 0,t);const n=new pe().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}rb.prototype.isAmbientLightProbe=!0;class sb extends Ve{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class ob{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,a,s;switch(t){case"quaternion":i=this._slerp,a=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,a=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,a=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=a,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,a=e*i+i;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==i;++o)n[a+o]=n[o];s=t}else{s+=t;const o=t/s;this._mixBufferRegion(n,a,0,o,i)}this.cumulativeWeight=s}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,a=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,a<1){const c=t*this._origIndex;this._mixBufferRegion(n,i,c,1-a,t)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let c=t,l=t+t;c!==l;++c)if(n[c]!==n[c+t]){o.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let a=n,s=i;a!==s;++a)t[a]=t[i+a%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,a){if(i>=.5)for(let s=0;s!==a;++s)e[t+s]=e[n+s]}_slerp(e,t,n,i){zt.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,a){const s=this._workIndex*a;zt.multiplyQuaternionsFlat(e,s,e,t,e,n),zt.slerpFlat(e,t,e,t,e,s,i)}_lerp(e,t,n,i,a){const s=1-i;for(let o=0;o!==a;++o){const c=t+o;e[c]=e[c]*s+e[n+o]*i}}_lerpAdditive(e,t,n,i,a){for(let s=0;s!==a;++s){const o=t+s;e[o]=e[o]+e[n+s]*i}}}const Jl="\\[\\]\\.:\\/",lb=new RegExp("["+Jl+"]","g"),Yl="[^"+Jl+"]",cb="[^"+Jl.replace("\\.","")+"]",ub=/((?:WC+[\/:])*)/.source.replace("WC",Yl),hb=/(WCOD+)?/.source.replace("WCOD",cb),db=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Yl),fb=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Yl),pb=new RegExp("^"+ub+hb+db+fb+"$"),mb=["material","materials","bones"];class gb{constructor(e,t,n){const i=n||He.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,a=n.length;i!==a;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class He{constructor(e,t,n){this.path=t,this.parsedPath=n||He.parseTrackName(t),this.node=He.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new He.Composite(e,t,n):new He(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(lb,"")}static parseTrackName(e){const t=pb.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const a=n.nodeName.substring(i+1);mb.indexOf(a)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=a)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(a){for(let s=0;s<a.length;s++){const o=a[s];if(o.name===t||o.uuid===t)return o;const c=n(o.children);if(c)return c}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,a=n.length;i!==a;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let a=t.propertyIndex;if(e||(e=He.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let l=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===l){l=u;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(l!==void 0){if(e[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[l]}}const s=e[i];if(s===void 0){const l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(a!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[a]!==void 0&&(a=e.morphTargetDictionary[a])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}c=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else s.fromArray!==void 0&&s.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(c=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}He.Composite=gb;He.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};He.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};He.prototype.GetterByBindingType=[He.prototype._getValue_direct,He.prototype._getValue_array,He.prototype._getValue_arrayElement,He.prototype._getValue_toArray];He.prototype.SetterByBindingTypeAndVersioning=[[He.prototype._setValue_direct,He.prototype._setValue_direct_setNeedsUpdate,He.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[He.prototype._setValue_array,He.prototype._setValue_array_setNeedsUpdate,He.prototype._setValue_array_setMatrixWorldNeedsUpdate],[He.prototype._setValue_arrayElement,He.prototype._setValue_arrayElement_setNeedsUpdate,He.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[He.prototype._setValue_fromArray,He.prototype._setValue_fromArray_setNeedsUpdate,He.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class _b{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const a=t.tracks,s=a.length,o=new Array(s),c={endingStart:oa,endingEnd:oa};for(let l=0;l!==s;++l){const u=a[l].createInterpolant(null);o[l]=u,u.settings=c}this._interpolantSettings=c,this._interpolants=o,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=im,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,a=e._clip.duration,s=a/i,o=i/a;e.warp(1,s,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,a=i.time,s=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const c=o.parameterPositions,l=o.sampleValues;return c[0]=a,c[1]=a+n,l[0]=e/s,l[1]=t/s,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const a=this._startTime;if(a!==null){const c=(e-a)*n;if(c<0||n===0)return;this._startTime=null,t=n*c}t*=this._updateTimeScale(e);const s=this._updateTime(t),o=this._updateWeight(e);if(o>0){const c=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case Yh:for(let u=0,h=c.length;u!==h;++u)c[u].evaluate(s),l[u].accumulateAdditive(o);break;case El:default:for(let u=0,h=c.length;u!==h;++u)c[u].evaluate(s),l[u].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,a=this._loopCount;const s=n===am;if(e===0)return a===-1?i:s&&(a&1)===1?t-i:i;if(n===nm){a===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(a===-1&&(e>=0?(a=0,this._setEndings(!0,this.repetitions===0,s)):this._setEndings(this.repetitions===0,!0,s)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,a+=Math.abs(o);const c=this.repetitions-a;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const l=e<0;this._setEndings(l,!l,s)}else this._setEndings(!1,!1,s);this._loopCount=a,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(s&&(a&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=la,i.endingEnd=la):(e?i.endingStart=this.zeroSlopeAtStart?la:oa:i.endingStart=bs,t?i.endingEnd=this.zeroSlopeAtEnd?la:oa:i.endingEnd=bs)}_scheduleFading(e,t,n){const i=this._mixer,a=i.time;let s=this._weightInterpolant;s===null&&(s=i._lendControlInterpolant(),this._weightInterpolant=s);const o=s.parameterPositions,c=s.sampleValues;return o[0]=a,c[0]=t,o[1]=a+e,c[1]=n,this}}class yb extends Ui{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,a=i.length,s=e._propertyBindings,o=e._interpolants,c=n.uuid,l=this._bindingsByRootAndName;let u=l[c];u===void 0&&(u={},l[c]=u);for(let h=0;h!==a;++h){const d=i[h],p=d.name;let g=u[p];if(g!==void 0)++g.referenceCount,s[h]=g;else{if(g=s[h],g!==void 0){g._cacheIndex===null&&(++g.referenceCount,this._addInactiveBinding(g,c,p));continue}const f=t&&t._propertyBindings[h].binding.parsedPath;g=new ob(He.create(n,p,f),d.ValueTypeName,d.getValueSize()),++g.referenceCount,this._addInactiveBinding(g,c,p),s[h]=g}o[h].resultBuffer=g.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,a=this._actionsByClip[i];this._bindAction(e,a&&a.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const a=t[n];a.useCount++===0&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const a=t[n];--a.useCount===0&&(a.restoreOriginalState(),this._takeBackBinding(a))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,a=this._actionsByClip;let s=a[t];if(s===void 0)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,a[t]=s;else{const o=s.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),s.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const a=e._clip.uuid,s=this._actionsByClip,o=s[a],c=o.knownActions,l=c[c.length-1],u=e._byClipCacheIndex;l._byClipCacheIndex=u,c[u]=l,c.pop(),e._byClipCacheIndex=null;const h=o.actionByRoot,d=(e._localRoot||this._root).uuid;delete h[d],c.length===0&&delete s[a],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const a=t[n];--a.referenceCount===0&&this._removeInactiveBinding(a)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,a=t[i];e._cacheIndex=i,t[i]=e,a._cacheIndex=n,t[n]=a}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,a=t[i];e._cacheIndex=i,t[i]=e,a._cacheIndex=n,t[n]=a}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,a=this._bindings;let s=i[t];s===void 0&&(s={},i[t]=s),s[n]=e,e._cacheIndex=a.length,a.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,a=n.path,s=this._bindingsByRootAndName,o=s[i],c=t[t.length-1],l=e._cacheIndex;c._cacheIndex=l,t[l]=c,t.pop(),delete o[a],Object.keys(o).length===0&&delete s[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,a=t[i];e._cacheIndex=i,t[i]=e,a._cacheIndex=n,t[n]=a}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,a=t[i];e._cacheIndex=i,t[i]=e,a._cacheIndex=n,t[n]=a}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Bd(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,a=t[i];e.__cacheIndex=i,t[i]=e,a.__cacheIndex=n,t[n]=a}clipAction(e,t,n){const i=t||this._root,a=i.uuid;let s=typeof e=="string"?Vu.findByName(i,e):e;const o=s!==null?s.uuid:e,c=this._actionsByClip[o];let l=null;if(n===void 0&&(s!==null?n=s.blendMode:n=El),c!==void 0){const h=c.actionByRoot[a];if(h!==void 0&&h.blendMode===n)return h;l=c.knownActions[0],s===null&&(s=l._clip)}if(s===null)return null;const u=new _b(this,s,t,n);return this._bindAction(u,l),this._addInactiveAction(u,o,a),u}existingAction(e,t){const n=t||this._root,i=n.uuid,a=typeof e=="string"?Vu.findByName(n,e):e,s=a?a.uuid:e,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,a=Math.sign(e),s=this._accuIndex^=1;for(let l=0;l!==n;++l)t[l]._update(i,e,a,s);const o=this._bindings,c=this._nActiveBindings;for(let l=0;l!==c;++l)o[l].apply(s);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,a=i[n];if(a!==void 0){const s=a.knownActions;for(let o=0,c=s.length;o!==c;++o){const l=s[o];this._deactivateAction(l);const u=l._cacheIndex,h=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const s in n){const o=n[s].actionByRoot,c=o[t];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const i=this._bindingsByRootAndName,a=i[t];if(a!==void 0)for(const s in a){const o=a[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}yb.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class vb extends Ar{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}vb.prototype.isInstancedInterleavedBuffer=!0;class bb{constructor(e,t,n=0,i=1/0){this.ray=new Di(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Rl,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return ul(e,this,n,t),n.sort(Zu),n}intersectObjects(e,t=!0,n=[]){for(let i=0,a=e.length;i<a;i++)ul(e[i],this,n,t);return n.sort(Zu),n}}function Zu(r,e){return r.distance-e.distance}function ul(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let a=0,s=i.length;a<s;a++)ul(i[a],e,t,!0)}}const qn=new T,ss=new me,Fo=new me;class xb extends Gl{constructor(e){const t=Vd(e),n=new Xe,i=[],a=[],s=new pe(0,0,1),o=new pe(0,1,0);for(let l=0;l<t.length;l++){const u=t[l];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),a.push(s.r,s.g,s.b),a.push(o.r,o.g,o.b))}n.setAttribute("position",new at(i,3)),n.setAttribute("color",new at(a,3));const c=new Da({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,c),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Fo.copy(this.root.matrixWorld).invert();for(let a=0,s=0;a<t.length;a++){const o=t[a];o.parent&&o.parent.isBone&&(ss.multiplyMatrices(Fo,o.matrixWorld),qn.setFromMatrixPosition(ss),i.setXYZ(s,qn.x,qn.y,qn.z),ss.multiplyMatrices(Fo,o.parent.matrixWorld),qn.setFromMatrixPosition(ss),i.setXYZ(s+1,qn.x,qn.y,qn.z),s+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function Vd(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Vd(r.children[t]));return e}class Sb extends Gl{constructor(e=10,t=10,n=4473924,i=8947848){n=new pe(n),i=new pe(i);const a=t/2,s=e/t,o=e/2,c=[],l=[];for(let d=0,p=0,g=-o;d<=t;d++,g+=s){c.push(-o,0,g,o,0,g),c.push(g,0,-o,g,0,o);const f=d===a?n:i;f.toArray(l,p),p+=3,f.toArray(l,p),p+=3,f.toArray(l,p),p+=3,f.toArray(l,p),p+=3}const u=new Xe;u.setAttribute("position",new at(c,3)),u.setAttribute("color",new at(l,3));const h=new Da({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}}const gn=new Uint32Array(512),_n=new Uint32Array(512);for(let r=0;r<256;++r){const e=r-127;e<-27?(gn[r]=0,gn[r|256]=32768,_n[r]=24,_n[r|256]=24):e<-14?(gn[r]=1024>>-e-14,gn[r|256]=1024>>-e-14|32768,_n[r]=-e-1,_n[r|256]=-e-1):e<=15?(gn[r]=e+15<<10,gn[r|256]=e+15<<10|32768,_n[r]=13,_n[r|256]=13):e<128?(gn[r]=31744,gn[r|256]=64512,_n[r]=24,_n[r|256]=24):(gn[r]=31744,gn[r|256]=64512,_n[r]=13,_n[r|256]=13)}const Wd=new Uint32Array(2048),wr=new Uint32Array(64),Ab=new Uint32Array(64);for(let r=1;r<1024;++r){let e=r<<13,t=0;for(;(e&8388608)===0;)e<<=1,t-=8388608;e&=-8388609,t+=947912704,Wd[r]=e|t}for(let r=1024;r<2048;++r)Wd[r]=939524096+(r-1024<<13);for(let r=1;r<31;++r)wr[r]=r<<23;wr[31]=1199570944;wr[32]=2147483648;for(let r=33;r<63;++r)wr[r]=2147483648+(r-32<<23);wr[63]=3347054592;for(let r=1;r<64;++r)r!==32&&(Ab[r]=1024);en.create=function(r,e){return console.log("THREE.Curve.create() has been deprecated"),r.prototype=Object.create(en.prototype),r.prototype.constructor=r,r.prototype.getPoint=e,r};ol.prototype.fromPoints=function(r){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(r)};Sb.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};xb.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};ui.prototype.extractUrlBase=function(r){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Qv.extractUrlBase(r)};ui.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};hn.prototype.center=function(r){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(r)};hn.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};hn.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};hn.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};hn.prototype.size=function(r){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(r)};Bi.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")};La.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Us.prototype.setFromMatrix=function(r){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(r)};xt.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};xt.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};xt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};xt.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};xt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};xt.prototype.getInverse=function(r){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};me.prototype.extractPosition=function(r){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(r)};me.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};me.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new T().setFromMatrixColumn(this,3)};me.prototype.setRotationFromQuaternion=function(r){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(r)};me.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};me.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};me.prototype.multiplyVector4=function(r){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};me.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};me.prototype.rotateAxis=function(r){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),r.transformDirection(this)};me.prototype.crossVector=function(r){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};me.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};me.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};me.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};me.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};me.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};me.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};me.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};me.prototype.makeFrustum=function(r,e,t,n,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(r,e,n,t,i,a)};me.prototype.getInverse=function(r){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};Un.prototype.isIntersectionLine=function(r){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(r)};zt.prototype.multiplyVector3=function(r){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),r.applyQuaternion(this)};zt.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};Di.prototype.isIntersectionBox=function(r){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};Di.prototype.isIntersectionPlane=function(r){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(r)};Di.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};lt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};lt.prototype.barycoordFromPoint=function(r,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(r,e)};lt.prototype.midpoint=function(r){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(r)};lt.prototypenormal=function(r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(r)};lt.prototype.plane=function(r){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(r)};lt.barycoordFromPoint=function(r,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),lt.getBarycoord(r,e,t,n,i)};lt.normal=function(r,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),lt.getNormal(r,e,t,n)};Cr.prototype.extractAllPoints=function(r){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(r)};Cr.prototype.extrude=function(r){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Ba(this,r)};Cr.prototype.makeGeometry=function(r){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Kl(this,r)};ee.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};ee.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};ee.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};T.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};T.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};T.prototype.getPositionFromMatrix=function(r){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(r)};T.prototype.getScaleFromMatrix=function(r){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(r)};T.prototype.getColumnFromMatrix=function(r,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,r)};T.prototype.applyProjection=function(r){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(r)};T.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};T.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};T.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};je.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};je.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Ve.prototype.getChildByName=function(r){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(r)};Ve.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};Ve.prototype.translate=function(r,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,r)};Ve.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};Ve.prototype.applyMatrix=function(r){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(Ve.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(r){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=r}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});St.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(St.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),rm},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});gd.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Tt.prototype.setLens=function(r,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(r)};Object.defineProperties(Sn.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(r){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=r}},shadowCameraLeft:{set:function(r){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=r}},shadowCameraRight:{set:function(r){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=r}},shadowCameraTop:{set:function(r){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=r}},shadowCameraBottom:{set:function(r){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=r}},shadowCameraNear:{set:function(r){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=r}},shadowCameraFar:{set:function(r){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=r}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(r){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=r}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(r){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=r}},shadowMapHeight:{set:function(r){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=r}}});Object.defineProperties(ut.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===xs},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(xs)}}});ut.prototype.setDynamic=function(r){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?xs:fr),this};ut.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},ut.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Xe.prototype.addIndex=function(r){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(r)};Xe.prototype.addAttribute=function(r,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(r,new ut(arguments[1],arguments[2]))):r==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(r,e)};Xe.prototype.addDrawCall=function(r,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(r,e)};Xe.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Xe.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Xe.prototype.removeAttribute=function(r){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(r)};Xe.prototype.applyMatrix=function(r){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(Xe.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Ar.prototype.setDynamic=function(r){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?xs:fr),this};Ar.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Ba.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Ba.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Ba.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};zl.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(ht.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new pe}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(r){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===qh}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(r){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=r}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(Kt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(r){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=r}}});We.prototype.clearTarget=function(r,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(r),this.clear(e,t,n)};We.prototype.animate=function(r){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(r)};We.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};We.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};We.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};We.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};We.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};We.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};We.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};We.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};We.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};We.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};We.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};We.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};We.prototype.enableScissorTest=function(r){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(r)};We.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};We.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};We.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};We.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};We.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};We.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};We.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};We.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};We.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};We.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(We.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=r}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=r}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(r){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=r===!0?$e:zn}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(dd.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Wt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=r}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=r}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=r}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=r}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(r){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=r}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(r){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=r}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(r){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=r}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(r){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=r}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(r){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=r}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(r){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=r}}});sb.prototype.load=function(r){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new ib().load(r,function(n){e.setBuffer(n)}),this};Ul.prototype.updateCubeMap=function(r,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(r,e)};Ul.prototype.clear=function(r,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(r,e,t,n)};Pi.crossOrigin=void 0;Pi.loadTexture=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new zd;i.setCrossOrigin(this.crossOrigin);const a=i.load(r,t,void 0,n);return e&&(a.mapping=e),a};Pi.loadTextureCube=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new Kv;i.setCrossOrigin(this.crossOrigin);const a=i.load(r,t,void 0,n);return e&&(a.mapping=e),a};Pi.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Pi.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Tl}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Tl);var jd=[{name:"Afghanistan",topLevelDomain:[".af"],alpha2Code:"AF",alpha3Code:"AFG",callingCodes:["93"],capital:"Kabul",altSpellings:["AF","Af\u0121\u0101nist\u0101n"],region:"Asia",subregion:"Southern Asia",population:27657145,latlng:[33,65],demonym:"Afghan",area:652230,gini:27.8,timezones:["UTC+04:30"],borders:["IRN","PAK","TKM","UZB","TJK","CHN"],nativeName:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",numericCode:"004",currencies:[{code:"AFN",name:"Afghan afghani",symbol:"\u060B"}],languages:[{iso639_1:"ps",iso639_2:"pus",name:"Pashto",nativeName:"\u067E\u069A\u062A\u0648"},{iso639_1:"uz",iso639_2:"uzb",name:"Uzbek",nativeName:"O\u02BBzbek"},{iso639_1:"tk",iso639_2:"tuk",name:"Turkmen",nativeName:"T\xFCrkmen"}],translations:{de:"Afghanistan",es:"Afganist\xE1n",fr:"Afghanistan",ja:"\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3",it:"Afghanistan",br:"Afeganist\xE3o",pt:"Afeganist\xE3o",nl:"Afghanistan",hr:"Afganistan",fa:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/afg.svg",regionalBlocs:[{acronym:"SAARC",name:"South Asian Association for Regional Cooperation",otherAcronyms:[],otherNames:[]}],cioc:"AFG"},{name:"\xC5land Islands",topLevelDomain:[".ax"],alpha2Code:"AX",alpha3Code:"ALA",callingCodes:["358"],capital:"Mariehamn",altSpellings:["AX","Aaland","Aland","Ahvenanmaa"],region:"Europe",subregion:"Northern Europe",population:28875,latlng:[60.116667,19.9],demonym:"\xC5landish",area:1580,gini:null,timezones:["UTC+02:00"],borders:[],nativeName:"\xC5land",numericCode:"248",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"sv",iso639_2:"swe",name:"Swedish",nativeName:"svenska"}],translations:{de:"\xC5land",es:"Alandia",fr:"\xC5land",ja:"\u30AA\u30FC\u30E9\u30F3\u30C9\u8AF8\u5CF6",it:"Isole Aland",br:"Ilhas de Aland",pt:"Ilhas de Aland",nl:"\xC5landeilanden",hr:"\xC5landski otoci",fa:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0646\u062F"},flag:"https://restcountries.eu/data/ala.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:""},{name:"Albania",topLevelDomain:[".al"],alpha2Code:"AL",alpha3Code:"ALB",callingCodes:["355"],capital:"Tirana",altSpellings:["AL","Shqip\xEBri","Shqip\xEBria","Shqipnia"],region:"Europe",subregion:"Southern Europe",population:2886026,latlng:[41,20],demonym:"Albanian",area:28748,gini:34.5,timezones:["UTC+01:00"],borders:["MNE","GRC","MKD","KOS"],nativeName:"Shqip\xEBria",numericCode:"008",currencies:[{code:"ALL",name:"Albanian lek",symbol:"L"}],languages:[{iso639_1:"sq",iso639_2:"sqi",name:"Albanian",nativeName:"Shqip"}],translations:{de:"Albanien",es:"Albania",fr:"Albanie",ja:"\u30A2\u30EB\u30D0\u30CB\u30A2",it:"Albania",br:"Alb\xE2nia",pt:"Alb\xE2nia",nl:"Albani\xEB",hr:"Albanija",fa:"\u0622\u0644\u0628\u0627\u0646\u06CC"},flag:"https://restcountries.eu/data/alb.svg",regionalBlocs:[{acronym:"CEFTA",name:"Central European Free Trade Agreement",otherAcronyms:[],otherNames:[]}],cioc:"ALB"},{name:"Algeria",topLevelDomain:[".dz"],alpha2Code:"DZ",alpha3Code:"DZA",callingCodes:["213"],capital:"Algiers",altSpellings:["DZ","Dzayer","Alg\xE9rie"],region:"Africa",subregion:"Northern Africa",population:404e5,latlng:[28,3],demonym:"Algerian",area:2381741,gini:35.3,timezones:["UTC+01:00"],borders:["TUN","LBY","NER","ESH","MRT","MLI","MAR"],nativeName:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",numericCode:"012",currencies:[{code:"DZD",name:"Algerian dinar",symbol:"\u062F.\u062C"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Algerien",es:"Argelia",fr:"Alg\xE9rie",ja:"\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2",it:"Algeria",br:"Arg\xE9lia",pt:"Arg\xE9lia",nl:"Algerije",hr:"Al\u017Eir",fa:"\u0627\u0644\u062C\u0632\u0627\u06CC\u0631"},flag:"https://restcountries.eu/data/dza.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]},{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"ALG"},{name:"American Samoa",topLevelDomain:[".as"],alpha2Code:"AS",alpha3Code:"ASM",callingCodes:["1684"],capital:"Pago Pago",altSpellings:["AS","Amerika S\u0101moa","Amelika S\u0101moa","S\u0101moa Amelika"],region:"Oceania",subregion:"Polynesia",population:57100,latlng:[-14.33333333,-170],demonym:"American Samoan",area:199,gini:null,timezones:["UTC-11:00"],borders:[],nativeName:"American Samoa",numericCode:"016",currencies:[{code:"USD",name:"United State Dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"sm",iso639_2:"smo",name:"Samoan",nativeName:"gagana fa'a Samoa"}],translations:{de:"Amerikanisch-Samoa",es:"Samoa Americana",fr:"Samoa am\xE9ricaines",ja:"\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2",it:"Samoa Americane",br:"Samoa Americana",pt:"Samoa Americana",nl:"Amerikaans Samoa",hr:"Ameri\u010Dka Samoa",fa:"\u0633\u0627\u0645\u0648\u0622\u06CC \u0622\u0645\u0631\u06CC\u06A9\u0627"},flag:"https://restcountries.eu/data/asm.svg",regionalBlocs:[],cioc:"ASA"},{name:"Andorra",topLevelDomain:[".ad"],alpha2Code:"AD",alpha3Code:"AND",callingCodes:["376"],capital:"Andorra la Vella",altSpellings:["AD","Principality of Andorra","Principat d'Andorra"],region:"Europe",subregion:"Southern Europe",population:78014,latlng:[42.5,1.5],demonym:"Andorran",area:468,gini:null,timezones:["UTC+01:00"],borders:["FRA","ESP"],nativeName:"Andorra",numericCode:"020",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"ca",iso639_2:"cat",name:"Catalan",nativeName:"catal\xE0"}],translations:{de:"Andorra",es:"Andorra",fr:"Andorre",ja:"\u30A2\u30F3\u30C9\u30E9",it:"Andorra",br:"Andorra",pt:"Andorra",nl:"Andorra",hr:"Andora",fa:"\u0622\u0646\u062F\u0648\u0631\u0627"},flag:"https://restcountries.eu/data/and.svg",regionalBlocs:[],cioc:"AND"},{name:"Angola",topLevelDomain:[".ao"],alpha2Code:"AO",alpha3Code:"AGO",callingCodes:["244"],capital:"Luanda",altSpellings:["AO","Rep\xFAblica de Angola","\u0281\u025Bpublika de an'\u0261\u0254la"],region:"Africa",subregion:"Middle Africa",population:25868e3,latlng:[-12.5,18.5],demonym:"Angolan",area:1246700,gini:58.6,timezones:["UTC+01:00"],borders:["COG","COD","ZMB","NAM"],nativeName:"Angola",numericCode:"024",currencies:[{code:"AOA",name:"Angolan kwanza",symbol:"Kz"}],languages:[{iso639_1:"pt",iso639_2:"por",name:"Portuguese",nativeName:"Portugu\xEAs"}],translations:{de:"Angola",es:"Angola",fr:"Angola",ja:"\u30A2\u30F3\u30B4\u30E9",it:"Angola",br:"Angola",pt:"Angola",nl:"Angola",hr:"Angola",fa:"\u0622\u0646\u06AF\u0648\u0644\u0627"},flag:"https://restcountries.eu/data/ago.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"ANG"},{name:"Anguilla",topLevelDomain:[".ai"],alpha2Code:"AI",alpha3Code:"AIA",callingCodes:["1264"],capital:"The Valley",altSpellings:["AI"],region:"Americas",subregion:"Caribbean",population:13452,latlng:[18.25,-63.16666666],demonym:"Anguillian",area:91,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Anguilla",numericCode:"660",currencies:[{code:"XCD",name:"East Caribbean dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Anguilla",es:"Anguilla",fr:"Anguilla",ja:"\u30A2\u30F3\u30AE\u30E9",it:"Anguilla",br:"Anguila",pt:"Anguila",nl:"Anguilla",hr:"Angvila",fa:"\u0622\u0646\u06AF\u0648\u06CC\u0644\u0627"},flag:"https://restcountries.eu/data/aia.svg",regionalBlocs:[],cioc:""},{name:"Antarctica",topLevelDomain:[".aq"],alpha2Code:"AQ",alpha3Code:"ATA",callingCodes:["672"],capital:"",altSpellings:[],region:"Polar",subregion:"",population:1e3,latlng:[-74.65,4.48],demonym:"",area:14e6,gini:null,timezones:["UTC-03:00","UTC+03:00","UTC+05:00","UTC+06:00","UTC+07:00","UTC+08:00","UTC+10:00","UTC+12:00"],borders:[],nativeName:"Antarctica",numericCode:"010",currencies:[{code:"AUD",name:"Australian dollar",symbol:"$"},{code:"GBP",name:"British pound",symbol:"\xA3"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"ru",iso639_2:"rus",name:"Russian",nativeName:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"}],translations:{de:"Antarktika",es:"Ant\xE1rtida",fr:"Antarctique",ja:"\u5357\u6975\u5927\u9678",it:"Antartide",br:"Ant\xE1rtida",pt:"Ant\xE1rctida",nl:"Antarctica",hr:"Antarktika",fa:"\u062C\u0646\u0648\u0628\u06AF\u0627\u0646"},flag:"https://restcountries.eu/data/ata.svg",regionalBlocs:[],cioc:""},{name:"Antigua and Barbuda",topLevelDomain:[".ag"],alpha2Code:"AG",alpha3Code:"ATG",callingCodes:["1268"],capital:"Saint John's",altSpellings:["AG"],region:"Americas",subregion:"Caribbean",population:86295,latlng:[17.05,-61.8],demonym:"Antiguan, Barbudan",area:442,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Antigua and Barbuda",numericCode:"028",currencies:[{code:"XCD",name:"East Caribbean dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Antigua und Barbuda",es:"Antigua y Barbuda",fr:"Antigua-et-Barbuda",ja:"\u30A2\u30F3\u30C6\u30A3\u30B0\u30A2\u30FB\u30D0\u30FC\u30D6\u30FC\u30C0",it:"Antigua e Barbuda",br:"Ant\xEDgua e Barbuda",pt:"Ant\xEDgua e Barbuda",nl:"Antigua en Barbuda",hr:"Antigva i Barbuda",fa:"\u0622\u0646\u062A\u06CC\u06AF\u0648\u0627 \u0648 \u0628\u0627\u0631\u0628\u0648\u062F\u0627"},flag:"https://restcountries.eu/data/atg.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]}],cioc:"ANT"},{name:"Argentina",topLevelDomain:[".ar"],alpha2Code:"AR",alpha3Code:"ARG",callingCodes:["54"],capital:"Buenos Aires",altSpellings:["AR","Argentine Republic","Rep\xFAblica Argentina"],region:"Americas",subregion:"South America",population:43590400,latlng:[-34,-64],demonym:"Argentinean",area:2780400,gini:44.5,timezones:["UTC-03:00"],borders:["BOL","BRA","CHL","PRY","URY"],nativeName:"Argentina",numericCode:"032",currencies:[{code:"ARS",name:"Argentine peso",symbol:"$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"},{iso639_1:"gn",iso639_2:"grn",name:"Guaran\xED",nativeName:"Ava\xF1e'\u1EBD"}],translations:{de:"Argentinien",es:"Argentina",fr:"Argentine",ja:"\u30A2\u30EB\u30BC\u30F3\u30C1\u30F3",it:"Argentina",br:"Argentina",pt:"Argentina",nl:"Argentini\xEB",hr:"Argentina",fa:"\u0622\u0631\u0698\u0627\u0646\u062A\u06CC\u0646"},flag:"https://restcountries.eu/data/arg.svg",regionalBlocs:[{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"ARG"},{name:"Armenia",topLevelDomain:[".am"],alpha2Code:"AM",alpha3Code:"ARM",callingCodes:["374"],capital:"Yerevan",altSpellings:["AM","Hayastan","Republic of Armenia","\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576\u056B \u0540\u0561\u0576\u0580\u0561\u057A\u0565\u057F\u0578\u0582\u0569\u0575\u0578\u0582\u0576"],region:"Asia",subregion:"Western Asia",population:2994400,latlng:[40,45],demonym:"Armenian",area:29743,gini:30.9,timezones:["UTC+04:00"],borders:["AZE","GEO","IRN","TUR"],nativeName:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",numericCode:"051",currencies:[{code:"AMD",name:"Armenian dram",symbol:null}],languages:[{iso639_1:"hy",iso639_2:"hye",name:"Armenian",nativeName:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576"},{iso639_1:"ru",iso639_2:"rus",name:"Russian",nativeName:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"}],translations:{de:"Armenien",es:"Armenia",fr:"Arm\xE9nie",ja:"\u30A2\u30EB\u30E1\u30CB\u30A2",it:"Armenia",br:"Arm\xEAnia",pt:"Arm\xE9nia",nl:"Armeni\xEB",hr:"Armenija",fa:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/arm.svg",regionalBlocs:[{acronym:"EEU",name:"Eurasian Economic Union",otherAcronyms:["EAEU"],otherNames:[]}],cioc:"ARM"},{name:"Aruba",topLevelDomain:[".aw"],alpha2Code:"AW",alpha3Code:"ABW",callingCodes:["297"],capital:"Oranjestad",altSpellings:["AW"],region:"Americas",subregion:"Caribbean",population:107394,latlng:[12.5,-69.96666666],demonym:"Aruban",area:180,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Aruba",numericCode:"533",currencies:[{code:"AWG",name:"Aruban florin",symbol:"\u0192"}],languages:[{iso639_1:"nl",iso639_2:"nld",name:"Dutch",nativeName:"Nederlands"},{iso639_1:"pa",iso639_2:"pan",name:"(Eastern) Punjabi",nativeName:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"}],translations:{de:"Aruba",es:"Aruba",fr:"Aruba",ja:"\u30A2\u30EB\u30D0",it:"Aruba",br:"Aruba",pt:"Aruba",nl:"Aruba",hr:"Aruba",fa:"\u0622\u0631\u0648\u0628\u0627"},flag:"https://restcountries.eu/data/abw.svg",regionalBlocs:[],cioc:"ARU"},{name:"Australia",topLevelDomain:[".au"],alpha2Code:"AU",alpha3Code:"AUS",callingCodes:["61"],capital:"Canberra",altSpellings:["AU"],region:"Oceania",subregion:"Australia and New Zealand",population:24117360,latlng:[-27,133],demonym:"Australian",area:7692024,gini:30.5,timezones:["UTC+05:00","UTC+06:30","UTC+07:00","UTC+08:00","UTC+09:30","UTC+10:00","UTC+10:30","UTC+11:30"],borders:[],nativeName:"Australia",numericCode:"036",currencies:[{code:"AUD",name:"Australian dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Australien",es:"Australia",fr:"Australie",ja:"\u30AA\u30FC\u30B9\u30C8\u30E9\u30EA\u30A2",it:"Australia",br:"Austr\xE1lia",pt:"Austr\xE1lia",nl:"Australi\xEB",hr:"Australija",fa:"\u0627\u0633\u062A\u0631\u0627\u0644\u06CC\u0627"},flag:"https://restcountries.eu/data/aus.svg",regionalBlocs:[],cioc:"AUS"},{name:"Austria",topLevelDomain:[".at"],alpha2Code:"AT",alpha3Code:"AUT",callingCodes:["43"],capital:"Vienna",altSpellings:["AT","\xD6sterreich","Osterreich","Oesterreich"],region:"Europe",subregion:"Western Europe",population:8725931,latlng:[47.33333333,13.33333333],demonym:"Austrian",area:83871,gini:26,timezones:["UTC+01:00"],borders:["CZE","DEU","HUN","ITA","LIE","SVK","SVN","CHE"],nativeName:"\xD6sterreich",numericCode:"040",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"de",iso639_2:"deu",name:"German",nativeName:"Deutsch"}],translations:{de:"\xD6sterreich",es:"Austria",fr:"Autriche",ja:"\u30AA\u30FC\u30B9\u30C8\u30EA\u30A2",it:"Austria",br:"\xE1ustria",pt:"\xE1ustria",nl:"Oostenrijk",hr:"Austrija",fa:"\u0627\u062A\u0631\u06CC\u0634"},flag:"https://restcountries.eu/data/aut.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"AUT"},{name:"Azerbaijan",topLevelDomain:[".az"],alpha2Code:"AZ",alpha3Code:"AZE",callingCodes:["994"],capital:"Baku",altSpellings:["AZ","Republic of Azerbaijan","Az\u0259rbaycan Respublikas\u0131"],region:"Asia",subregion:"Western Asia",population:9730500,latlng:[40.5,47.5],demonym:"Azerbaijani",area:86600,gini:33.7,timezones:["UTC+04:00"],borders:["ARM","GEO","IRN","RUS","TUR"],nativeName:"Az\u0259rbaycan",numericCode:"031",currencies:[{code:"AZN",name:"Azerbaijani manat",symbol:null}],languages:[{iso639_1:"az",iso639_2:"aze",name:"Azerbaijani",nativeName:"az\u0259rbaycan dili"}],translations:{de:"Aserbaidschan",es:"Azerbaiy\xE1n",fr:"Azerba\xEFdjan",ja:"\u30A2\u30BC\u30EB\u30D0\u30A4\u30B8\u30E3\u30F3",it:"Azerbaijan",br:"Azerbaij\xE3o",pt:"Azerbaij\xE3o",nl:"Azerbeidzjan",hr:"Azerbajd\u017Ean",fa:"\u0622\u0630\u0631\u0628\u0627\u06CC\u062C\u0627\u0646"},flag:"https://restcountries.eu/data/aze.svg",regionalBlocs:[],cioc:"AZE"},{name:"Bahamas",topLevelDomain:[".bs"],alpha2Code:"BS",alpha3Code:"BHS",callingCodes:["1242"],capital:"Nassau",altSpellings:["BS","Commonwealth of the Bahamas"],region:"Americas",subregion:"Caribbean",population:378040,latlng:[24.25,-76],demonym:"Bahamian",area:13943,gini:null,timezones:["UTC-05:00"],borders:[],nativeName:"Bahamas",numericCode:"044",currencies:[{code:"BSD",name:"Bahamian dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Bahamas",es:"Bahamas",fr:"Bahamas",ja:"\u30D0\u30CF\u30DE",it:"Bahamas",br:"Bahamas",pt:"Baamas",nl:"Bahama\u2019s",hr:"Bahami",fa:"\u0628\u0627\u0647\u0627\u0645\u0627"},flag:"https://restcountries.eu/data/bhs.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]}],cioc:"BAH"},{name:"Bahrain",topLevelDomain:[".bh"],alpha2Code:"BH",alpha3Code:"BHR",callingCodes:["973"],capital:"Manama",altSpellings:["BH","Kingdom of Bahrain","Mamlakat al-Ba\u1E25rayn"],region:"Asia",subregion:"Western Asia",population:1404900,latlng:[26,50.55],demonym:"Bahraini",area:765,gini:null,timezones:["UTC+03:00"],borders:[],nativeName:"\u200F\u0627\u0644\u0628\u062D\u0631\u064A\u0646",numericCode:"048",currencies:[{code:"BHD",name:"Bahraini dinar",symbol:".\u062F.\u0628"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Bahrain",es:"Bahrein",fr:"Bahre\xEFn",ja:"\u30D0\u30FC\u30EC\u30FC\u30F3",it:"Bahrein",br:"Bahrein",pt:"Bar\xE9m",nl:"Bahrein",hr:"Bahrein",fa:"\u0628\u062D\u0631\u06CC\u0646"},flag:"https://restcountries.eu/data/bhr.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"BRN"},{name:"Bangladesh",topLevelDomain:[".bd"],alpha2Code:"BD",alpha3Code:"BGD",callingCodes:["880"],capital:"Dhaka",altSpellings:["BD","People's Republic of Bangladesh","G\xF4n\xF4pr\xF4jat\xF4ntri Bangladesh"],region:"Asia",subregion:"Southern Asia",population:161006790,latlng:[24,90],demonym:"Bangladeshi",area:147570,gini:32.1,timezones:["UTC+06:00"],borders:["MMR","IND"],nativeName:"Bangladesh",numericCode:"050",currencies:[{code:"BDT",name:"Bangladeshi taka",symbol:"\u09F3"}],languages:[{iso639_1:"bn",iso639_2:"ben",name:"Bengali",nativeName:"\u09AC\u09BE\u0982\u09B2\u09BE"}],translations:{de:"Bangladesch",es:"Bangladesh",fr:"Bangladesh",ja:"\u30D0\u30F3\u30B0\u30E9\u30C7\u30B7\u30E5",it:"Bangladesh",br:"Bangladesh",pt:"Bangladeche",nl:"Bangladesh",hr:"Banglade\u0161",fa:"\u0628\u0646\u06AF\u0644\u0627\u062F\u0634"},flag:"https://restcountries.eu/data/bgd.svg",regionalBlocs:[{acronym:"SAARC",name:"South Asian Association for Regional Cooperation",otherAcronyms:[],otherNames:[]}],cioc:"BAN"},{name:"Barbados",topLevelDomain:[".bb"],alpha2Code:"BB",alpha3Code:"BRB",callingCodes:["1246"],capital:"Bridgetown",altSpellings:["BB"],region:"Americas",subregion:"Caribbean",population:285e3,latlng:[13.16666666,-59.53333333],demonym:"Barbadian",area:430,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Barbados",numericCode:"052",currencies:[{code:"BBD",name:"Barbadian dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Barbados",es:"Barbados",fr:"Barbade",ja:"\u30D0\u30EB\u30D0\u30C9\u30B9",it:"Barbados",br:"Barbados",pt:"Barbados",nl:"Barbados",hr:"Barbados",fa:"\u0628\u0627\u0631\u0628\u0627\u062F\u0648\u0633"},flag:"https://restcountries.eu/data/brb.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]}],cioc:"BAR"},{name:"Belarus",topLevelDomain:[".by"],alpha2Code:"BY",alpha3Code:"BLR",callingCodes:["375"],capital:"Minsk",altSpellings:["BY","Bielaru\u015B","Republic of Belarus","\u0411\u0435\u043B\u043E\u0440\u0443\u0441\u0441\u0438\u044F","\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C","Belorussiya","Respublika Belarus\u2019"],region:"Europe",subregion:"Eastern Europe",population:9498700,latlng:[53,28],demonym:"Belarusian",area:207600,gini:26.5,timezones:["UTC+03:00"],borders:["LVA","LTU","POL","RUS","UKR"],nativeName:"\u0411\u0435\u043B\u0430\u0440\u0443\u0301\u0441\u044C",numericCode:"112",currencies:[{code:"BYN",name:"New Belarusian ruble",symbol:"Br"},{code:"BYR",name:"Old Belarusian ruble",symbol:"Br"}],languages:[{iso639_1:"be",iso639_2:"bel",name:"Belarusian",nativeName:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F \u043C\u043E\u0432\u0430"},{iso639_1:"ru",iso639_2:"rus",name:"Russian",nativeName:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"}],translations:{de:"Wei\xDFrussland",es:"Bielorrusia",fr:"Bi\xE9lorussie",ja:"\u30D9\u30E9\u30EB\u30FC\u30B7",it:"Bielorussia",br:"Bielorr\xFAssia",pt:"Bielorr\xFAssia",nl:"Wit-Rusland",hr:"Bjelorusija",fa:"\u0628\u0644\u0627\u0631\u0648\u0633"},flag:"https://restcountries.eu/data/blr.svg",regionalBlocs:[{acronym:"EEU",name:"Eurasian Economic Union",otherAcronyms:["EAEU"],otherNames:[]}],cioc:"BLR"},{name:"Belgium",topLevelDomain:[".be"],alpha2Code:"BE",alpha3Code:"BEL",callingCodes:["32"],capital:"Brussels",altSpellings:["BE","Belgi\xEB","Belgie","Belgien","Belgique","Kingdom of Belgium","Koninkrijk Belgi\xEB","Royaume de Belgique","K\xF6nigreich Belgien"],region:"Europe",subregion:"Western Europe",population:11319511,latlng:[50.83333333,4],demonym:"Belgian",area:30528,gini:33,timezones:["UTC+01:00"],borders:["FRA","DEU","LUX","NLD"],nativeName:"Belgi\xEB",numericCode:"056",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"nl",iso639_2:"nld",name:"Dutch",nativeName:"Nederlands"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"de",iso639_2:"deu",name:"German",nativeName:"Deutsch"}],translations:{de:"Belgien",es:"B\xE9lgica",fr:"Belgique",ja:"\u30D9\u30EB\u30AE\u30FC",it:"Belgio",br:"B\xE9lgica",pt:"B\xE9lgica",nl:"Belgi\xEB",hr:"Belgija",fa:"\u0628\u0644\u0698\u06CC\u06A9"},flag:"https://restcountries.eu/data/bel.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"BEL"},{name:"Belize",topLevelDomain:[".bz"],alpha2Code:"BZ",alpha3Code:"BLZ",callingCodes:["501"],capital:"Belmopan",altSpellings:["BZ"],region:"Americas",subregion:"Central America",population:370300,latlng:[17.25,-88.75],demonym:"Belizean",area:22966,gini:53.1,timezones:["UTC-06:00"],borders:["GTM","MEX"],nativeName:"Belize",numericCode:"084",currencies:[{code:"BZD",name:"Belize dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Belize",es:"Belice",fr:"Belize",ja:"\u30D9\u30EA\u30FC\u30BA",it:"Belize",br:"Belize",pt:"Belize",nl:"Belize",hr:"Belize",fa:"\u0628\u0644\u06CC\u0632"},flag:"https://restcountries.eu/data/blz.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]},{acronym:"CAIS",name:"Central American Integration System",otherAcronyms:["SICA"],otherNames:["Sistema de la Integraci\xF3n Centroamericana,"]}],cioc:"BIZ"},{name:"Benin",topLevelDomain:[".bj"],alpha2Code:"BJ",alpha3Code:"BEN",callingCodes:["229"],capital:"Porto-Novo",altSpellings:["BJ","Republic of Benin","R\xE9publique du B\xE9nin"],region:"Africa",subregion:"Western Africa",population:10653654,latlng:[9.5,2.25],demonym:"Beninese",area:112622,gini:38.6,timezones:["UTC+01:00"],borders:["BFA","NER","NGA","TGO"],nativeName:"B\xE9nin",numericCode:"204",currencies:[{code:"XOF",name:"West African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Benin",es:"Ben\xEDn",fr:"B\xE9nin",ja:"\u30D9\u30CA\u30F3",it:"Benin",br:"Benin",pt:"Benim",nl:"Benin",hr:"Benin",fa:"\u0628\u0646\u06CC\u0646"},flag:"https://restcountries.eu/data/ben.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"BEN"},{name:"Bermuda",topLevelDomain:[".bm"],alpha2Code:"BM",alpha3Code:"BMU",callingCodes:["1441"],capital:"Hamilton",altSpellings:["BM","The Islands of Bermuda","The Bermudas","Somers Isles"],region:"Americas",subregion:"Northern America",population:61954,latlng:[32.33333333,-64.75],demonym:"Bermudian",area:54,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Bermuda",numericCode:"060",currencies:[{code:"BMD",name:"Bermudian dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Bermuda",es:"Bermudas",fr:"Bermudes",ja:"\u30D0\u30DF\u30E5\u30FC\u30C0",it:"Bermuda",br:"Bermudas",pt:"Bermudas",nl:"Bermuda",hr:"Bermudi",fa:"\u0628\u0631\u0645\u0648\u062F\u0627"},flag:"https://restcountries.eu/data/bmu.svg",regionalBlocs:[],cioc:"BER"},{name:"Bhutan",topLevelDomain:[".bt"],alpha2Code:"BT",alpha3Code:"BTN",callingCodes:["975"],capital:"Thimphu",altSpellings:["BT","Kingdom of Bhutan"],region:"Asia",subregion:"Southern Asia",population:775620,latlng:[27.5,90.5],demonym:"Bhutanese",area:38394,gini:38.1,timezones:["UTC+06:00"],borders:["CHN","IND"],nativeName:"\u02BCbrug-yul",numericCode:"064",currencies:[{code:"BTN",name:"Bhutanese ngultrum",symbol:"Nu."},{code:"INR",name:"Indian rupee",symbol:"\u20B9"}],languages:[{iso639_1:"dz",iso639_2:"dzo",name:"Dzongkha",nativeName:"\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41"}],translations:{de:"Bhutan",es:"But\xE1n",fr:"Bhoutan",ja:"\u30D6\u30FC\u30BF\u30F3",it:"Bhutan",br:"But\xE3o",pt:"But\xE3o",nl:"Bhutan",hr:"Butan",fa:"\u0628\u0648\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/btn.svg",regionalBlocs:[{acronym:"SAARC",name:"South Asian Association for Regional Cooperation",otherAcronyms:[],otherNames:[]}],cioc:"BHU"},{name:"Bolivia (Plurinational State of)",topLevelDomain:[".bo"],alpha2Code:"BO",alpha3Code:"BOL",callingCodes:["591"],capital:"Sucre",altSpellings:["BO","Buliwya","Wuliwya","Plurinational State of Bolivia","Estado Plurinacional de Bolivia","Buliwya Mamallaqta","Wuliwya Suyu","Tet\xE3 Vol\xEDvia"],region:"Americas",subregion:"South America",population:10985059,latlng:[-17,-65],demonym:"Bolivian",area:1098581,gini:56.3,timezones:["UTC-04:00"],borders:["ARG","BRA","CHL","PRY","PER"],nativeName:"Bolivia",numericCode:"068",currencies:[{code:"BOB",name:"Bolivian boliviano",symbol:"Bs."}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"},{iso639_1:"ay",iso639_2:"aym",name:"Aymara",nativeName:"aymar aru"},{iso639_1:"qu",iso639_2:"que",name:"Quechua",nativeName:"Runa Simi"}],translations:{de:"Bolivien",es:"Bolivia",fr:"Bolivie",ja:"\u30DC\u30EA\u30D3\u30A2\u591A\u6C11\u65CF\u56FD",it:"Bolivia",br:"Bol\xEDvia",pt:"Bol\xEDvia",nl:"Bolivia",hr:"Bolivija",fa:"\u0628\u0648\u0644\u06CC\u0648\u06CC"},flag:"https://restcountries.eu/data/bol.svg",regionalBlocs:[{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"BOL"},{name:"Bonaire, Sint Eustatius and Saba",topLevelDomain:[".an",".nl"],alpha2Code:"BQ",alpha3Code:"BES",callingCodes:["5997"],capital:"Kralendijk",altSpellings:["BQ","Boneiru"],region:"Americas",subregion:"Caribbean",population:17408,latlng:[12.15,-68.266667],demonym:"Dutch",area:294,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Bonaire",numericCode:"535",currencies:[{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"nl",iso639_2:"nld",name:"Dutch",nativeName:"Nederlands"}],translations:{de:"Bonaire, Sint Eustatius und Saba",es:null,fr:"Bonaire, Saint-Eustache et Saba",ja:null,it:"Bonaire, Saint-Eustache e Saba",br:"Bonaire",pt:"Bonaire",nl:null,hr:null,fa:"\u0628\u0648\u0646\u06CC\u0631"},flag:"https://restcountries.eu/data/bes.svg",regionalBlocs:[],cioc:null},{name:"Bosnia and Herzegovina",topLevelDomain:[".ba"],alpha2Code:"BA",alpha3Code:"BIH",callingCodes:["387"],capital:"Sarajevo",altSpellings:["BA","Bosnia-Herzegovina","\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430"],region:"Europe",subregion:"Southern Europe",population:3531159,latlng:[44,18],demonym:"Bosnian, Herzegovinian",area:51209,gini:36.2,timezones:["UTC+01:00"],borders:["HRV","MNE","SRB"],nativeName:"Bosna i Hercegovina",numericCode:"070",currencies:[{code:"BAM",name:"Bosnia and Herzegovina convertible mark",symbol:null}],languages:[{iso639_1:"bs",iso639_2:"bos",name:"Bosnian",nativeName:"bosanski jezik"},{iso639_1:"hr",iso639_2:"hrv",name:"Croatian",nativeName:"hrvatski jezik"},{iso639_1:"sr",iso639_2:"srp",name:"Serbian",nativeName:"\u0441\u0440\u043F\u0441\u043A\u0438 \u0458\u0435\u0437\u0438\u043A"}],translations:{de:"Bosnien und Herzegowina",es:"Bosnia y Herzegovina",fr:"Bosnie-Herz\xE9govine",ja:"\u30DC\u30B9\u30CB\u30A2\u30FB\u30D8\u30EB\u30C4\u30A7\u30B4\u30D3\u30CA",it:"Bosnia ed Erzegovina",br:"B\xF3snia e Herzegovina",pt:"B\xF3snia e Herzegovina",nl:"Bosni\xEB en Herzegovina",hr:"Bosna i Hercegovina",fa:"\u0628\u0648\u0633\u0646\u06CC \u0648 \u0647\u0631\u0632\u06AF\u0648\u06CC\u0646"},flag:"https://restcountries.eu/data/bih.svg",regionalBlocs:[{acronym:"CEFTA",name:"Central European Free Trade Agreement",otherAcronyms:[],otherNames:[]}],cioc:"BIH"},{name:"Botswana",topLevelDomain:[".bw"],alpha2Code:"BW",alpha3Code:"BWA",callingCodes:["267"],capital:"Gaborone",altSpellings:["BW","Republic of Botswana","Lefatshe la Botswana"],region:"Africa",subregion:"Southern Africa",population:2141206,latlng:[-22,24],demonym:"Motswana",area:582e3,gini:61,timezones:["UTC+02:00"],borders:["NAM","ZAF","ZMB","ZWE"],nativeName:"Botswana",numericCode:"072",currencies:[{code:"BWP",name:"Botswana pula",symbol:"P"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"tn",iso639_2:"tsn",name:"Tswana",nativeName:"Setswana"}],translations:{de:"Botswana",es:"Botswana",fr:"Botswana",ja:"\u30DC\u30C4\u30EF\u30CA",it:"Botswana",br:"Botsuana",pt:"Botsuana",nl:"Botswana",hr:"Bocvana",fa:"\u0628\u0648\u062A\u0633\u0648\u0627\u0646\u0627"},flag:"https://restcountries.eu/data/bwa.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"BOT"},{name:"Bouvet Island",topLevelDomain:[".bv"],alpha2Code:"BV",alpha3Code:"BVT",callingCodes:[""],capital:"",altSpellings:["BV","Bouvet\xF8ya","Bouvet-\xF8ya"],region:"",subregion:"",population:0,latlng:[-54.43333333,3.4],demonym:"",area:49,gini:null,timezones:["UTC+01:00"],borders:[],nativeName:"Bouvet\xF8ya",numericCode:"074",currencies:[{code:"NOK",name:"Norwegian krone",symbol:"kr"}],languages:[{iso639_1:"no",iso639_2:"nor",name:"Norwegian",nativeName:"Norsk"},{iso639_1:"nb",iso639_2:"nob",name:"Norwegian Bokm\xE5l",nativeName:"Norsk bokm\xE5l"},{iso639_1:"nn",iso639_2:"nno",name:"Norwegian Nynorsk",nativeName:"Norsk nynorsk"}],translations:{de:"Bouvetinsel",es:"Isla Bouvet",fr:"\xCEle Bouvet",ja:"\u30D6\u30FC\u30D9\u5CF6",it:"Isola Bouvet",br:"Ilha Bouvet",pt:"Ilha Bouvet",nl:"Bouveteiland",hr:"Otok Bouvet",fa:"\u062C\u0632\u06CC\u0631\u0647 \u0628\u0648\u0648\u0647"},flag:"https://restcountries.eu/data/bvt.svg",regionalBlocs:[],cioc:""},{name:"Brazil",topLevelDomain:[".br"],alpha2Code:"BR",alpha3Code:"BRA",callingCodes:["55"],capital:"Bras\xEDlia",altSpellings:["BR","Brasil","Federative Republic of Brazil","Rep\xFAblica Federativa do Brasil"],region:"Americas",subregion:"South America",population:206135893,latlng:[-10,-55],demonym:"Brazilian",area:8515767,gini:54.7,timezones:["UTC-05:00","UTC-04:00","UTC-03:00","UTC-02:00"],borders:["ARG","BOL","COL","GUF","GUY","PRY","PER","SUR","URY","VEN"],nativeName:"Brasil",numericCode:"076",currencies:[{code:"BRL",name:"Brazilian real",symbol:"R$"}],languages:[{iso639_1:"pt",iso639_2:"por",name:"Portuguese",nativeName:"Portugu\xEAs"}],translations:{de:"Brasilien",es:"Brasil",fr:"Br\xE9sil",ja:"\u30D6\u30E9\u30B8\u30EB",it:"Brasile",br:"Brasil",pt:"Brasil",nl:"Brazili\xEB",hr:"Brazil",fa:"\u0628\u0631\u0632\u06CC\u0644"},flag:"https://restcountries.eu/data/bra.svg",regionalBlocs:[{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"BRA"},{name:"British Indian Ocean Territory",topLevelDomain:[".io"],alpha2Code:"IO",alpha3Code:"IOT",callingCodes:["246"],capital:"Diego Garcia",altSpellings:["IO"],region:"Africa",subregion:"Eastern Africa",population:3e3,latlng:[-6,71.5],demonym:"Indian",area:60,gini:null,timezones:["UTC+06:00"],borders:[],nativeName:"British Indian Ocean Territory",numericCode:"086",currencies:[{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Britisches Territorium im Indischen Ozean",es:"Territorio Brit\xE1nico del Oc\xE9ano \xCDndico",fr:"Territoire britannique de l'oc\xE9an Indien",ja:"\u30A4\u30AE\u30EA\u30B9\u9818\u30A4\u30F3\u30C9\u6D0B\u5730\u57DF",it:"Territorio britannico dell'oceano indiano",br:"Territ\xF3rio Brit\xE2nico do Oceano \xED\xCDdico",pt:"Territ\xF3rio Brit\xE2nico do Oceano \xCDndico",nl:"Britse Gebieden in de Indische Oceaan",hr:"Britanski Indijskooceanski teritorij",fa:"\u0642\u0644\u0645\u0631\u0648 \u0628\u0631\u06CC\u062A\u0627\u0646\u06CC\u0627 \u062F\u0631 \u0627\u0642\u06CC\u0627\u0646\u0648\u0633 \u0647\u0646\u062F"},flag:"https://restcountries.eu/data/iot.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:""},{name:"United States Minor Outlying Islands",topLevelDomain:[".us"],alpha2Code:"UM",alpha3Code:"UMI",callingCodes:[""],capital:"",altSpellings:["UM"],region:"Americas",subregion:"Northern America",population:300,latlng:[],demonym:"American",area:null,gini:null,timezones:["UTC-11:00","UTC-10:00","UTC+12:00"],borders:[],nativeName:"United States Minor Outlying Islands",numericCode:"581",currencies:[{code:"USD",name:"United States Dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Kleinere Inselbesitzungen der Vereinigten Staaten",es:"Islas Ultramarinas Menores de Estados Unidos",fr:"\xCEles mineures \xE9loign\xE9es des \xC9tats-Unis",ja:"\u5408\u8846\u56FD\u9818\u6709\u5C0F\u96E2\u5CF6",it:"Isole minori esterne degli Stati Uniti d'America",br:"Ilhas Menores Distantes dos Estados Unidos",pt:"Ilhas Menores Distantes dos Estados Unidos",nl:"Kleine afgelegen eilanden van de Verenigde Staten",hr:"Mali udaljeni otoci SAD-a",fa:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u0648\u0686\u06A9 \u062D\u0627\u0634\u06CC\u0647\u200C\u0627\u06CC \u0627\u06CC\u0627\u0644\u0627\u062A \u0645\u062A\u062D\u062F\u0647 \u0622\u0645\u0631\u06CC\u06A9\u0627"},flag:"https://restcountries.eu/data/umi.svg",regionalBlocs:[],cioc:""},{name:"Virgin Islands (British)",topLevelDomain:[".vg"],alpha2Code:"VG",alpha3Code:"VGB",callingCodes:["1284"],capital:"Road Town",altSpellings:["VG"],region:"Americas",subregion:"Caribbean",population:28514,latlng:[18.431383,-64.62305],demonym:"Virgin Islander",area:151,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"British Virgin Islands",numericCode:"092",currencies:[{code:null,name:"[D]",symbol:"$"},{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Britische Jungferninseln",es:"Islas V\xEDrgenes del Reino Unido",fr:"\xCEles Vierges britanniques",ja:"\u30A4\u30AE\u30EA\u30B9\u9818\u30F4\u30A1\u30FC\u30B8\u30F3\u8AF8\u5CF6",it:"Isole Vergini Britanniche",br:"Ilhas Virgens Brit\xE2nicas",pt:"Ilhas Virgens Brit\xE2nicas",nl:"Britse Maagdeneilanden",hr:"Britanski Djevi\u010Danski Otoci",fa:"\u062C\u0632\u0627\u06CC\u0631 \u0648\u06CC\u0631\u062C\u06CC\u0646 \u0628\u0631\u06CC\u062A\u0627\u0646\u06CC\u0627"},flag:"https://restcountries.eu/data/vgb.svg",regionalBlocs:[],cioc:"IVB"},{name:"Virgin Islands (U.S.)",topLevelDomain:[".vi"],alpha2Code:"VI",alpha3Code:"VIR",callingCodes:["1 340"],capital:"Charlotte Amalie",altSpellings:["VI","USVI","American Virgin Islands","U.S. Virgin Islands"],region:"Americas",subregion:"Caribbean",population:114743,latlng:[18.34,-64.93],demonym:"Virgin Islander",area:346.36,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Virgin Islands of the United States",numericCode:"850",currencies:[{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Amerikanische Jungferninseln",es:"Islas V\xEDrgenes de los Estados Unidos",fr:"\xCEles Vierges des \xC9tats-Unis",ja:"\u30A2\u30E1\u30EA\u30AB\u9818\u30F4\u30A1\u30FC\u30B8\u30F3\u8AF8\u5CF6",it:"Isole Vergini americane",br:"Ilhas Virgens Americanas",pt:"Ilhas Virgens Americanas",nl:"Verenigde Staten Maagdeneilanden",hr:null,fa:"\u062C\u0632\u0627\u06CC\u0631 \u0648\u06CC\u0631\u062C\u06CC\u0646 \u0622\u0645\u0631\u06CC\u06A9\u0627"},flag:"https://restcountries.eu/data/vir.svg",regionalBlocs:[],cioc:"ISV"},{name:"Brunei Darussalam",topLevelDomain:[".bn"],alpha2Code:"BN",alpha3Code:"BRN",callingCodes:["673"],capital:"Bandar Seri Begawan",altSpellings:["BN","Nation of Brunei"," the Abode of Peace"],region:"Asia",subregion:"South-Eastern Asia",population:411900,latlng:[4.5,114.66666666],demonym:"Bruneian",area:5765,gini:null,timezones:["UTC+08:00"],borders:["MYS"],nativeName:"Negara Brunei Darussalam",numericCode:"096",currencies:[{code:"BND",name:"Brunei dollar",symbol:"$"},{code:"SGD",name:"Singapore dollar",symbol:"$"}],languages:[{iso639_1:"ms",iso639_2:"msa",name:"Malay",nativeName:"bahasa Melayu"}],translations:{de:"Brunei",es:"Brunei",fr:"Brunei",ja:"\u30D6\u30EB\u30CD\u30A4\u30FB\u30C0\u30EB\u30B5\u30E9\u30FC\u30E0",it:"Brunei",br:"Brunei",pt:"Brunei",nl:"Brunei",hr:"Brunej",fa:"\u0628\u0631\u0648\u0646\u0626\u06CC"},flag:"https://restcountries.eu/data/brn.svg",regionalBlocs:[{acronym:"ASEAN",name:"Association of Southeast Asian Nations",otherAcronyms:[],otherNames:[]}],cioc:"BRU"},{name:"Bulgaria",topLevelDomain:[".bg"],alpha2Code:"BG",alpha3Code:"BGR",callingCodes:["359"],capital:"Sofia",altSpellings:["BG","Republic of Bulgaria","\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F"],region:"Europe",subregion:"Eastern Europe",population:7153784,latlng:[43,25],demonym:"Bulgarian",area:110879,gini:28.2,timezones:["UTC+02:00"],borders:["GRC","MKD","ROU","SRB","TUR"],nativeName:"\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F",numericCode:"100",currencies:[{code:"BGN",name:"Bulgarian lev",symbol:"\u043B\u0432"}],languages:[{iso639_1:"bg",iso639_2:"bul",name:"Bulgarian",nativeName:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 \u0435\u0437\u0438\u043A"}],translations:{de:"Bulgarien",es:"Bulgaria",fr:"Bulgarie",ja:"\u30D6\u30EB\u30AC\u30EA\u30A2",it:"Bulgaria",br:"Bulg\xE1ria",pt:"Bulg\xE1ria",nl:"Bulgarije",hr:"Bugarska",fa:"\u0628\u0644\u063A\u0627\u0631\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/bgr.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"BUL"},{name:"Burkina Faso",topLevelDomain:[".bf"],alpha2Code:"BF",alpha3Code:"BFA",callingCodes:["226"],capital:"Ouagadougou",altSpellings:["BF"],region:"Africa",subregion:"Western Africa",population:19034397,latlng:[13,-2],demonym:"Burkinabe",area:272967,gini:39.8,timezones:["UTC"],borders:["BEN","CIV","GHA","MLI","NER","TGO"],nativeName:"Burkina Faso",numericCode:"854",currencies:[{code:"XOF",name:"West African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"ff",iso639_2:"ful",name:"Fula",nativeName:"Fulfulde"}],translations:{de:"Burkina Faso",es:"Burkina Faso",fr:"Burkina Faso",ja:"\u30D6\u30EB\u30AD\u30CA\u30D5\u30A1\u30BD",it:"Burkina Faso",br:"Burkina Faso",pt:"Burquina Faso",nl:"Burkina Faso",hr:"Burkina Faso",fa:"\u0628\u0648\u0631\u06A9\u06CC\u0646\u0627\u0641\u0627\u0633\u0648"},flag:"https://restcountries.eu/data/bfa.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"BUR"},{name:"Burundi",topLevelDomain:[".bi"],alpha2Code:"BI",alpha3Code:"BDI",callingCodes:["257"],capital:"Bujumbura",altSpellings:["BI","Republic of Burundi","Republika y'Uburundi","R\xE9publique du Burundi"],region:"Africa",subregion:"Eastern Africa",population:10114505,latlng:[-3.5,30],demonym:"Burundian",area:27834,gini:33.3,timezones:["UTC+02:00"],borders:["COD","RWA","TZA"],nativeName:"Burundi",numericCode:"108",currencies:[{code:"BIF",name:"Burundian franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"rn",iso639_2:"run",name:"Kirundi",nativeName:"Ikirundi"}],translations:{de:"Burundi",es:"Burundi",fr:"Burundi",ja:"\u30D6\u30EB\u30F3\u30B8",it:"Burundi",br:"Burundi",pt:"Bur\xFAndi",nl:"Burundi",hr:"Burundi",fa:"\u0628\u0648\u0631\u0648\u0646\u062F\u06CC"},flag:"https://restcountries.eu/data/bdi.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"BDI"},{name:"Cambodia",topLevelDomain:[".kh"],alpha2Code:"KH",alpha3Code:"KHM",callingCodes:["855"],capital:"Phnom Penh",altSpellings:["KH","Kingdom of Cambodia"],region:"Asia",subregion:"South-Eastern Asia",population:15626444,latlng:[13,105],demonym:"Cambodian",area:181035,gini:37.9,timezones:["UTC+07:00"],borders:["LAO","THA","VNM"],nativeName:"K\xE2mp\u016Dch\xE9a",numericCode:"116",currencies:[{code:"KHR",name:"Cambodian riel",symbol:"\u17DB"},{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"km",iso639_2:"khm",name:"Khmer",nativeName:"\u1781\u17D2\u1798\u17C2\u179A"}],translations:{de:"Kambodscha",es:"Camboya",fr:"Cambodge",ja:"\u30AB\u30F3\u30DC\u30B8\u30A2",it:"Cambogia",br:"Camboja",pt:"Camboja",nl:"Cambodja",hr:"Kambod\u017Ea",fa:"\u06A9\u0627\u0645\u0628\u0648\u062C"},flag:"https://restcountries.eu/data/khm.svg",regionalBlocs:[{acronym:"ASEAN",name:"Association of Southeast Asian Nations",otherAcronyms:[],otherNames:[]}],cioc:"CAM"},{name:"Cameroon",topLevelDomain:[".cm"],alpha2Code:"CM",alpha3Code:"CMR",callingCodes:["237"],capital:"Yaound\xE9",altSpellings:["CM","Republic of Cameroon","R\xE9publique du Cameroun"],region:"Africa",subregion:"Middle Africa",population:22709892,latlng:[6,12],demonym:"Cameroonian",area:475442,gini:38.9,timezones:["UTC+01:00"],borders:["CAF","TCD","COG","GNQ","GAB","NGA"],nativeName:"Cameroon",numericCode:"120",currencies:[{code:"XAF",name:"Central African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Kamerun",es:"Camer\xFAn",fr:"Cameroun",ja:"\u30AB\u30E1\u30EB\u30FC\u30F3",it:"Camerun",br:"Camar\xF5es",pt:"Camar\xF5es",nl:"Kameroen",hr:"Kamerun",fa:"\u06A9\u0627\u0645\u0631\u0648\u0646"},flag:"https://restcountries.eu/data/cmr.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"CMR"},{name:"Canada",topLevelDomain:[".ca"],alpha2Code:"CA",alpha3Code:"CAN",callingCodes:["1"],capital:"Ottawa",altSpellings:["CA"],region:"Americas",subregion:"Northern America",population:36155487,latlng:[60,-95],demonym:"Canadian",area:9984670,gini:32.6,timezones:["UTC-08:00","UTC-07:00","UTC-06:00","UTC-05:00","UTC-04:00","UTC-03:30"],borders:["USA"],nativeName:"Canada",numericCode:"124",currencies:[{code:"CAD",name:"Canadian dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Kanada",es:"Canad\xE1",fr:"Canada",ja:"\u30AB\u30CA\u30C0",it:"Canada",br:"Canad\xE1",pt:"Canad\xE1",nl:"Canada",hr:"Kanada",fa:"\u06A9\u0627\u0646\u0627\u062F\u0627"},flag:"https://restcountries.eu/data/can.svg",regionalBlocs:[{acronym:"NAFTA",name:"North American Free Trade Agreement",otherAcronyms:[],otherNames:["Tratado de Libre Comercio de Am\xE9rica del Norte","Accord de Libre-\xE9change Nord-Am\xE9ricain"]}],cioc:"CAN"},{name:"Cabo Verde",topLevelDomain:[".cv"],alpha2Code:"CV",alpha3Code:"CPV",callingCodes:["238"],capital:"Praia",altSpellings:["CV","Republic of Cabo Verde","Rep\xFAblica de Cabo Verde"],region:"Africa",subregion:"Western Africa",population:531239,latlng:[16,-24],demonym:"Cape Verdian",area:4033,gini:50.5,timezones:["UTC-01:00"],borders:[],nativeName:"Cabo Verde",numericCode:"132",currencies:[{code:"CVE",name:"Cape Verdean escudo",symbol:"Esc"}],languages:[{iso639_1:"pt",iso639_2:"por",name:"Portuguese",nativeName:"Portugu\xEAs"}],translations:{de:"Kap Verde",es:"Cabo Verde",fr:"Cap Vert",ja:"\u30AB\u30FC\u30DC\u30D9\u30EB\u30C7",it:"Capo Verde",br:"Cabo Verde",pt:"Cabo Verde",nl:"Kaapverdi\xEB",hr:"Zelenortska Republika",fa:"\u06A9\u06CC\u067E \u0648\u0631\u062F"},flag:"https://restcountries.eu/data/cpv.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"CPV"},{name:"Cayman Islands",topLevelDomain:[".ky"],alpha2Code:"KY",alpha3Code:"CYM",callingCodes:["1345"],capital:"George Town",altSpellings:["KY"],region:"Americas",subregion:"Caribbean",population:58238,latlng:[19.5,-80.5],demonym:"Caymanian",area:264,gini:null,timezones:["UTC-05:00"],borders:[],nativeName:"Cayman Islands",numericCode:"136",currencies:[{code:"KYD",name:"Cayman Islands dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Kaimaninseln",es:"Islas Caim\xE1n",fr:"\xCEles Ca\xEFmans",ja:"\u30B1\u30A4\u30DE\u30F3\u8AF8\u5CF6",it:"Isole Cayman",br:"Ilhas Cayman",pt:"Ilhas Caim\xE3o",nl:"Caymaneilanden",hr:"Kajmanski otoci",fa:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u06CC\u0645\u0646"},flag:"https://restcountries.eu/data/cym.svg",regionalBlocs:[],cioc:"CAY"},{name:"Central African Republic",topLevelDomain:[".cf"],alpha2Code:"CF",alpha3Code:"CAF",callingCodes:["236"],capital:"Bangui",altSpellings:["CF","Central African Republic","R\xE9publique centrafricaine"],region:"Africa",subregion:"Middle Africa",population:4998e3,latlng:[7,21],demonym:"Central African",area:622984,gini:56.3,timezones:["UTC+01:00"],borders:["CMR","TCD","COD","COG","SSD","SDN"],nativeName:"K\xF6d\xF6r\xF6s\xEAse t\xEE B\xEAafr\xEEka",numericCode:"140",currencies:[{code:"XAF",name:"Central African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"sg",iso639_2:"sag",name:"Sango",nativeName:"y\xE2ng\xE2 t\xEE s\xE4ng\xF6"}],translations:{de:"Zentralafrikanische Republik",es:"Rep\xFAblica Centroafricana",fr:"R\xE9publique centrafricaine",ja:"\u4E2D\u592E\u30A2\u30D5\u30EA\u30AB\u5171\u548C\u56FD",it:"Repubblica Centrafricana",br:"Rep\xFAblica Centro-Africana",pt:"Rep\xFAblica Centro-Africana",nl:"Centraal-Afrikaanse Republiek",hr:"Srednjoafri\u010Dka Republika",fa:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0622\u0641\u0631\u06CC\u0642\u0627\u06CC \u0645\u0631\u06A9\u0632\u06CC"},flag:"https://restcountries.eu/data/caf.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"CAF"},{name:"Chad",topLevelDomain:[".td"],alpha2Code:"TD",alpha3Code:"TCD",callingCodes:["235"],capital:"N'Djamena",altSpellings:["TD","Tchad","Republic of Chad","R\xE9publique du Tchad"],region:"Africa",subregion:"Middle Africa",population:14497e3,latlng:[15,19],demonym:"Chadian",area:1284e3,gini:39.8,timezones:["UTC+01:00"],borders:["CMR","CAF","LBY","NER","NGA","SSD"],nativeName:"Tchad",numericCode:"148",currencies:[{code:"XAF",name:"Central African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Tschad",es:"Chad",fr:"Tchad",ja:"\u30C1\u30E3\u30C9",it:"Ciad",br:"Chade",pt:"Chade",nl:"Tsjaad",hr:"\u010Cad",fa:"\u0686\u0627\u062F"},flag:"https://restcountries.eu/data/tcd.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"CHA"},{name:"Chile",topLevelDomain:[".cl"],alpha2Code:"CL",alpha3Code:"CHL",callingCodes:["56"],capital:"Santiago",altSpellings:["CL","Republic of Chile","Rep\xFAblica de Chile"],region:"Americas",subregion:"South America",population:18191900,latlng:[-30,-71],demonym:"Chilean",area:756102,gini:52.1,timezones:["UTC-06:00","UTC-04:00"],borders:["ARG","BOL","PER"],nativeName:"Chile",numericCode:"152",currencies:[{code:"CLP",name:"Chilean peso",symbol:"$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Chile",es:"Chile",fr:"Chili",ja:"\u30C1\u30EA",it:"Cile",br:"Chile",pt:"Chile",nl:"Chili",hr:"\u010Cile",fa:"\u0634\u06CC\u0644\u06CC"},flag:"https://restcountries.eu/data/chl.svg",regionalBlocs:[{acronym:"PA",name:"Pacific Alliance",otherAcronyms:[],otherNames:["Alianza del Pac\xEDfico"]},{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"CHI"},{name:"China",topLevelDomain:[".cn"],alpha2Code:"CN",alpha3Code:"CHN",callingCodes:["86"],capital:"Beijing",altSpellings:["CN","Zh\u014Dnggu\xF3","Zhongguo","Zhonghua","People's Republic of China","\u4E2D\u534E\u4EBA\u6C11\u5171\u548C\u56FD","Zh\u014Dnghu\xE1 R\xE9nm\xEDn G\xF2ngh\xE9gu\xF3"],region:"Asia",subregion:"Eastern Asia",population:1377422166,latlng:[35,105],demonym:"Chinese",area:9640011,gini:47,timezones:["UTC+08:00"],borders:["AFG","BTN","MMR","HKG","IND","KAZ","PRK","KGZ","LAO","MAC","MNG","PAK","RUS","TJK","VNM"],nativeName:"\u4E2D\u56FD",numericCode:"156",currencies:[{code:"CNY",name:"Chinese yuan",symbol:"\xA5"}],languages:[{iso639_1:"zh",iso639_2:"zho",name:"Chinese",nativeName:"\u4E2D\u6587 (Zh\u014Dngw\xE9n)"}],translations:{de:"China",es:"China",fr:"Chine",ja:"\u4E2D\u56FD",it:"Cina",br:"China",pt:"China",nl:"China",hr:"Kina",fa:"\u0686\u06CC\u0646"},flag:"https://restcountries.eu/data/chn.svg",regionalBlocs:[],cioc:"CHN"},{name:"Christmas Island",topLevelDomain:[".cx"],alpha2Code:"CX",alpha3Code:"CXR",callingCodes:["61"],capital:"Flying Fish Cove",altSpellings:["CX","Territory of Christmas Island"],region:"Oceania",subregion:"Australia and New Zealand",population:2072,latlng:[-10.5,105.66666666],demonym:"Christmas Island",area:135,gini:null,timezones:["UTC+07:00"],borders:[],nativeName:"Christmas Island",numericCode:"162",currencies:[{code:"AUD",name:"Australian dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Weihnachtsinsel",es:"Isla de Navidad",fr:"\xCEle Christmas",ja:"\u30AF\u30EA\u30B9\u30DE\u30B9\u5CF6",it:"Isola di Natale",br:"Ilha Christmas",pt:"Ilha do Natal",nl:"Christmaseiland",hr:"Bo\u017Ei\u0107ni otok",fa:"\u062C\u0632\u06CC\u0631\u0647 \u06A9\u0631\u06CC\u0633\u0645\u0633"},flag:"https://restcountries.eu/data/cxr.svg",regionalBlocs:[],cioc:""},{name:"Cocos (Keeling) Islands",topLevelDomain:[".cc"],alpha2Code:"CC",alpha3Code:"CCK",callingCodes:["61"],capital:"West Island",altSpellings:["CC","Territory of the Cocos (Keeling) Islands","Keeling Islands"],region:"Oceania",subregion:"Australia and New Zealand",population:550,latlng:[-12.5,96.83333333],demonym:"Cocos Islander",area:14,gini:null,timezones:["UTC+06:30"],borders:[],nativeName:"Cocos (Keeling) Islands",numericCode:"166",currencies:[{code:"AUD",name:"Australian dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Kokosinseln",es:"Islas Cocos o Islas Keeling",fr:"\xCEles Cocos",ja:"\u30B3\u30B3\u30B9\uFF08\u30AD\u30FC\u30EA\u30F3\u30B0\uFF09\u8AF8\u5CF6",it:"Isole Cocos e Keeling",br:"Ilhas Cocos",pt:"Ilhas dos Cocos",nl:"Cocoseilanden",hr:"Kokosovi Otoci",fa:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u0648\u06A9\u0648\u0633"},flag:"https://restcountries.eu/data/cck.svg",regionalBlocs:[],cioc:""},{name:"Colombia",topLevelDomain:[".co"],alpha2Code:"CO",alpha3Code:"COL",callingCodes:["57"],capital:"Bogot\xE1",altSpellings:["CO","Republic of Colombia","Rep\xFAblica de Colombia"],region:"Americas",subregion:"South America",population:48759958,latlng:[4,-72],demonym:"Colombian",area:1141748,gini:55.9,timezones:["UTC-05:00"],borders:["BRA","ECU","PAN","PER","VEN"],nativeName:"Colombia",numericCode:"170",currencies:[{code:"COP",name:"Colombian peso",symbol:"$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Kolumbien",es:"Colombia",fr:"Colombie",ja:"\u30B3\u30ED\u30F3\u30D3\u30A2",it:"Colombia",br:"Col\xF4mbia",pt:"Col\xF4mbia",nl:"Colombia",hr:"Kolumbija",fa:"\u06A9\u0644\u0645\u0628\u06CC\u0627"},flag:"https://restcountries.eu/data/col.svg",regionalBlocs:[{acronym:"PA",name:"Pacific Alliance",otherAcronyms:[],otherNames:["Alianza del Pac\xEDfico"]},{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"COL"},{name:"Comoros",topLevelDomain:[".km"],alpha2Code:"KM",alpha3Code:"COM",callingCodes:["269"],capital:"Moroni",altSpellings:["KM","Union of the Comoros","Union des Comores","Udzima wa Komori","al-Itti\u1E25\u0101d al-Qumur\u012B"],region:"Africa",subregion:"Eastern Africa",population:806153,latlng:[-12.16666666,44.25],demonym:"Comoran",area:1862,gini:64.3,timezones:["UTC+03:00"],borders:[],nativeName:"Komori",numericCode:"174",currencies:[{code:"KMF",name:"Comorian franc",symbol:"Fr"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Union der Komoren",es:"Comoras",fr:"Comores",ja:"\u30B3\u30E2\u30ED",it:"Comore",br:"Comores",pt:"Comores",nl:"Comoren",hr:"Komori",fa:"\u06A9\u0648\u0645\u0648\u0631"},flag:"https://restcountries.eu/data/com.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]},{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"COM"},{name:"Congo",topLevelDomain:[".cg"],alpha2Code:"CG",alpha3Code:"COG",callingCodes:["242"],capital:"Brazzaville",altSpellings:["CG","Congo-Brazzaville"],region:"Africa",subregion:"Middle Africa",population:4741e3,latlng:[-1,15],demonym:"Congolese",area:342e3,gini:47.3,timezones:["UTC+01:00"],borders:["AGO","CMR","CAF","COD","GAB"],nativeName:"R\xE9publique du Congo",numericCode:"178",currencies:[{code:"XAF",name:"Central African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"ln",iso639_2:"lin",name:"Lingala",nativeName:"Ling\xE1la"}],translations:{de:"Kongo",es:"Congo",fr:"Congo",ja:"\u30B3\u30F3\u30B4\u5171\u548C\u56FD",it:"Congo",br:"Congo",pt:"Congo",nl:"Congo [Republiek]",hr:"Kongo",fa:"\u06A9\u0646\u06AF\u0648"},flag:"https://restcountries.eu/data/cog.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"CGO"},{name:"Congo (Democratic Republic of the)",topLevelDomain:[".cd"],alpha2Code:"CD",alpha3Code:"COD",callingCodes:["243"],capital:"Kinshasa",altSpellings:["CD","DR Congo","Congo-Kinshasa","DRC"],region:"Africa",subregion:"Middle Africa",population:85026e3,latlng:[0,25],demonym:"Congolese",area:2344858,gini:null,timezones:["UTC+01:00","UTC+02:00"],borders:["AGO","BDI","CAF","COG","RWA","SSD","TZA","UGA","ZMB"],nativeName:"R\xE9publique d\xE9mocratique du Congo",numericCode:"180",currencies:[{code:"CDF",name:"Congolese franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"ln",iso639_2:"lin",name:"Lingala",nativeName:"Ling\xE1la"},{iso639_1:"kg",iso639_2:"kon",name:"Kongo",nativeName:"Kikongo"},{iso639_1:"sw",iso639_2:"swa",name:"Swahili",nativeName:"Kiswahili"},{iso639_1:"lu",iso639_2:"lub",name:"Luba-Katanga",nativeName:"Tshiluba"}],translations:{de:"Kongo (Dem. Rep.)",es:"Congo (Rep. Dem.)",fr:"Congo (R\xE9p. d\xE9m.)",ja:"\u30B3\u30F3\u30B4\u6C11\u4E3B\u5171\u548C\u56FD",it:"Congo (Rep. Dem.)",br:"RD Congo",pt:"RD Congo",nl:"Congo [DRC]",hr:"Kongo, Demokratska Republika",fa:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u0646\u06AF\u0648"},flag:"https://restcountries.eu/data/cod.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"COD"},{name:"Cook Islands",topLevelDomain:[".ck"],alpha2Code:"CK",alpha3Code:"COK",callingCodes:["682"],capital:"Avarua",altSpellings:["CK","K\u016Bki '\u0100irani"],region:"Oceania",subregion:"Polynesia",population:18100,latlng:[-21.23333333,-159.76666666],demonym:"Cook Islander",area:236,gini:null,timezones:["UTC-10:00"],borders:[],nativeName:"Cook Islands",numericCode:"184",currencies:[{code:"NZD",name:"New Zealand dollar",symbol:"$"},{code:"CKD",name:"Cook Islands dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Cookinseln",es:"Islas Cook",fr:"\xCEles Cook",ja:"\u30AF\u30C3\u30AF\u8AF8\u5CF6",it:"Isole Cook",br:"Ilhas Cook",pt:"Ilhas Cook",nl:"Cookeilanden",hr:"Cookovo Oto\u010Dje",fa:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u0648\u06A9"},flag:"https://restcountries.eu/data/cok.svg",regionalBlocs:[],cioc:"COK"},{name:"Costa Rica",topLevelDomain:[".cr"],alpha2Code:"CR",alpha3Code:"CRI",callingCodes:["506"],capital:"San Jos\xE9",altSpellings:["CR","Republic of Costa Rica","Rep\xFAblica de Costa Rica"],region:"Americas",subregion:"Central America",population:4890379,latlng:[10,-84],demonym:"Costa Rican",area:51100,gini:50.7,timezones:["UTC-06:00"],borders:["NIC","PAN"],nativeName:"Costa Rica",numericCode:"188",currencies:[{code:"CRC",name:"Costa Rican col\xF3n",symbol:"\u20A1"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Costa Rica",es:"Costa Rica",fr:"Costa Rica",ja:"\u30B3\u30B9\u30BF\u30EA\u30AB",it:"Costa Rica",br:"Costa Rica",pt:"Costa Rica",nl:"Costa Rica",hr:"Kostarika",fa:"\u06A9\u0627\u0633\u062A\u0627\u0631\u06CC\u06A9\u0627"},flag:"https://restcountries.eu/data/cri.svg",regionalBlocs:[{acronym:"CAIS",name:"Central American Integration System",otherAcronyms:["SICA"],otherNames:["Sistema de la Integraci\xF3n Centroamericana,"]}],cioc:"CRC"},{name:"Croatia",topLevelDomain:[".hr"],alpha2Code:"HR",alpha3Code:"HRV",callingCodes:["385"],capital:"Zagreb",altSpellings:["HR","Hrvatska","Republic of Croatia","Republika Hrvatska"],region:"Europe",subregion:"Southern Europe",population:4190669,latlng:[45.16666666,15.5],demonym:"Croatian",area:56594,gini:33.7,timezones:["UTC+01:00"],borders:["BIH","HUN","MNE","SRB","SVN"],nativeName:"Hrvatska",numericCode:"191",currencies:[{code:"HRK",name:"Croatian kuna",symbol:"kn"}],languages:[{iso639_1:"hr",iso639_2:"hrv",name:"Croatian",nativeName:"hrvatski jezik"}],translations:{de:"Kroatien",es:"Croacia",fr:"Croatie",ja:"\u30AF\u30ED\u30A2\u30C1\u30A2",it:"Croazia",br:"Cro\xE1cia",pt:"Cro\xE1cia",nl:"Kroati\xEB",hr:"Hrvatska",fa:"\u06A9\u0631\u0648\u0627\u0633\u06CC"},flag:"https://restcountries.eu/data/hrv.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"CRO"},{name:"Cuba",topLevelDomain:[".cu"],alpha2Code:"CU",alpha3Code:"CUB",callingCodes:["53"],capital:"Havana",altSpellings:["CU","Republic of Cuba","Rep\xFAblica de Cuba"],region:"Americas",subregion:"Caribbean",population:11239004,latlng:[21.5,-80],demonym:"Cuban",area:109884,gini:null,timezones:["UTC-05:00"],borders:[],nativeName:"Cuba",numericCode:"192",currencies:[{code:"CUC",name:"Cuban convertible peso",symbol:"$"},{code:"CUP",name:"Cuban peso",symbol:"$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Kuba",es:"Cuba",fr:"Cuba",ja:"\u30AD\u30E5\u30FC\u30D0",it:"Cuba",br:"Cuba",pt:"Cuba",nl:"Cuba",hr:"Kuba",fa:"\u06A9\u0648\u0628\u0627"},flag:"https://restcountries.eu/data/cub.svg",regionalBlocs:[],cioc:"CUB"},{name:"Cura\xE7ao",topLevelDomain:[".cw"],alpha2Code:"CW",alpha3Code:"CUW",callingCodes:["599"],capital:"Willemstad",altSpellings:["CW","Curacao","K\xF2rsou","Country of Cura\xE7ao","Land Cura\xE7ao","Pais K\xF2rsou"],region:"Americas",subregion:"Caribbean",population:154843,latlng:[12.116667,-68.933333],demonym:"Dutch",area:444,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Cura\xE7ao",numericCode:"531",currencies:[{code:"ANG",name:"Netherlands Antillean guilder",symbol:"\u0192"}],languages:[{iso639_1:"nl",iso639_2:"nld",name:"Dutch",nativeName:"Nederlands"},{iso639_1:"pa",iso639_2:"pan",name:"(Eastern) Punjabi",nativeName:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Cura\xE7ao",es:null,fr:"Cura\xE7ao",ja:null,it:"Cura\xE7ao",br:"Cura\xE7ao",pt:"Cura\xE7ao",nl:"Cura\xE7ao",hr:null,fa:"\u06A9\u0648\u0631\u0627\u0633\u0627\u0626\u0648"},flag:"https://restcountries.eu/data/cuw.svg",regionalBlocs:[],cioc:""},{name:"Cyprus",topLevelDomain:[".cy"],alpha2Code:"CY",alpha3Code:"CYP",callingCodes:["357"],capital:"Nicosia",altSpellings:["CY","K\xFDpros","K\u0131br\u0131s","Republic of Cyprus","\u039A\u03C5\u03C0\u03C1\u03B9\u03B1\u03BA\u03AE \u0394\u03B7\u03BC\u03BF\u03BA\u03C1\u03B1\u03C4\u03AF\u03B1","K\u0131br\u0131s Cumhuriyeti"],region:"Europe",subregion:"Southern Europe",population:847e3,latlng:[35,33],demonym:"Cypriot",area:9251,gini:null,timezones:["UTC+02:00"],borders:["GBR"],nativeName:"\u039A\u03CD\u03C0\u03C1\u03BF\u03C2",numericCode:"196",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"el",iso639_2:"ell",name:"Greek (modern)",nativeName:"\u03B5\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},{iso639_1:"tr",iso639_2:"tur",name:"Turkish",nativeName:"T\xFCrk\xE7e"},{iso639_1:"hy",iso639_2:"hye",name:"Armenian",nativeName:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576"}],translations:{de:"Zypern",es:"Chipre",fr:"Chypre",ja:"\u30AD\u30D7\u30ED\u30B9",it:"Cipro",br:"Chipre",pt:"Chipre",nl:"Cyprus",hr:"Cipar",fa:"\u0642\u0628\u0631\u0633"},flag:"https://restcountries.eu/data/cyp.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"CYP"},{name:"Czech Republic",topLevelDomain:[".cz"],alpha2Code:"CZ",alpha3Code:"CZE",callingCodes:["420"],capital:"Prague",altSpellings:["CZ","\u010Cesk\xE1 republika","\u010Cesko"],region:"Europe",subregion:"Eastern Europe",population:10558524,latlng:[49.75,15.5],demonym:"Czech",area:78865,gini:26,timezones:["UTC+01:00"],borders:["AUT","DEU","POL","SVK"],nativeName:"\u010Cesk\xE1 republika",numericCode:"203",currencies:[{code:"CZK",name:"Czech koruna",symbol:"K\u010D"}],languages:[{iso639_1:"cs",iso639_2:"ces",name:"Czech",nativeName:"\u010De\u0161tina"},{iso639_1:"sk",iso639_2:"slk",name:"Slovak",nativeName:"sloven\u010Dina"}],translations:{de:"Tschechische Republik",es:"Rep\xFAblica Checa",fr:"R\xE9publique tch\xE8que",ja:"\u30C1\u30A7\u30B3",it:"Repubblica Ceca",br:"Rep\xFAblica Tcheca",pt:"Rep\xFAblica Checa",nl:"Tsjechi\xEB",hr:"\u010Ce\u0161ka",fa:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0686\u06A9"},flag:"https://restcountries.eu/data/cze.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"CZE"},{name:"Denmark",topLevelDomain:[".dk"],alpha2Code:"DK",alpha3Code:"DNK",callingCodes:["45"],capital:"Copenhagen",altSpellings:["DK","Danmark","Kingdom of Denmark","Kongeriget Danmark"],region:"Europe",subregion:"Northern Europe",population:5717014,latlng:[56,10],demonym:"Danish",area:43094,gini:24,timezones:["UTC-04:00","UTC-03:00","UTC-01:00","UTC","UTC+01:00"],borders:["DEU"],nativeName:"Danmark",numericCode:"208",currencies:[{code:"DKK",name:"Danish krone",symbol:"kr"}],languages:[{iso639_1:"da",iso639_2:"dan",name:"Danish",nativeName:"dansk"}],translations:{de:"D\xE4nemark",es:"Dinamarca",fr:"Danemark",ja:"\u30C7\u30F3\u30DE\u30FC\u30AF",it:"Danimarca",br:"Dinamarca",pt:"Dinamarca",nl:"Denemarken",hr:"Danska",fa:"\u062F\u0627\u0646\u0645\u0627\u0631\u06A9"},flag:"https://restcountries.eu/data/dnk.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"DEN"},{name:"Djibouti",topLevelDomain:[".dj"],alpha2Code:"DJ",alpha3Code:"DJI",callingCodes:["253"],capital:"Djibouti",altSpellings:["DJ","Jabuuti","Gabuuti","Republic of Djibouti","R\xE9publique de Djibouti","Gabuutih Ummuuno","Jamhuuriyadda Jabuuti"],region:"Africa",subregion:"Eastern Africa",population:9e5,latlng:[11.5,43],demonym:"Djibouti",area:23200,gini:40,timezones:["UTC+03:00"],borders:["ERI","ETH","SOM"],nativeName:"Djibouti",numericCode:"262",currencies:[{code:"DJF",name:"Djiboutian franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Dschibuti",es:"Yibuti",fr:"Djibouti",ja:"\u30B8\u30D6\u30C1",it:"Gibuti",br:"Djibuti",pt:"Djibuti",nl:"Djibouti",hr:"D\u017Eibuti",fa:"\u062C\u06CC\u0628\u0648\u062A\u06CC"},flag:"https://restcountries.eu/data/dji.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]},{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"DJI"},{name:"Dominica",topLevelDomain:[".dm"],alpha2Code:"DM",alpha3Code:"DMA",callingCodes:["1767"],capital:"Roseau",altSpellings:["DM","Dominique","Wai\u2018tu kubuli","Commonwealth of Dominica"],region:"Americas",subregion:"Caribbean",population:71293,latlng:[15.41666666,-61.33333333],demonym:"Dominican",area:751,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Dominica",numericCode:"212",currencies:[{code:"XCD",name:"East Caribbean dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Dominica",es:"Dominica",fr:"Dominique",ja:"\u30C9\u30DF\u30CB\u30AB\u56FD",it:"Dominica",br:"Dominica",pt:"Dominica",nl:"Dominica",hr:"Dominika",fa:"\u062F\u0648\u0645\u06CC\u0646\u06CC\u06A9\u0627"},flag:"https://restcountries.eu/data/dma.svg",regionalBlocs:[],cioc:"DMA"},{name:"Dominican Republic",topLevelDomain:[".do"],alpha2Code:"DO",alpha3Code:"DOM",callingCodes:["1809","1829","1849"],capital:"Santo Domingo",altSpellings:["DO"],region:"Americas",subregion:"Caribbean",population:10075045,latlng:[19,-70.66666666],demonym:"Dominican",area:48671,gini:47.2,timezones:["UTC-04:00"],borders:["HTI"],nativeName:"Rep\xFAblica Dominicana",numericCode:"214",currencies:[{code:"DOP",name:"Dominican peso",symbol:"$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Dominikanische Republik",es:"Rep\xFAblica Dominicana",fr:"R\xE9publique dominicaine",ja:"\u30C9\u30DF\u30CB\u30AB\u5171\u548C\u56FD",it:"Repubblica Dominicana",br:"Rep\xFAblica Dominicana",pt:"Rep\xFAblica Dominicana",nl:"Dominicaanse Republiek",hr:"Dominikanska Republika",fa:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062F\u0648\u0645\u06CC\u0646\u06CC\u06A9\u0646"},flag:"https://restcountries.eu/data/dom.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]},{acronym:"CAIS",name:"Central American Integration System",otherAcronyms:["SICA"],otherNames:["Sistema de la Integraci\xF3n Centroamericana,"]}],cioc:"DOM"},{name:"Ecuador",topLevelDomain:[".ec"],alpha2Code:"EC",alpha3Code:"ECU",callingCodes:["593"],capital:"Quito",altSpellings:["EC","Republic of Ecuador","Rep\xFAblica del Ecuador"],region:"Americas",subregion:"South America",population:16545799,latlng:[-2,-77.5],demonym:"Ecuadorean",area:276841,gini:49.3,timezones:["UTC-06:00","UTC-05:00"],borders:["COL","PER"],nativeName:"Ecuador",numericCode:"218",currencies:[{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Ecuador",es:"Ecuador",fr:"\xC9quateur",ja:"\u30A8\u30AF\u30A2\u30C9\u30EB",it:"Ecuador",br:"Equador",pt:"Equador",nl:"Ecuador",hr:"Ekvador",fa:"\u0627\u06A9\u0648\u0627\u062F\u0648\u0631"},flag:"https://restcountries.eu/data/ecu.svg",regionalBlocs:[{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"ECU"},{name:"Egypt",topLevelDomain:[".eg"],alpha2Code:"EG",alpha3Code:"EGY",callingCodes:["20"],capital:"Cairo",altSpellings:["EG","Arab Republic of Egypt"],region:"Africa",subregion:"Northern Africa",population:9129e4,latlng:[27,30],demonym:"Egyptian",area:1002450,gini:30.8,timezones:["UTC+02:00"],borders:["ISR","LBY","SDN"],nativeName:"\u0645\u0635\u0631\u200E",numericCode:"818",currencies:[{code:"EGP",name:"Egyptian pound",symbol:"\xA3"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"\xC4gypten",es:"Egipto",fr:"\xC9gypte",ja:"\u30A8\u30B8\u30D7\u30C8",it:"Egitto",br:"Egito",pt:"Egipto",nl:"Egypte",hr:"Egipat",fa:"\u0645\u0635\u0631"},flag:"https://restcountries.eu/data/egy.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]},{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"EGY"},{name:"El Salvador",topLevelDomain:[".sv"],alpha2Code:"SV",alpha3Code:"SLV",callingCodes:["503"],capital:"San Salvador",altSpellings:["SV","Republic of El Salvador","Rep\xFAblica de El Salvador"],region:"Americas",subregion:"Central America",population:6520675,latlng:[13.83333333,-88.91666666],demonym:"Salvadoran",area:21041,gini:48.3,timezones:["UTC-06:00"],borders:["GTM","HND"],nativeName:"El Salvador",numericCode:"222",currencies:[{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"El Salvador",es:"El Salvador",fr:"Salvador",ja:"\u30A8\u30EB\u30B5\u30EB\u30D0\u30C9\u30EB",it:"El Salvador",br:"El Salvador",pt:"El Salvador",nl:"El Salvador",hr:"Salvador",fa:"\u0627\u0644\u0633\u0627\u0644\u0648\u0627\u062F\u0648\u0631"},flag:"https://restcountries.eu/data/slv.svg",regionalBlocs:[{acronym:"CAIS",name:"Central American Integration System",otherAcronyms:["SICA"],otherNames:["Sistema de la Integraci\xF3n Centroamericana,"]}],cioc:"ESA"},{name:"Equatorial Guinea",topLevelDomain:[".gq"],alpha2Code:"GQ",alpha3Code:"GNQ",callingCodes:["240"],capital:"Malabo",altSpellings:["GQ","Republic of Equatorial Guinea","Rep\xFAblica de Guinea Ecuatorial","R\xE9publique de Guin\xE9e \xE9quatoriale","Rep\xFAblica da Guin\xE9 Equatorial"],region:"Africa",subregion:"Middle Africa",population:1222442,latlng:[2,10],demonym:"Equatorial Guinean",area:28051,gini:null,timezones:["UTC+01:00"],borders:["CMR","GAB"],nativeName:"Guinea Ecuatorial",numericCode:"226",currencies:[{code:"XAF",name:"Central African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"\xC4quatorial-Guinea",es:"Guinea Ecuatorial",fr:"Guin\xE9e-\xC9quatoriale",ja:"\u8D64\u9053\u30AE\u30CB\u30A2",it:"Guinea Equatoriale",br:"Guin\xE9 Equatorial",pt:"Guin\xE9 Equatorial",nl:"Equatoriaal-Guinea",hr:"Ekvatorijalna Gvineja",fa:"\u06AF\u06CC\u0646\u0647 \u0627\u0633\u062A\u0648\u0627\u06CC\u06CC"},flag:"https://restcountries.eu/data/gnq.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"GEQ"},{name:"Eritrea",topLevelDomain:[".er"],alpha2Code:"ER",alpha3Code:"ERI",callingCodes:["291"],capital:"Asmara",altSpellings:["ER","State of Eritrea","\u1203\u1308\u1228 \u12A4\u122D\u1275\u122B","Dawlat Iritriy\xE1","\u02BEErtr\u0101","Iritriy\u0101",""],region:"Africa",subregion:"Eastern Africa",population:5352e3,latlng:[15,39],demonym:"Eritrean",area:117600,gini:null,timezones:["UTC+03:00"],borders:["DJI","ETH","SDN"],nativeName:"\u12A4\u122D\u1275\u122B",numericCode:"232",currencies:[{code:"ERN",name:"Eritrean nakfa",symbol:"Nfk"}],languages:[{iso639_1:"ti",iso639_2:"tir",name:"Tigrinya",nativeName:"\u1275\u130D\u122D\u129B"},{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Eritrea",es:"Eritrea",fr:"\xC9rythr\xE9e",ja:"\u30A8\u30EA\u30C8\u30EA\u30A2",it:"Eritrea",br:"Eritreia",pt:"Eritreia",nl:"Eritrea",hr:"Eritreja",fa:"\u0627\u0631\u06CC\u062A\u0631\u0647"},flag:"https://restcountries.eu/data/eri.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"ERI"},{name:"Estonia",topLevelDomain:[".ee"],alpha2Code:"EE",alpha3Code:"EST",callingCodes:["372"],capital:"Tallinn",altSpellings:["EE","Eesti","Republic of Estonia","Eesti Vabariik"],region:"Europe",subregion:"Northern Europe",population:1315944,latlng:[59,26],demonym:"Estonian",area:45227,gini:36,timezones:["UTC+02:00"],borders:["LVA","RUS"],nativeName:"Eesti",numericCode:"233",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"et",iso639_2:"est",name:"Estonian",nativeName:"eesti"}],translations:{de:"Estland",es:"Estonia",fr:"Estonie",ja:"\u30A8\u30B9\u30C8\u30CB\u30A2",it:"Estonia",br:"Est\xF4nia",pt:"Est\xF3nia",nl:"Estland",hr:"Estonija",fa:"\u0627\u0633\u062A\u0648\u0646\u06CC"},flag:"https://restcountries.eu/data/est.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"EST"},{name:"Ethiopia",topLevelDomain:[".et"],alpha2Code:"ET",alpha3Code:"ETH",callingCodes:["251"],capital:"Addis Ababa",altSpellings:["ET","\u02BE\u012Aty\u014D\u1E57\u1E57y\u0101","Federal Democratic Republic of Ethiopia","\u12E8\u12A2\u1275\u12EE\u1335\u12EB \u134C\u12F4\u122B\u120B\u12CA \u12F2\u121E\u12AD\u122B\u1232\u12EB\u12CA \u122A\u1350\u1265\u120A\u12AD"],region:"Africa",subregion:"Eastern Africa",population:92206005,latlng:[8,38],demonym:"Ethiopian",area:1104300,gini:29.8,timezones:["UTC+03:00"],borders:["DJI","ERI","KEN","SOM","SSD","SDN"],nativeName:"\u12A2\u1275\u12EE\u1335\u12EB",numericCode:"231",currencies:[{code:"ETB",name:"Ethiopian birr",symbol:"Br"}],languages:[{iso639_1:"am",iso639_2:"amh",name:"Amharic",nativeName:"\u12A0\u121B\u122D\u129B"}],translations:{de:"\xC4thiopien",es:"Etiop\xEDa",fr:"\xC9thiopie",ja:"\u30A8\u30C1\u30AA\u30D4\u30A2",it:"Etiopia",br:"Eti\xF3pia",pt:"Eti\xF3pia",nl:"Ethiopi\xEB",hr:"Etiopija",fa:"\u0627\u062A\u06CC\u0648\u067E\u06CC"},flag:"https://restcountries.eu/data/eth.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"ETH"},{name:"Falkland Islands (Malvinas)",topLevelDomain:[".fk"],alpha2Code:"FK",alpha3Code:"FLK",callingCodes:["500"],capital:"Stanley",altSpellings:["FK","Islas Malvinas"],region:"Americas",subregion:"South America",population:2563,latlng:[-51.75,-59],demonym:"Falkland Islander",area:12173,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Falkland Islands",numericCode:"238",currencies:[{code:"FKP",name:"Falkland Islands pound",symbol:"\xA3"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Falklandinseln",es:"Islas Malvinas",fr:"\xCEles Malouines",ja:"\u30D5\u30A9\u30FC\u30AF\u30E9\u30F3\u30C9\uFF08\u30DE\u30EB\u30D3\u30CA\u30B9\uFF09\u8AF8\u5CF6",it:"Isole Falkland o Isole Malvine",br:"Ilhas Malvinas",pt:"Ilhas Falkland",nl:"Falklandeilanden [Islas Malvinas]",hr:"Falklandski Otoci",fa:"\u062C\u0632\u0627\u06CC\u0631 \u0641\u0627\u0644\u06A9\u0644\u0646\u062F"},flag:"https://restcountries.eu/data/flk.svg",regionalBlocs:[{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:""},{name:"Faroe Islands",topLevelDomain:[".fo"],alpha2Code:"FO",alpha3Code:"FRO",callingCodes:["298"],capital:"T\xF3rshavn",altSpellings:["FO","F\xF8royar","F\xE6r\xF8erne"],region:"Europe",subregion:"Northern Europe",population:49376,latlng:[62,-7],demonym:"Faroese",area:1393,gini:null,timezones:["UTC+00:00"],borders:[],nativeName:"F\xF8royar",numericCode:"234",currencies:[{code:"DKK",name:"Danish krone",symbol:"kr"},{code:"(none)",name:"Faroese kr\xF3na",symbol:"kr"}],languages:[{iso639_1:"fo",iso639_2:"fao",name:"Faroese",nativeName:"f\xF8royskt"}],translations:{de:"F\xE4r\xF6er-Inseln",es:"Islas Faroe",fr:"\xCEles F\xE9ro\xE9",ja:"\u30D5\u30A7\u30ED\u30FC\u8AF8\u5CF6",it:"Isole Far Oer",br:"Ilhas Faro\xE9",pt:"Ilhas Faro\xE9",nl:"Faer\xF6er",hr:"Farski Otoci",fa:"\u062C\u0632\u0627\u06CC\u0631 \u0641\u0627\u0631\u0648"},flag:"https://restcountries.eu/data/fro.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:""},{name:"Fiji",topLevelDomain:[".fj"],alpha2Code:"FJ",alpha3Code:"FJI",callingCodes:["679"],capital:"Suva",altSpellings:["FJ","Viti","Republic of Fiji","Matanitu ko Viti","Fij\u012B Ga\u1E47ar\u0101jya"],region:"Oceania",subregion:"Melanesia",population:867e3,latlng:[-18,175],demonym:"Fijian",area:18272,gini:42.8,timezones:["UTC+12:00"],borders:[],nativeName:"Fiji",numericCode:"242",currencies:[{code:"FJD",name:"Fijian dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"fj",iso639_2:"fij",name:"Fijian",nativeName:"vosa Vakaviti"},{iso639_1:"hi",iso639_2:"hin",name:"Hindi",nativeName:"\u0939\u093F\u0928\u094D\u0926\u0940"},{iso639_1:"ur",iso639_2:"urd",name:"Urdu",nativeName:"\u0627\u0631\u062F\u0648"}],translations:{de:"Fidschi",es:"Fiyi",fr:"Fidji",ja:"\u30D5\u30A3\u30B8\u30FC",it:"Figi",br:"Fiji",pt:"Fiji",nl:"Fiji",hr:"Fi\u0111i",fa:"\u0641\u06CC\u062C\u06CC"},flag:"https://restcountries.eu/data/fji.svg",regionalBlocs:[],cioc:"FIJ"},{name:"Finland",topLevelDomain:[".fi"],alpha2Code:"FI",alpha3Code:"FIN",callingCodes:["358"],capital:"Helsinki",altSpellings:["FI","Suomi","Republic of Finland","Suomen tasavalta","Republiken Finland"],region:"Europe",subregion:"Northern Europe",population:5491817,latlng:[64,26],demonym:"Finnish",area:338424,gini:26.9,timezones:["UTC+02:00"],borders:["NOR","SWE","RUS"],nativeName:"Suomi",numericCode:"246",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fi",iso639_2:"fin",name:"Finnish",nativeName:"suomi"},{iso639_1:"sv",iso639_2:"swe",name:"Swedish",nativeName:"svenska"}],translations:{de:"Finnland",es:"Finlandia",fr:"Finlande",ja:"\u30D5\u30A3\u30F3\u30E9\u30F3\u30C9",it:"Finlandia",br:"Finl\xE2ndia",pt:"Finl\xE2ndia",nl:"Finland",hr:"Finska",fa:"\u0641\u0646\u0644\u0627\u0646\u062F"},flag:"https://restcountries.eu/data/fin.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"FIN"},{name:"France",topLevelDomain:[".fr"],alpha2Code:"FR",alpha3Code:"FRA",callingCodes:["33"],capital:"Paris",altSpellings:["FR","French Republic","R\xE9publique fran\xE7aise"],region:"Europe",subregion:"Western Europe",population:6671e4,latlng:[46,2],demonym:"French",area:640679,gini:32.7,timezones:["UTC-10:00","UTC-09:30","UTC-09:00","UTC-08:00","UTC-04:00","UTC-03:00","UTC+01:00","UTC+03:00","UTC+04:00","UTC+05:00","UTC+11:00","UTC+12:00"],borders:["AND","BEL","DEU","ITA","LUX","MCO","ESP","CHE"],nativeName:"France",numericCode:"250",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Frankreich",es:"Francia",fr:"France",ja:"\u30D5\u30E9\u30F3\u30B9",it:"Francia",br:"Fran\xE7a",pt:"Fran\xE7a",nl:"Frankrijk",hr:"Francuska",fa:"\u0641\u0631\u0627\u0646\u0633\u0647"},flag:"https://restcountries.eu/data/fra.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"FRA"},{name:"French Guiana",topLevelDomain:[".gf"],alpha2Code:"GF",alpha3Code:"GUF",callingCodes:["594"],capital:"Cayenne",altSpellings:["GF","Guiana","Guyane"],region:"Americas",subregion:"South America",population:254541,latlng:[4,-53],demonym:"",area:null,gini:null,timezones:["UTC-03:00"],borders:["BRA","SUR"],nativeName:"Guyane fran\xE7aise",numericCode:"254",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Franz\xF6sisch Guyana",es:"Guayana Francesa",fr:"Guayane",ja:"\u30D5\u30E9\u30F3\u30B9\u9818\u30AE\u30A2\u30CA",it:"Guyana francese",br:"Guiana Francesa",pt:"Guiana Francesa",nl:"Frans-Guyana",hr:"Francuska Gvajana",fa:"\u06AF\u0648\u06CC\u0627\u0646 \u0641\u0631\u0627\u0646\u0633\u0647"},flag:"https://restcountries.eu/data/guf.svg",regionalBlocs:[{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]},{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:""},{name:"French Polynesia",topLevelDomain:[".pf"],alpha2Code:"PF",alpha3Code:"PYF",callingCodes:["689"],capital:"Papeet\u0113",altSpellings:["PF","Polyn\xE9sie fran\xE7aise","French Polynesia","P\u014Dr\u012Bnetia Far\u0101ni"],region:"Oceania",subregion:"Polynesia",population:271800,latlng:[-15,-140],demonym:"French Polynesian",area:4167,gini:null,timezones:["UTC-10:00","UTC-09:30","UTC-09:00"],borders:[],nativeName:"Polyn\xE9sie fran\xE7aise",numericCode:"258",currencies:[{code:"XPF",name:"CFP franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Franz\xF6sisch-Polynesien",es:"Polinesia Francesa",fr:"Polyn\xE9sie fran\xE7aise",ja:"\u30D5\u30E9\u30F3\u30B9\u9818\u30DD\u30EA\u30CD\u30B7\u30A2",it:"Polinesia Francese",br:"Polin\xE9sia Francesa",pt:"Polin\xE9sia Francesa",nl:"Frans-Polynesi\xEB",hr:"Francuska Polinezija",fa:"\u067E\u0644\u06CC\u200C\u0646\u0632\u06CC \u0641\u0631\u0627\u0646\u0633\u0647"},flag:"https://restcountries.eu/data/pyf.svg",regionalBlocs:[],cioc:""},{name:"French Southern Territories",topLevelDomain:[".tf"],alpha2Code:"TF",alpha3Code:"ATF",callingCodes:[""],capital:"Port-aux-Fran\xE7ais",altSpellings:["TF"],region:"Africa",subregion:"Southern Africa",population:140,latlng:[-49.25,69.167],demonym:"French",area:7747,gini:null,timezones:["UTC+05:00"],borders:[],nativeName:"Territoire des Terres australes et antarctiques fran\xE7aises",numericCode:"260",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Franz\xF6sische S\xFCd- und Antarktisgebiete",es:"Tierras Australes y Ant\xE1rticas Francesas",fr:"Terres australes et antarctiques fran\xE7aises",ja:"\u30D5\u30E9\u30F3\u30B9\u9818\u5357\u65B9\u30FB\u5357\u6975\u5730\u57DF",it:"Territori Francesi del Sud",br:"Terras Austrais e Ant\xE1rticas Francesas",pt:"Terras Austrais e Ant\xE1rticas Francesas",nl:"Franse Gebieden in de zuidelijke Indische Oceaan",hr:"Francuski ju\u017Eni i antarkti\u010Dki teritoriji",fa:"\u0633\u0631\u0632\u0645\u06CC\u0646\u200C\u0647\u0627\u06CC \u062C\u0646\u0648\u0628\u06CC \u0648 \u062C\u0646\u0648\u0628\u06AF\u0627\u0646\u06CC \u0641\u0631\u0627\u0646\u0633\u0647"},flag:"https://restcountries.eu/data/atf.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:""},{name:"Gabon",topLevelDomain:[".ga"],alpha2Code:"GA",alpha3Code:"GAB",callingCodes:["241"],capital:"Libreville",altSpellings:["GA","Gabonese Republic","R\xE9publique Gabonaise"],region:"Africa",subregion:"Middle Africa",population:1802278,latlng:[-1,11.75],demonym:"Gabonese",area:267668,gini:41.5,timezones:["UTC+01:00"],borders:["CMR","COG","GNQ"],nativeName:"Gabon",numericCode:"266",currencies:[{code:"XAF",name:"Central African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Gabun",es:"Gab\xF3n",fr:"Gabon",ja:"\u30AC\u30DC\u30F3",it:"Gabon",br:"Gab\xE3o",pt:"Gab\xE3o",nl:"Gabon",hr:"Gabon",fa:"\u06AF\u0627\u0628\u0646"},flag:"https://restcountries.eu/data/gab.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"GAB"},{name:"Gambia",topLevelDomain:[".gm"],alpha2Code:"GM",alpha3Code:"GMB",callingCodes:["220"],capital:"Banjul",altSpellings:["GM","Republic of the Gambia"],region:"Africa",subregion:"Western Africa",population:1882450,latlng:[13.46666666,-16.56666666],demonym:"Gambian",area:11295,gini:null,timezones:["UTC+00:00"],borders:["SEN"],nativeName:"Gambia",numericCode:"270",currencies:[{code:"GMD",name:"Gambian dalasi",symbol:"D"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Gambia",es:"Gambia",fr:"Gambie",ja:"\u30AC\u30F3\u30D3\u30A2",it:"Gambia",br:"G\xE2mbia",pt:"G\xE2mbia",nl:"Gambia",hr:"Gambija",fa:"\u06AF\u0627\u0645\u0628\u06CC\u0627"},flag:"https://restcountries.eu/data/gmb.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"GAM"},{name:"Georgia",topLevelDomain:[".ge"],alpha2Code:"GE",alpha3Code:"GEO",callingCodes:["995"],capital:"Tbilisi",altSpellings:["GE","Sakartvelo"],region:"Asia",subregion:"Western Asia",population:3720400,latlng:[42,43.5],demonym:"Georgian",area:69700,gini:41.3,timezones:["UTC-05:00"],borders:["ARM","AZE","RUS","TUR"],nativeName:"\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD",numericCode:"268",currencies:[{code:"GEL",name:"Georgian Lari",symbol:"\u10DA"}],languages:[{iso639_1:"ka",iso639_2:"kat",name:"Georgian",nativeName:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"}],translations:{de:"Georgien",es:"Georgia",fr:"G\xE9orgie",ja:"\u30B0\u30EB\u30B8\u30A2",it:"Georgia",br:"Ge\xF3rgia",pt:"Ge\xF3rgia",nl:"Georgi\xEB",hr:"Gruzija",fa:"\u06AF\u0631\u062C\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/geo.svg",regionalBlocs:[],cioc:"GEO"},{name:"Germany",topLevelDomain:[".de"],alpha2Code:"DE",alpha3Code:"DEU",callingCodes:["49"],capital:"Berlin",altSpellings:["DE","Federal Republic of Germany","Bundesrepublik Deutschland"],region:"Europe",subregion:"Western Europe",population:81770900,latlng:[51,9],demonym:"German",area:357114,gini:28.3,timezones:["UTC+01:00"],borders:["AUT","BEL","CZE","DNK","FRA","LUX","NLD","POL","CHE"],nativeName:"Deutschland",numericCode:"276",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"de",iso639_2:"deu",name:"German",nativeName:"Deutsch"}],translations:{de:"Deutschland",es:"Alemania",fr:"Allemagne",ja:"\u30C9\u30A4\u30C4",it:"Germania",br:"Alemanha",pt:"Alemanha",nl:"Duitsland",hr:"Njema\u010Dka",fa:"\u0622\u0644\u0645\u0627\u0646"},flag:"https://restcountries.eu/data/deu.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"GER"},{name:"Ghana",topLevelDomain:[".gh"],alpha2Code:"GH",alpha3Code:"GHA",callingCodes:["233"],capital:"Accra",altSpellings:["GH"],region:"Africa",subregion:"Western Africa",population:27670174,latlng:[8,-2],demonym:"Ghanaian",area:238533,gini:42.8,timezones:["UTC"],borders:["BFA","CIV","TGO"],nativeName:"Ghana",numericCode:"288",currencies:[{code:"GHS",name:"Ghanaian cedi",symbol:"\u20B5"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Ghana",es:"Ghana",fr:"Ghana",ja:"\u30AC\u30FC\u30CA",it:"Ghana",br:"Gana",pt:"Gana",nl:"Ghana",hr:"Gana",fa:"\u063A\u0646\u0627"},flag:"https://restcountries.eu/data/gha.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"GHA"},{name:"Gibraltar",topLevelDomain:[".gi"],alpha2Code:"GI",alpha3Code:"GIB",callingCodes:["350"],capital:"Gibraltar",altSpellings:["GI"],region:"Europe",subregion:"Southern Europe",population:33140,latlng:[36.13333333,-5.35],demonym:"Gibraltar",area:6,gini:null,timezones:["UTC+01:00"],borders:["ESP"],nativeName:"Gibraltar",numericCode:"292",currencies:[{code:"GIP",name:"Gibraltar pound",symbol:"\xA3"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Gibraltar",es:"Gibraltar",fr:"Gibraltar",ja:"\u30B8\u30D6\u30E9\u30EB\u30BF\u30EB",it:"Gibilterra",br:"Gibraltar",pt:"Gibraltar",nl:"Gibraltar",hr:"Gibraltar",fa:"\u062C\u0628\u0644\u200C\u0637\u0627\u0631\u0642"},flag:"https://restcountries.eu/data/gib.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:""},{name:"Greece",topLevelDomain:[".gr"],alpha2Code:"GR",alpha3Code:"GRC",callingCodes:["30"],capital:"Athens",altSpellings:["GR","Ell\xE1da","Hellenic Republic","\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AE \u0394\u03B7\u03BC\u03BF\u03BA\u03C1\u03B1\u03C4\u03AF\u03B1"],region:"Europe",subregion:"Southern Europe",population:10858018,latlng:[39,22],demonym:"Greek",area:131990,gini:34.3,timezones:["UTC+02:00"],borders:["ALB","BGR","TUR","MKD"],nativeName:"\u0395\u03BB\u03BB\u03AC\u03B4\u03B1",numericCode:"300",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"el",iso639_2:"ell",name:"Greek (modern)",nativeName:"\u03B5\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"}],translations:{de:"Griechenland",es:"Grecia",fr:"Gr\xE8ce",ja:"\u30AE\u30EA\u30B7\u30E3",it:"Grecia",br:"Gr\xE9cia",pt:"Gr\xE9cia",nl:"Griekenland",hr:"Gr\u010Dka",fa:"\u06CC\u0648\u0646\u0627\u0646"},flag:"https://restcountries.eu/data/grc.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"GRE"},{name:"Greenland",topLevelDomain:[".gl"],alpha2Code:"GL",alpha3Code:"GRL",callingCodes:["299"],capital:"Nuuk",altSpellings:["GL","Gr\xF8nland"],region:"Americas",subregion:"Northern America",population:55847,latlng:[72,-40],demonym:"Greenlandic",area:2166086,gini:null,timezones:["UTC-04:00","UTC-03:00","UTC-01:00","UTC+00:00"],borders:[],nativeName:"Kalaallit Nunaat",numericCode:"304",currencies:[{code:"DKK",name:"Danish krone",symbol:"kr"}],languages:[{iso639_1:"kl",iso639_2:"kal",name:"Kalaallisut",nativeName:"kalaallisut"}],translations:{de:"Gr\xF6nland",es:"Groenlandia",fr:"Groenland",ja:"\u30B0\u30EA\u30FC\u30F3\u30E9\u30F3\u30C9",it:"Groenlandia",br:"Groel\xE2ndia",pt:"Gronel\xE2ndia",nl:"Groenland",hr:"Grenland",fa:"\u06AF\u0631\u06CC\u0646\u0644\u0646\u062F"},flag:"https://restcountries.eu/data/grl.svg",regionalBlocs:[],cioc:""},{name:"Grenada",topLevelDomain:[".gd"],alpha2Code:"GD",alpha3Code:"GRD",callingCodes:["1473"],capital:"St. George's",altSpellings:["GD"],region:"Americas",subregion:"Caribbean",population:103328,latlng:[12.11666666,-61.66666666],demonym:"Grenadian",area:344,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Grenada",numericCode:"308",currencies:[{code:"XCD",name:"East Caribbean dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Grenada",es:"Grenada",fr:"Grenade",ja:"\u30B0\u30EC\u30CA\u30C0",it:"Grenada",br:"Granada",pt:"Granada",nl:"Grenada",hr:"Grenada",fa:"\u06AF\u0631\u0646\u0627\u062F\u0627"},flag:"https://restcountries.eu/data/grd.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]}],cioc:"GRN"},{name:"Guadeloupe",topLevelDomain:[".gp"],alpha2Code:"GP",alpha3Code:"GLP",callingCodes:["590"],capital:"Basse-Terre",altSpellings:["GP","Gwadloup"],region:"Americas",subregion:"Caribbean",population:400132,latlng:[16.25,-61.583333],demonym:"Guadeloupian",area:null,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Guadeloupe",numericCode:"312",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Guadeloupe",es:"Guadalupe",fr:"Guadeloupe",ja:"\u30B0\u30A2\u30C9\u30EB\u30FC\u30D7",it:"Guadeloupa",br:"Guadalupe",pt:"Guadalupe",nl:"Guadeloupe",hr:"Gvadalupa",fa:"\u062C\u0632\u06CC\u0631\u0647 \u06AF\u0648\u0627\u062F\u0644\u0648\u067E"},flag:"https://restcountries.eu/data/glp.svg",regionalBlocs:[],cioc:""},{name:"Guam",topLevelDomain:[".gu"],alpha2Code:"GU",alpha3Code:"GUM",callingCodes:["1671"],capital:"Hag\xE5t\xF1a",altSpellings:["GU","Gu\xE5h\xE5n"],region:"Oceania",subregion:"Micronesia",population:184200,latlng:[13.46666666,144.78333333],demonym:"Guamanian",area:549,gini:null,timezones:["UTC+10:00"],borders:[],nativeName:"Guam",numericCode:"316",currencies:[{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"ch",iso639_2:"cha",name:"Chamorro",nativeName:"Chamoru"},{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Guam",es:"Guam",fr:"Guam",ja:"\u30B0\u30A2\u30E0",it:"Guam",br:"Guam",pt:"Guame",nl:"Guam",hr:"Guam",fa:"\u06AF\u0648\u0627\u0645"},flag:"https://restcountries.eu/data/gum.svg",regionalBlocs:[],cioc:"GUM"},{name:"Guatemala",topLevelDomain:[".gt"],alpha2Code:"GT",alpha3Code:"GTM",callingCodes:["502"],capital:"Guatemala City",altSpellings:["GT"],region:"Americas",subregion:"Central America",population:16176133,latlng:[15.5,-90.25],demonym:"Guatemalan",area:108889,gini:55.9,timezones:["UTC-06:00"],borders:["BLZ","SLV","HND","MEX"],nativeName:"Guatemala",numericCode:"320",currencies:[{code:"GTQ",name:"Guatemalan quetzal",symbol:"Q"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Guatemala",es:"Guatemala",fr:"Guatemala",ja:"\u30B0\u30A2\u30C6\u30DE\u30E9",it:"Guatemala",br:"Guatemala",pt:"Guatemala",nl:"Guatemala",hr:"Gvatemala",fa:"\u06AF\u0648\u0627\u062A\u0645\u0627\u0644\u0627"},flag:"https://restcountries.eu/data/gtm.svg",regionalBlocs:[{acronym:"CAIS",name:"Central American Integration System",otherAcronyms:["SICA"],otherNames:["Sistema de la Integraci\xF3n Centroamericana,"]}],cioc:"GUA"},{name:"Guernsey",topLevelDomain:[".gg"],alpha2Code:"GG",alpha3Code:"GGY",callingCodes:["44"],capital:"St. Peter Port",altSpellings:["GG","Bailiwick of Guernsey","Bailliage de Guernesey"],region:"Europe",subregion:"Northern Europe",population:62999,latlng:[49.46666666,-2.58333333],demonym:"Channel Islander",area:78,gini:null,timezones:["UTC+00:00"],borders:[],nativeName:"Guernsey",numericCode:"831",currencies:[{code:"GBP",name:"British pound",symbol:"\xA3"},{code:"(none)",name:"Guernsey pound",symbol:"\xA3"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Guernsey",es:"Guernsey",fr:"Guernesey",ja:"\u30AC\u30FC\u30F3\u30B8\u30FC",it:"Guernsey",br:"Guernsey",pt:"Guernsey",nl:"Guernsey",hr:"Guernsey",fa:"\u06AF\u0631\u0646\u0632\u06CC"},flag:"https://restcountries.eu/data/ggy.svg",regionalBlocs:[],cioc:""},{name:"Guinea",topLevelDomain:[".gn"],alpha2Code:"GN",alpha3Code:"GIN",callingCodes:["224"],capital:"Conakry",altSpellings:["GN","Republic of Guinea","R\xE9publique de Guin\xE9e"],region:"Africa",subregion:"Western Africa",population:12947e3,latlng:[11,-10],demonym:"Guinean",area:245857,gini:39.4,timezones:["UTC"],borders:["CIV","GNB","LBR","MLI","SEN","SLE"],nativeName:"Guin\xE9e",numericCode:"324",currencies:[{code:"GNF",name:"Guinean franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"ff",iso639_2:"ful",name:"Fula",nativeName:"Fulfulde"}],translations:{de:"Guinea",es:"Guinea",fr:"Guin\xE9e",ja:"\u30AE\u30CB\u30A2",it:"Guinea",br:"Guin\xE9",pt:"Guin\xE9",nl:"Guinee",hr:"Gvineja",fa:"\u06AF\u06CC\u0646\u0647"},flag:"https://restcountries.eu/data/gin.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"GUI"},{name:"Guinea-Bissau",topLevelDomain:[".gw"],alpha2Code:"GW",alpha3Code:"GNB",callingCodes:["245"],capital:"Bissau",altSpellings:["GW","Republic of Guinea-Bissau","Rep\xFAblica da Guin\xE9-Bissau"],region:"Africa",subregion:"Western Africa",population:1547777,latlng:[12,-15],demonym:"Guinea-Bissauan",area:36125,gini:35.5,timezones:["UTC"],borders:["GIN","SEN"],nativeName:"Guin\xE9-Bissau",numericCode:"624",currencies:[{code:"XOF",name:"West African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"pt",iso639_2:"por",name:"Portuguese",nativeName:"Portugu\xEAs"}],translations:{de:"Guinea-Bissau",es:"Guinea-Bis\xE1u",fr:"Guin\xE9e-Bissau",ja:"\u30AE\u30CB\u30A2\u30D3\u30B5\u30A6",it:"Guinea-Bissau",br:"Guin\xE9-Bissau",pt:"Guin\xE9-Bissau",nl:"Guinee-Bissau",hr:"Gvineja Bisau",fa:"\u06AF\u06CC\u0646\u0647 \u0628\u06CC\u0633\u0627\u0626\u0648"},flag:"https://restcountries.eu/data/gnb.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"GBS"},{name:"Guyana",topLevelDomain:[".gy"],alpha2Code:"GY",alpha3Code:"GUY",callingCodes:["592"],capital:"Georgetown",altSpellings:["GY","Co-operative Republic of Guyana"],region:"Americas",subregion:"South America",population:746900,latlng:[5,-59],demonym:"Guyanese",area:214969,gini:44.5,timezones:["UTC-04:00"],borders:["BRA","SUR","VEN"],nativeName:"Guyana",numericCode:"328",currencies:[{code:"GYD",name:"Guyanese dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Guyana",es:"Guyana",fr:"Guyane",ja:"\u30AC\u30A4\u30A2\u30CA",it:"Guyana",br:"Guiana",pt:"Guiana",nl:"Guyana",hr:"Gvajana",fa:"\u06AF\u0648\u06CC\u0627\u0646"},flag:"https://restcountries.eu/data/guy.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]},{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"GUY"},{name:"Haiti",topLevelDomain:[".ht"],alpha2Code:"HT",alpha3Code:"HTI",callingCodes:["509"],capital:"Port-au-Prince",altSpellings:["HT","Republic of Haiti","R\xE9publique d'Ha\xEFti","Repiblik Ayiti"],region:"Americas",subregion:"Caribbean",population:11078033,latlng:[19,-72.41666666],demonym:"Haitian",area:27750,gini:59.2,timezones:["UTC-05:00"],borders:["DOM"],nativeName:"Ha\xEFti",numericCode:"332",currencies:[{code:"HTG",name:"Haitian gourde",symbol:"G"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"ht",iso639_2:"hat",name:"Haitian",nativeName:"Krey\xF2l ayisyen"}],translations:{de:"Haiti",es:"Haiti",fr:"Ha\xEFti",ja:"\u30CF\u30A4\u30C1",it:"Haiti",br:"Haiti",pt:"Haiti",nl:"Ha\xEFti",hr:"Haiti",fa:"\u0647\u0627\u0626\u06CC\u062A\u06CC"},flag:"https://restcountries.eu/data/hti.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]}],cioc:"HAI"},{name:"Heard Island and McDonald Islands",topLevelDomain:[".hm",".aq"],alpha2Code:"HM",alpha3Code:"HMD",callingCodes:[""],capital:"",altSpellings:["HM"],region:"",subregion:"",population:0,latlng:[-53.1,72.51666666],demonym:"Heard and McDonald Islander",area:412,gini:null,timezones:["UTC+05:00"],borders:[],nativeName:"Heard Island and McDonald Islands",numericCode:"334",currencies:[{code:"AUD",name:"Australian dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Heard und die McDonaldinseln",es:"Islas Heard y McDonald",fr:"\xCEles Heard-et-MacDonald",ja:"\u30CF\u30FC\u30C9\u5CF6\u3068\u30DE\u30AF\u30C9\u30CA\u30EB\u30C9\u8AF8\u5CF6",it:"Isole Heard e McDonald",br:"Ilha Heard e Ilhas McDonald",pt:"Ilha Heard e Ilhas McDonald",nl:"Heard- en McDonaldeilanden",hr:"Otok Heard i oto\u010Dje McDonald",fa:"\u062C\u0632\u06CC\u0631\u0647 \u0647\u0631\u062F \u0648 \u062C\u0632\u0627\u06CC\u0631 \u0645\u06A9\u200C\u062F\u0648\u0646\u0627\u0644\u062F"},flag:"https://restcountries.eu/data/hmd.svg",regionalBlocs:[],cioc:""},{name:"Holy See",topLevelDomain:[".va"],alpha2Code:"VA",alpha3Code:"VAT",callingCodes:["379"],capital:"Rome",altSpellings:["Sancta Sedes","Vatican","The Vatican"],region:"Europe",subregion:"Southern Europe",population:451,latlng:[41.9,12.45],demonym:"",area:.44,gini:null,timezones:["UTC+01:00"],borders:["ITA"],nativeName:"Sancta Sedes",numericCode:"336",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"la",iso639_2:"lat",name:"Latin",nativeName:"latine"},{iso639_1:"it",iso639_2:"ita",name:"Italian",nativeName:"Italiano"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"de",iso639_2:"deu",name:"German",nativeName:"Deutsch"}],translations:{de:"Heiliger Stuhl",es:"Santa Sede",fr:"voir Saint",ja:"\u8056\u5EA7",it:"Santa Sede",br:"Vaticano",pt:"Vaticano",nl:"Heilige Stoel",hr:"Sveta Stolica",fa:"\u0633\u0631\u06CC\u0631 \u0645\u0642\u062F\u0633"},flag:"https://restcountries.eu/data/vat.svg",regionalBlocs:[],cioc:""},{name:"Honduras",topLevelDomain:[".hn"],alpha2Code:"HN",alpha3Code:"HND",callingCodes:["504"],capital:"Tegucigalpa",altSpellings:["HN","Republic of Honduras","Rep\xFAblica de Honduras"],region:"Americas",subregion:"Central America",population:8576532,latlng:[15,-86.5],demonym:"Honduran",area:112492,gini:57,timezones:["UTC-06:00"],borders:["GTM","SLV","NIC"],nativeName:"Honduras",numericCode:"340",currencies:[{code:"HNL",name:"Honduran lempira",symbol:"L"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Honduras",es:"Honduras",fr:"Honduras",ja:"\u30DB\u30F3\u30B8\u30E5\u30E9\u30B9",it:"Honduras",br:"Honduras",pt:"Honduras",nl:"Honduras",hr:"Honduras",fa:"\u0647\u0646\u062F\u0648\u0631\u0627\u0633"},flag:"https://restcountries.eu/data/hnd.svg",regionalBlocs:[{acronym:"CAIS",name:"Central American Integration System",otherAcronyms:["SICA"],otherNames:["Sistema de la Integraci\xF3n Centroamericana,"]}],cioc:"HON"},{name:"Hong Kong",topLevelDomain:[".hk"],alpha2Code:"HK",alpha3Code:"HKG",callingCodes:["852"],capital:"City of Victoria",altSpellings:["HK","\u9999\u6E2F"],region:"Asia",subregion:"Eastern Asia",population:7324300,latlng:[22.25,114.16666666],demonym:"Chinese",area:1104,gini:53.3,timezones:["UTC+08:00"],borders:["CHN"],nativeName:"\u9999\u6E2F",numericCode:"344",currencies:[{code:"HKD",name:"Hong Kong dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"zh",iso639_2:"zho",name:"Chinese",nativeName:"\u4E2D\u6587 (Zh\u014Dngw\xE9n)"}],translations:{de:"Hong Kong",es:"Hong Kong",fr:"Hong Kong",ja:"\u9999\u6E2F",it:"Hong Kong",br:"Hong Kong",pt:"Hong Kong",nl:"Hongkong",hr:"Hong Kong",fa:"\u0647\u0646\u06AF\u200C\u06A9\u0646\u06AF"},flag:"https://restcountries.eu/data/hkg.svg",regionalBlocs:[],cioc:"HKG"},{name:"Hungary",topLevelDomain:[".hu"],alpha2Code:"HU",alpha3Code:"HUN",callingCodes:["36"],capital:"Budapest",altSpellings:["HU"],region:"Europe",subregion:"Eastern Europe",population:9823e3,latlng:[47,20],demonym:"Hungarian",area:93028,gini:31.2,timezones:["UTC+01:00"],borders:["AUT","HRV","ROU","SRB","SVK","SVN","UKR"],nativeName:"Magyarorsz\xE1g",numericCode:"348",currencies:[{code:"HUF",name:"Hungarian forint",symbol:"Ft"}],languages:[{iso639_1:"hu",iso639_2:"hun",name:"Hungarian",nativeName:"magyar"}],translations:{de:"Ungarn",es:"Hungr\xEDa",fr:"Hongrie",ja:"\u30CF\u30F3\u30AC\u30EA\u30FC",it:"Ungheria",br:"Hungria",pt:"Hungria",nl:"Hongarije",hr:"Ma\u0111arska",fa:"\u0645\u062C\u0627\u0631\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/hun.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"HUN"},{name:"Iceland",topLevelDomain:[".is"],alpha2Code:"IS",alpha3Code:"ISL",callingCodes:["354"],capital:"Reykjav\xEDk",altSpellings:["IS","Island","Republic of Iceland","L\xFD\xF0veldi\xF0 \xCDsland"],region:"Europe",subregion:"Northern Europe",population:334300,latlng:[65,-18],demonym:"Icelander",area:103e3,gini:null,timezones:["UTC"],borders:[],nativeName:"\xCDsland",numericCode:"352",currencies:[{code:"ISK",name:"Icelandic kr\xF3na",symbol:"kr"}],languages:[{iso639_1:"is",iso639_2:"isl",name:"Icelandic",nativeName:"\xCDslenska"}],translations:{de:"Island",es:"Islandia",fr:"Islande",ja:"\u30A2\u30A4\u30B9\u30E9\u30F3\u30C9",it:"Islanda",br:"Isl\xE2ndia",pt:"Isl\xE2ndia",nl:"IJsland",hr:"Island",fa:"\u0627\u06CC\u0633\u0644\u0646\u062F"},flag:"https://restcountries.eu/data/isl.svg",regionalBlocs:[{acronym:"EFTA",name:"European Free Trade Association",otherAcronyms:[],otherNames:[]}],cioc:"ISL"},{name:"India",topLevelDomain:[".in"],alpha2Code:"IN",alpha3Code:"IND",callingCodes:["91"],capital:"New Delhi",altSpellings:["IN","Bh\u0101rat","Republic of India","Bharat Ganrajya"],region:"Asia",subregion:"Southern Asia",population:129521e4,latlng:[20,77],demonym:"Indian",area:3287590,gini:33.4,timezones:["UTC+05:30"],borders:["AFG","BGD","BTN","MMR","CHN","NPL","PAK","LKA"],nativeName:"\u092D\u093E\u0930\u0924",numericCode:"356",currencies:[{code:"INR",name:"Indian rupee",symbol:"\u20B9"}],languages:[{iso639_1:"hi",iso639_2:"hin",name:"Hindi",nativeName:"\u0939\u093F\u0928\u094D\u0926\u0940"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Indien",es:"India",fr:"Inde",ja:"\u30A4\u30F3\u30C9",it:"India",br:"\xCDndia",pt:"\xCDndia",nl:"India",hr:"Indija",fa:"\u0647\u0646\u062F"},flag:"https://restcountries.eu/data/ind.svg",regionalBlocs:[{acronym:"SAARC",name:"South Asian Association for Regional Cooperation",otherAcronyms:[],otherNames:[]}],cioc:"IND"},{name:"Indonesia",topLevelDomain:[".id"],alpha2Code:"ID",alpha3Code:"IDN",callingCodes:["62"],capital:"Jakarta",altSpellings:["ID","Republic of Indonesia","Republik Indonesia"],region:"Asia",subregion:"South-Eastern Asia",population:258705e3,latlng:[-5,120],demonym:"Indonesian",area:1904569,gini:34,timezones:["UTC+07:00","UTC+08:00","UTC+09:00"],borders:["TLS","MYS","PNG"],nativeName:"Indonesia",numericCode:"360",currencies:[{code:"IDR",name:"Indonesian rupiah",symbol:"Rp"}],languages:[{iso639_1:"id",iso639_2:"ind",name:"Indonesian",nativeName:"Bahasa Indonesia"}],translations:{de:"Indonesien",es:"Indonesia",fr:"Indon\xE9sie",ja:"\u30A4\u30F3\u30C9\u30CD\u30B7\u30A2",it:"Indonesia",br:"Indon\xE9sia",pt:"Indon\xE9sia",nl:"Indonesi\xEB",hr:"Indonezija",fa:"\u0627\u0646\u062F\u0648\u0646\u0632\u06CC"},flag:"https://restcountries.eu/data/idn.svg",regionalBlocs:[{acronym:"ASEAN",name:"Association of Southeast Asian Nations",otherAcronyms:[],otherNames:[]}],cioc:"INA"},{name:"C\xF4te d'Ivoire",topLevelDomain:[".ci"],alpha2Code:"CI",alpha3Code:"CIV",callingCodes:["225"],capital:"Yamoussoukro",altSpellings:["CI","Ivory Coast","Republic of C\xF4te d'Ivoire","R\xE9publique de C\xF4te d'Ivoire"],region:"Africa",subregion:"Western Africa",population:22671331,latlng:[8,-5],demonym:"Ivorian",area:322463,gini:41.5,timezones:["UTC"],borders:["BFA","GHA","GIN","LBR","MLI"],nativeName:"C\xF4te d'Ivoire",numericCode:"384",currencies:[{code:"XOF",name:"West African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Elfenbeink\xFCste",es:"Costa de Marfil",fr:"C\xF4te d'Ivoire",ja:"\u30B3\u30FC\u30C8\u30B8\u30DC\u30EF\u30FC\u30EB",it:"Costa D'Avorio",br:"Costa do Marfim",pt:"Costa do Marfim",nl:"Ivoorkust",hr:"Obala Bjelokosti",fa:"\u0633\u0627\u062D\u0644 \u0639\u0627\u062C"},flag:"https://restcountries.eu/data/civ.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"CIV"},{name:"Iran (Islamic Republic of)",topLevelDomain:[".ir"],alpha2Code:"IR",alpha3Code:"IRN",callingCodes:["98"],capital:"Tehran",altSpellings:["IR","Islamic Republic of Iran","Jomhuri-ye Esl\u0101mi-ye Ir\u0101n"],region:"Asia",subregion:"Southern Asia",population:79369900,latlng:[32,53],demonym:"Iranian",area:1648195,gini:38.3,timezones:["UTC+03:30"],borders:["AFG","ARM","AZE","IRQ","PAK","TUR","TKM"],nativeName:"\u0627\u06CC\u0631\u0627\u0646",numericCode:"364",currencies:[{code:"IRR",name:"Iranian rial",symbol:"\uFDFC"}],languages:[{iso639_1:"fa",iso639_2:"fas",name:"Persian (Farsi)",nativeName:"\u0641\u0627\u0631\u0633\u06CC"}],translations:{de:"Iran",es:"Iran",fr:"Iran",ja:"\u30A4\u30E9\u30F3\u30FB\u30A4\u30B9\u30E9\u30E0\u5171\u548C\u56FD",it:null,br:"Ir\xE3",pt:"Ir\xE3o",nl:"Iran",hr:"Iran",fa:"\u0627\u06CC\u0631\u0627\u0646"},flag:"https://restcountries.eu/data/irn.svg",regionalBlocs:[],cioc:"IRI"},{name:"Iraq",topLevelDomain:[".iq"],alpha2Code:"IQ",alpha3Code:"IRQ",callingCodes:["964"],capital:"Baghdad",altSpellings:["IQ","Republic of Iraq","Jumh\u016Briyyat al-\u2018Ir\u0101q"],region:"Asia",subregion:"Western Asia",population:37883543,latlng:[33,44],demonym:"Iraqi",area:438317,gini:30.9,timezones:["UTC+03:00"],borders:["IRN","JOR","KWT","SAU","SYR","TUR"],nativeName:"\u0627\u0644\u0639\u0631\u0627\u0642",numericCode:"368",currencies:[{code:"IQD",name:"Iraqi dinar",symbol:"\u0639.\u062F"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},{iso639_1:"ku",iso639_2:"kur",name:"Kurdish",nativeName:"Kurd\xEE"}],translations:{de:"Irak",es:"Irak",fr:"Irak",ja:"\u30A4\u30E9\u30AF",it:"Iraq",br:"Iraque",pt:"Iraque",nl:"Irak",hr:"Irak",fa:"\u0639\u0631\u0627\u0642"},flag:"https://restcountries.eu/data/irq.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"IRQ"},{name:"Ireland",topLevelDomain:[".ie"],alpha2Code:"IE",alpha3Code:"IRL",callingCodes:["353"],capital:"Dublin",altSpellings:["IE","\xC9ire","Republic of Ireland","Poblacht na h\xC9ireann"],region:"Europe",subregion:"Northern Europe",population:6378e3,latlng:[53,-8],demonym:"Irish",area:70273,gini:34.3,timezones:["UTC"],borders:["GBR"],nativeName:"\xC9ire",numericCode:"372",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"ga",iso639_2:"gle",name:"Irish",nativeName:"Gaeilge"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Irland",es:"Irlanda",fr:"Irlande",ja:"\u30A2\u30A4\u30EB\u30E9\u30F3\u30C9",it:"Irlanda",br:"Irlanda",pt:"Irlanda",nl:"Ierland",hr:"Irska",fa:"\u0627\u06CC\u0631\u0644\u0646\u062F"},flag:"https://restcountries.eu/data/irl.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"IRL"},{name:"Isle of Man",topLevelDomain:[".im"],alpha2Code:"IM",alpha3Code:"IMN",callingCodes:["44"],capital:"Douglas",altSpellings:["IM","Ellan Vannin","Mann","Mannin"],region:"Europe",subregion:"Northern Europe",population:84497,latlng:[54.25,-4.5],demonym:"Manx",area:572,gini:null,timezones:["UTC+00:00"],borders:[],nativeName:"Isle of Man",numericCode:"833",currencies:[{code:"GBP",name:"British pound",symbol:"\xA3"},{code:"IMP[G]",name:"Manx pound",symbol:"\xA3"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"gv",iso639_2:"glv",name:"Manx",nativeName:"Gaelg"}],translations:{de:"Insel Man",es:"Isla de Man",fr:"\xCEle de Man",ja:"\u30DE\u30F3\u5CF6",it:"Isola di Man",br:"Ilha de Man",pt:"Ilha de Man",nl:"Isle of Man",hr:"Otok Man",fa:"\u062C\u0632\u06CC\u0631\u0647 \u0645\u0646"},flag:"https://restcountries.eu/data/imn.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:""},{name:"Israel",topLevelDomain:[".il"],alpha2Code:"IL",alpha3Code:"ISR",callingCodes:["972"],capital:"Jerusalem",altSpellings:["IL","State of Israel","Med\u012Bnat Yisr\u0101'el"],region:"Asia",subregion:"Western Asia",population:8527400,latlng:[31.5,34.75],demonym:"Israeli",area:20770,gini:39.2,timezones:["UTC+02:00"],borders:["EGY","JOR","LBN","SYR"],nativeName:"\u05D9\u05B4\u05E9\u05B0\u05C2\u05E8\u05B8\u05D0\u05B5\u05DC",numericCode:"376",currencies:[{code:"ILS",name:"Israeli new shekel",symbol:"\u20AA"}],languages:[{iso639_1:"he",iso639_2:"heb",name:"Hebrew (modern)",nativeName:"\u05E2\u05D1\u05E8\u05D9\u05EA"},{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Israel",es:"Israel",fr:"Isra\xEBl",ja:"\u30A4\u30B9\u30E9\u30A8\u30EB",it:"Israele",br:"Israel",pt:"Israel",nl:"Isra\xEBl",hr:"Izrael",fa:"\u0627\u0633\u0631\u0627\u0626\u06CC\u0644"},flag:"https://restcountries.eu/data/isr.svg",regionalBlocs:[],cioc:"ISR"},{name:"Italy",topLevelDomain:[".it"],alpha2Code:"IT",alpha3Code:"ITA",callingCodes:["39"],capital:"Rome",altSpellings:["IT","Italian Republic","Repubblica italiana"],region:"Europe",subregion:"Southern Europe",population:60665551,latlng:[42.83333333,12.83333333],demonym:"Italian",area:301336,gini:36,timezones:["UTC+01:00"],borders:["AUT","FRA","SMR","SVN","CHE","VAT"],nativeName:"Italia",numericCode:"380",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"it",iso639_2:"ita",name:"Italian",nativeName:"Italiano"}],translations:{de:"Italien",es:"Italia",fr:"Italie",ja:"\u30A4\u30BF\u30EA\u30A2",it:"Italia",br:"It\xE1lia",pt:"It\xE1lia",nl:"Itali\xEB",hr:"Italija",fa:"\u0627\u06CC\u062A\u0627\u0644\u06CC\u0627"},flag:"https://restcountries.eu/data/ita.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"ITA"},{name:"Jamaica",topLevelDomain:[".jm"],alpha2Code:"JM",alpha3Code:"JAM",callingCodes:["1876"],capital:"Kingston",altSpellings:["JM"],region:"Americas",subregion:"Caribbean",population:2723246,latlng:[18.25,-77.5],demonym:"Jamaican",area:10991,gini:45.5,timezones:["UTC-05:00"],borders:[],nativeName:"Jamaica",numericCode:"388",currencies:[{code:"JMD",name:"Jamaican dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Jamaika",es:"Jamaica",fr:"Jama\xEFque",ja:"\u30B8\u30E3\u30DE\u30A4\u30AB",it:"Giamaica",br:"Jamaica",pt:"Jamaica",nl:"Jamaica",hr:"Jamajka",fa:"\u062C\u0627\u0645\u0627\u0626\u06CC\u06A9\u0627"},flag:"https://restcountries.eu/data/jam.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]}],cioc:"JAM"},{name:"Japan",topLevelDomain:[".jp"],alpha2Code:"JP",alpha3Code:"JPN",callingCodes:["81"],capital:"Tokyo",altSpellings:["JP","Nippon","Nihon"],region:"Asia",subregion:"Eastern Asia",population:12696e4,latlng:[36,138],demonym:"Japanese",area:377930,gini:38.1,timezones:["UTC+09:00"],borders:[],nativeName:"\u65E5\u672C",numericCode:"392",currencies:[{code:"JPY",name:"Japanese yen",symbol:"\xA5"}],languages:[{iso639_1:"ja",iso639_2:"jpn",name:"Japanese",nativeName:"\u65E5\u672C\u8A9E (\u306B\u307B\u3093\u3054)"}],translations:{de:"Japan",es:"Jap\xF3n",fr:"Japon",ja:"\u65E5\u672C",it:"Giappone",br:"Jap\xE3o",pt:"Jap\xE3o",nl:"Japan",hr:"Japan",fa:"\u0698\u0627\u067E\u0646"},flag:"https://restcountries.eu/data/jpn.svg",regionalBlocs:[],cioc:"JPN"},{name:"Jersey",topLevelDomain:[".je"],alpha2Code:"JE",alpha3Code:"JEY",callingCodes:["44"],capital:"Saint Helier",altSpellings:["JE","Bailiwick of Jersey","Bailliage de Jersey","Bailliage d\xE9 J\xE8rri"],region:"Europe",subregion:"Northern Europe",population:100800,latlng:[49.25,-2.16666666],demonym:"Channel Islander",area:116,gini:null,timezones:["UTC+01:00"],borders:[],nativeName:"Jersey",numericCode:"832",currencies:[{code:"GBP",name:"British pound",symbol:"\xA3"},{code:"JEP[G]",name:"Jersey pound",symbol:"\xA3"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Jersey",es:"Jersey",fr:"Jersey",ja:"\u30B8\u30E3\u30FC\u30B8\u30FC",it:"Isola di Jersey",br:"Jersey",pt:"Jersey",nl:"Jersey",hr:"Jersey",fa:"\u062C\u0631\u0632\u06CC"},flag:"https://restcountries.eu/data/jey.svg",regionalBlocs:[],cioc:""},{name:"Jordan",topLevelDomain:[".jo"],alpha2Code:"JO",alpha3Code:"JOR",callingCodes:["962"],capital:"Amman",altSpellings:["JO","Hashemite Kingdom of Jordan","al-Mamlakah al-Urdun\u012Byah al-H\u0101shim\u012Byah"],region:"Asia",subregion:"Western Asia",population:9531712,latlng:[31,36],demonym:"Jordanian",area:89342,gini:35.4,timezones:["UTC+03:00"],borders:["IRQ","ISR","SAU","SYR"],nativeName:"\u0627\u0644\u0623\u0631\u062F\u0646",numericCode:"400",currencies:[{code:"JOD",name:"Jordanian dinar",symbol:"\u062F.\u0627"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Jordanien",es:"Jordania",fr:"Jordanie",ja:"\u30E8\u30EB\u30C0\u30F3",it:"Giordania",br:"Jord\xE2nia",pt:"Jord\xE2nia",nl:"Jordani\xEB",hr:"Jordan",fa:"\u0627\u0631\u062F\u0646"},flag:"https://restcountries.eu/data/jor.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"JOR"},{name:"Kazakhstan",topLevelDomain:[".kz",".\u049B\u0430\u0437"],alpha2Code:"KZ",alpha3Code:"KAZ",callingCodes:["76","77"],capital:"Astana",altSpellings:["KZ","Qazaqstan","\u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D","Republic of Kazakhstan","\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430\u0441\u044B","Qazaqstan Respubl\xEFkas\u0131","\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D","Respublika Kazakhstan"],region:"Asia",subregion:"Central Asia",population:17753200,latlng:[48,68],demonym:"Kazakhstani",area:2724900,gini:29,timezones:["UTC+05:00","UTC+06:00"],borders:["CHN","KGZ","RUS","TKM","UZB"],nativeName:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D",numericCode:"398",currencies:[{code:"KZT",name:"Kazakhstani tenge",symbol:null}],languages:[{iso639_1:"kk",iso639_2:"kaz",name:"Kazakh",nativeName:"\u049B\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},{iso639_1:"ru",iso639_2:"rus",name:"Russian",nativeName:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"}],translations:{de:"Kasachstan",es:"Kazajist\xE1n",fr:"Kazakhstan",ja:"\u30AB\u30B6\u30D5\u30B9\u30BF\u30F3",it:"Kazakistan",br:"Cazaquist\xE3o",pt:"Cazaquist\xE3o",nl:"Kazachstan",hr:"Kazahstan",fa:"\u0642\u0632\u0627\u0642\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/kaz.svg",regionalBlocs:[{acronym:"EEU",name:"Eurasian Economic Union",otherAcronyms:["EAEU"],otherNames:[]}],cioc:"KAZ"},{name:"Kenya",topLevelDomain:[".ke"],alpha2Code:"KE",alpha3Code:"KEN",callingCodes:["254"],capital:"Nairobi",altSpellings:["KE","Republic of Kenya","Jamhuri ya Kenya"],region:"Africa",subregion:"Eastern Africa",population:47251e3,latlng:[1,38],demonym:"Kenyan",area:580367,gini:47.7,timezones:["UTC+03:00"],borders:["ETH","SOM","SSD","TZA","UGA"],nativeName:"Kenya",numericCode:"404",currencies:[{code:"KES",name:"Kenyan shilling",symbol:"Sh"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"sw",iso639_2:"swa",name:"Swahili",nativeName:"Kiswahili"}],translations:{de:"Kenia",es:"Kenia",fr:"Kenya",ja:"\u30B1\u30CB\u30A2",it:"Kenya",br:"Qu\xEAnia",pt:"Qu\xE9nia",nl:"Kenia",hr:"Kenija",fa:"\u06A9\u0646\u06CC\u0627"},flag:"https://restcountries.eu/data/ken.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"KEN"},{name:"Kiribati",topLevelDomain:[".ki"],alpha2Code:"KI",alpha3Code:"KIR",callingCodes:["686"],capital:"South Tarawa",altSpellings:["KI","Republic of Kiribati","Ribaberiki Kiribati"],region:"Oceania",subregion:"Micronesia",population:113400,latlng:[1.41666666,173],demonym:"I-Kiribati",area:811,gini:null,timezones:["UTC+12:00","UTC+13:00","UTC+14:00"],borders:[],nativeName:"Kiribati",numericCode:"296",currencies:[{code:"AUD",name:"Australian dollar",symbol:"$"},{code:"(none)",name:"Kiribati dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Kiribati",es:"Kiribati",fr:"Kiribati",ja:"\u30AD\u30EA\u30D0\u30B9",it:"Kiribati",br:"Kiribati",pt:"Quirib\xE1ti",nl:"Kiribati",hr:"Kiribati",fa:"\u06A9\u06CC\u0631\u06CC\u0628\u0627\u062A\u06CC"},flag:"https://restcountries.eu/data/kir.svg",regionalBlocs:[],cioc:"KIR"},{name:"Kuwait",topLevelDomain:[".kw"],alpha2Code:"KW",alpha3Code:"KWT",callingCodes:["965"],capital:"Kuwait City",altSpellings:["KW","State of Kuwait","Dawlat al-Kuwait"],region:"Asia",subregion:"Western Asia",population:4183658,latlng:[29.5,45.75],demonym:"Kuwaiti",area:17818,gini:null,timezones:["UTC+03:00"],borders:["IRN","SAU"],nativeName:"\u0627\u0644\u0643\u0648\u064A\u062A",numericCode:"414",currencies:[{code:"KWD",name:"Kuwaiti dinar",symbol:"\u062F.\u0643"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Kuwait",es:"Kuwait",fr:"Kowe\xEFt",ja:"\u30AF\u30A6\u30A7\u30FC\u30C8",it:"Kuwait",br:"Kuwait",pt:"Kuwait",nl:"Koeweit",hr:"Kuvajt",fa:"\u06A9\u0648\u06CC\u062A"},flag:"https://restcountries.eu/data/kwt.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"KUW"},{name:"Kyrgyzstan",topLevelDomain:[".kg"],alpha2Code:"KG",alpha3Code:"KGZ",callingCodes:["996"],capital:"Bishkek",altSpellings:["KG","\u041A\u0438\u0440\u0433\u0438\u0437\u0438\u044F","Kyrgyz Republic","\u041A\u044B\u0440\u0433\u044B\u0437 \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430\u0441\u044B","Kyrgyz Respublikasy"],region:"Asia",subregion:"Central Asia",population:6047800,latlng:[41,75],demonym:"Kirghiz",area:199951,gini:36.2,timezones:["UTC+06:00"],borders:["CHN","KAZ","TJK","UZB"],nativeName:"\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D",numericCode:"417",currencies:[{code:"KGS",name:"Kyrgyzstani som",symbol:"\u0441"}],languages:[{iso639_1:"ky",iso639_2:"kir",name:"Kyrgyz",nativeName:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},{iso639_1:"ru",iso639_2:"rus",name:"Russian",nativeName:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"}],translations:{de:"Kirgisistan",es:"Kirguizist\xE1n",fr:"Kirghizistan",ja:"\u30AD\u30EB\u30AE\u30B9",it:"Kirghizistan",br:"Quirguist\xE3o",pt:"Quirguizist\xE3o",nl:"Kirgizi\xEB",hr:"Kirgistan",fa:"\u0642\u0631\u0642\u06CC\u0632\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/kgz.svg",regionalBlocs:[{acronym:"EEU",name:"Eurasian Economic Union",otherAcronyms:["EAEU"],otherNames:[]}],cioc:"KGZ"},{name:"Lao People's Democratic Republic",topLevelDomain:[".la"],alpha2Code:"LA",alpha3Code:"LAO",callingCodes:["856"],capital:"Vientiane",altSpellings:["LA","Lao","Laos","Lao People's Democratic Republic","Sathalanalat Paxathipatai Paxaxon Lao"],region:"Asia",subregion:"South-Eastern Asia",population:6492400,latlng:[18,105],demonym:"Laotian",area:236800,gini:36.7,timezones:["UTC+07:00"],borders:["MMR","KHM","CHN","THA","VNM"],nativeName:"\u0EAA\u0E9B\u0E9B\u0EA5\u0EB2\u0EA7",numericCode:"418",currencies:[{code:"LAK",name:"Lao kip",symbol:"\u20AD"}],languages:[{iso639_1:"lo",iso639_2:"lao",name:"Lao",nativeName:"\u0E9E\u0EB2\u0EAA\u0EB2\u0EA5\u0EB2\u0EA7"}],translations:{de:"Laos",es:"Laos",fr:"Laos",ja:"\u30E9\u30AA\u30B9\u4EBA\u6C11\u6C11\u4E3B\u5171\u548C\u56FD",it:"Laos",br:"Laos",pt:"Laos",nl:"Laos",hr:"Laos",fa:"\u0644\u0627\u0626\u0648\u0633"},flag:"https://restcountries.eu/data/lao.svg",regionalBlocs:[{acronym:"ASEAN",name:"Association of Southeast Asian Nations",otherAcronyms:[],otherNames:[]}],cioc:"LAO"},{name:"Latvia",topLevelDomain:[".lv"],alpha2Code:"LV",alpha3Code:"LVA",callingCodes:["371"],capital:"Riga",altSpellings:["LV","Republic of Latvia","Latvijas Republika"],region:"Europe",subregion:"Northern Europe",population:1961600,latlng:[57,25],demonym:"Latvian",area:64559,gini:36.6,timezones:["UTC+02:00"],borders:["BLR","EST","LTU","RUS"],nativeName:"Latvija",numericCode:"428",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"lv",iso639_2:"lav",name:"Latvian",nativeName:"latvie\u0161u valoda"}],translations:{de:"Lettland",es:"Letonia",fr:"Lettonie",ja:"\u30E9\u30C8\u30D3\u30A2",it:"Lettonia",br:"Let\xF4nia",pt:"Let\xF3nia",nl:"Letland",hr:"Latvija",fa:"\u0644\u062A\u0648\u0646\u06CC"},flag:"https://restcountries.eu/data/lva.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"LAT"},{name:"Lebanon",topLevelDomain:[".lb"],alpha2Code:"LB",alpha3Code:"LBN",callingCodes:["961"],capital:"Beirut",altSpellings:["LB","Lebanese Republic","Al-Jumh\u016Br\u012Byah Al-Libn\u0101n\u012Byah"],region:"Asia",subregion:"Western Asia",population:5988e3,latlng:[33.83333333,35.83333333],demonym:"Lebanese",area:10452,gini:null,timezones:["UTC+02:00"],borders:["ISR","SYR"],nativeName:"\u0644\u0628\u0646\u0627\u0646",numericCode:"422",currencies:[{code:"LBP",name:"Lebanese pound",symbol:"\u0644.\u0644"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Libanon",es:"L\xEDbano",fr:"Liban",ja:"\u30EC\u30D0\u30CE\u30F3",it:"Libano",br:"L\xEDbano",pt:"L\xEDbano",nl:"Libanon",hr:"Libanon",fa:"\u0644\u0628\u0646\u0627\u0646"},flag:"https://restcountries.eu/data/lbn.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"LIB"},{name:"Lesotho",topLevelDomain:[".ls"],alpha2Code:"LS",alpha3Code:"LSO",callingCodes:["266"],capital:"Maseru",altSpellings:["LS","Kingdom of Lesotho","Muso oa Lesotho"],region:"Africa",subregion:"Southern Africa",population:1894194,latlng:[-29.5,28.5],demonym:"Mosotho",area:30355,gini:52.5,timezones:["UTC+02:00"],borders:["ZAF"],nativeName:"Lesotho",numericCode:"426",currencies:[{code:"LSL",name:"Lesotho loti",symbol:"L"},{code:"ZAR",name:"South African rand",symbol:"R"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"st",iso639_2:"sot",name:"Southern Sotho",nativeName:"Sesotho"}],translations:{de:"Lesotho",es:"Lesotho",fr:"Lesotho",ja:"\u30EC\u30BD\u30C8",it:"Lesotho",br:"Lesoto",pt:"Lesoto",nl:"Lesotho",hr:"Lesoto",fa:"\u0644\u0633\u0648\u062A\u0648"},flag:"https://restcountries.eu/data/lso.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"LES"},{name:"Liberia",topLevelDomain:[".lr"],alpha2Code:"LR",alpha3Code:"LBR",callingCodes:["231"],capital:"Monrovia",altSpellings:["LR","Republic of Liberia"],region:"Africa",subregion:"Western Africa",population:4615e3,latlng:[6.5,-9.5],demonym:"Liberian",area:111369,gini:38.2,timezones:["UTC"],borders:["GIN","CIV","SLE"],nativeName:"Liberia",numericCode:"430",currencies:[{code:"LRD",name:"Liberian dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Liberia",es:"Liberia",fr:"Liberia",ja:"\u30EA\u30D9\u30EA\u30A2",it:"Liberia",br:"Lib\xE9ria",pt:"Lib\xE9ria",nl:"Liberia",hr:"Liberija",fa:"\u0644\u06CC\u0628\u0631\u06CC\u0627"},flag:"https://restcountries.eu/data/lbr.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"LBR"},{name:"Libya",topLevelDomain:[".ly"],alpha2Code:"LY",alpha3Code:"LBY",callingCodes:["218"],capital:"Tripoli",altSpellings:["LY","State of Libya","Dawlat Libya"],region:"Africa",subregion:"Northern Africa",population:6385e3,latlng:[25,17],demonym:"Libyan",area:1759540,gini:null,timezones:["UTC+01:00"],borders:["DZA","TCD","EGY","NER","SDN","TUN"],nativeName:"\u200F\u0644\u064A\u0628\u064A\u0627",numericCode:"434",currencies:[{code:"LYD",name:"Libyan dinar",symbol:"\u0644.\u062F"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Libyen",es:"Libia",fr:"Libye",ja:"\u30EA\u30D3\u30A2",it:"Libia",br:"L\xEDbia",pt:"L\xEDbia",nl:"Libi\xEB",hr:"Libija",fa:"\u0644\u06CC\u0628\u06CC"},flag:"https://restcountries.eu/data/lby.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]},{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"LBA"},{name:"Liechtenstein",topLevelDomain:[".li"],alpha2Code:"LI",alpha3Code:"LIE",callingCodes:["423"],capital:"Vaduz",altSpellings:["LI","Principality of Liechtenstein","F\xFCrstentum Liechtenstein"],region:"Europe",subregion:"Western Europe",population:37623,latlng:[47.26666666,9.53333333],demonym:"Liechtensteiner",area:160,gini:null,timezones:["UTC+01:00"],borders:["AUT","CHE"],nativeName:"Liechtenstein",numericCode:"438",currencies:[{code:"CHF",name:"Swiss franc",symbol:"Fr"}],languages:[{iso639_1:"de",iso639_2:"deu",name:"German",nativeName:"Deutsch"}],translations:{de:"Liechtenstein",es:"Liechtenstein",fr:"Liechtenstein",ja:"\u30EA\u30D2\u30C6\u30F3\u30B7\u30E5\u30BF\u30A4\u30F3",it:"Liechtenstein",br:"Liechtenstein",pt:"Listenstaine",nl:"Liechtenstein",hr:"Lihten\u0161tajn",fa:"\u0644\u06CC\u062E\u062A\u0646\u200C\u0627\u0634\u062A\u0627\u06CC\u0646"},flag:"https://restcountries.eu/data/lie.svg",regionalBlocs:[{acronym:"EFTA",name:"European Free Trade Association",otherAcronyms:[],otherNames:[]}],cioc:"LIE"},{name:"Lithuania",topLevelDomain:[".lt"],alpha2Code:"LT",alpha3Code:"LTU",callingCodes:["370"],capital:"Vilnius",altSpellings:["LT","Republic of Lithuania","Lietuvos Respublika"],region:"Europe",subregion:"Northern Europe",population:2872294,latlng:[56,24],demonym:"Lithuanian",area:65300,gini:37.6,timezones:["UTC+02:00"],borders:["BLR","LVA","POL","RUS"],nativeName:"Lietuva",numericCode:"440",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"lt",iso639_2:"lit",name:"Lithuanian",nativeName:"lietuvi\u0173 kalba"}],translations:{de:"Litauen",es:"Lituania",fr:"Lituanie",ja:"\u30EA\u30C8\u30A2\u30CB\u30A2",it:"Lituania",br:"Litu\xE2nia",pt:"Litu\xE2nia",nl:"Litouwen",hr:"Litva",fa:"\u0644\u06CC\u062A\u0648\u0627\u0646\u06CC"},flag:"https://restcountries.eu/data/ltu.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"LTU"},{name:"Luxembourg",topLevelDomain:[".lu"],alpha2Code:"LU",alpha3Code:"LUX",callingCodes:["352"],capital:"Luxembourg",altSpellings:["LU","Grand Duchy of Luxembourg","Grand-Duch\xE9 de Luxembourg","Gro\xDFherzogtum Luxemburg","Groussherzogtum L\xEBtzebuerg"],region:"Europe",subregion:"Western Europe",population:576200,latlng:[49.75,6.16666666],demonym:"Luxembourger",area:2586,gini:30.8,timezones:["UTC+01:00"],borders:["BEL","FRA","DEU"],nativeName:"Luxembourg",numericCode:"442",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"de",iso639_2:"deu",name:"German",nativeName:"Deutsch"},{iso639_1:"lb",iso639_2:"ltz",name:"Luxembourgish",nativeName:"L\xEBtzebuergesch"}],translations:{de:"Luxemburg",es:"Luxemburgo",fr:"Luxembourg",ja:"\u30EB\u30AF\u30BB\u30F3\u30D6\u30EB\u30AF",it:"Lussemburgo",br:"Luxemburgo",pt:"Luxemburgo",nl:"Luxemburg",hr:"Luksemburg",fa:"\u0644\u0648\u06A9\u0632\u0627\u0645\u0628\u0648\u0631\u06AF"},flag:"https://restcountries.eu/data/lux.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"LUX"},{name:"Macao",topLevelDomain:[".mo"],alpha2Code:"MO",alpha3Code:"MAC",callingCodes:["853"],capital:"",altSpellings:["MO","\u6FB3\u95E8","Macao Special Administrative Region of the People's Republic of China","\u4E2D\u83EF\u4EBA\u6C11\u5171\u548C\u570B\u6FB3\u9580\u7279\u5225\u884C\u653F\u5340","Regi\xE3o Administrativa Especial de Macau da Rep\xFAblica Popular da China"],region:"Asia",subregion:"Eastern Asia",population:649100,latlng:[22.16666666,113.55],demonym:"Chinese",area:30,gini:null,timezones:["UTC+08:00"],borders:["CHN"],nativeName:"\u6FB3\u9580",numericCode:"446",currencies:[{code:"MOP",name:"Macanese pataca",symbol:"P"}],languages:[{iso639_1:"zh",iso639_2:"zho",name:"Chinese",nativeName:"\u4E2D\u6587 (Zh\u014Dngw\xE9n)"},{iso639_1:"pt",iso639_2:"por",name:"Portuguese",nativeName:"Portugu\xEAs"}],translations:{de:"Macao",es:"Macao",fr:"Macao",ja:"\u30DE\u30AB\u30AA",it:"Macao",br:"Macau",pt:"Macau",nl:"Macao",hr:"Makao",fa:"\u0645\u06A9\u0627\u0626\u0648"},flag:"https://restcountries.eu/data/mac.svg",regionalBlocs:[],cioc:""},{name:"Macedonia (the former Yugoslav Republic of)",topLevelDomain:[".mk"],alpha2Code:"MK",alpha3Code:"MKD",callingCodes:["389"],capital:"Skopje",altSpellings:["MK","Republic of Macedonia","\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430"],region:"Europe",subregion:"Southern Europe",population:2058539,latlng:[41.83333333,22],demonym:"Macedonian",area:25713,gini:43.2,timezones:["UTC+01:00"],borders:["ALB","BGR","GRC","KOS","SRB"],nativeName:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430",numericCode:"807",currencies:[{code:"MKD",name:"Macedonian denar",symbol:"\u0434\u0435\u043D"}],languages:[{iso639_1:"mk",iso639_2:"mkd",name:"Macedonian",nativeName:"\u043C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 \u0458\u0430\u0437\u0438\u043A"}],translations:{de:"Mazedonien",es:"Macedonia",fr:"Mac\xE9doine",ja:"\u30DE\u30B1\u30C9\u30CB\u30A2\u65E7\u30E6\u30FC\u30B4\u30B9\u30E9\u30D3\u30A2\u5171\u548C\u56FD",it:"Macedonia",br:"Maced\xF4nia",pt:"Maced\xF3nia",nl:"Macedoni\xEB",hr:"Makedonija",fa:""},flag:"https://restcountries.eu/data/mkd.svg",regionalBlocs:[{acronym:"CEFTA",name:"Central European Free Trade Agreement",otherAcronyms:[],otherNames:[]}],cioc:"MKD"},{name:"Madagascar",topLevelDomain:[".mg"],alpha2Code:"MG",alpha3Code:"MDG",callingCodes:["261"],capital:"Antananarivo",altSpellings:["MG","Republic of Madagascar","Repoblikan'i Madagasikara","R\xE9publique de Madagascar"],region:"Africa",subregion:"Eastern Africa",population:22434363,latlng:[-20,47],demonym:"Malagasy",area:587041,gini:44.1,timezones:["UTC+03:00"],borders:[],nativeName:"Madagasikara",numericCode:"450",currencies:[{code:"MGA",name:"Malagasy ariary",symbol:"Ar"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"mg",iso639_2:"mlg",name:"Malagasy",nativeName:"fiteny malagasy"}],translations:{de:"Madagaskar",es:"Madagascar",fr:"Madagascar",ja:"\u30DE\u30C0\u30AC\u30B9\u30AB\u30EB",it:"Madagascar",br:"Madagascar",pt:"Madag\xE1scar",nl:"Madagaskar",hr:"Madagaskar",fa:"\u0645\u0627\u062F\u0627\u06AF\u0627\u0633\u06A9\u0627\u0631"},flag:"https://restcountries.eu/data/mdg.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"MAD"},{name:"Malawi",topLevelDomain:[".mw"],alpha2Code:"MW",alpha3Code:"MWI",callingCodes:["265"],capital:"Lilongwe",altSpellings:["MW","Republic of Malawi"],region:"Africa",subregion:"Eastern Africa",population:16832910,latlng:[-13.5,34],demonym:"Malawian",area:118484,gini:39,timezones:["UTC+02:00"],borders:["MOZ","TZA","ZMB"],nativeName:"Malawi",numericCode:"454",currencies:[{code:"MWK",name:"Malawian kwacha",symbol:"MK"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"ny",iso639_2:"nya",name:"Chichewa",nativeName:"chiChe\u0175a"}],translations:{de:"Malawi",es:"Malawi",fr:"Malawi",ja:"\u30DE\u30E9\u30A6\u30A4",it:"Malawi",br:"Malawi",pt:"Mal\xE1vi",nl:"Malawi",hr:"Malavi",fa:"\u0645\u0627\u0644\u0627\u0648\u06CC"},flag:"https://restcountries.eu/data/mwi.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"MAW"},{name:"Malaysia",topLevelDomain:[".my"],alpha2Code:"MY",alpha3Code:"MYS",callingCodes:["60"],capital:"Kuala Lumpur",altSpellings:["MY"],region:"Asia",subregion:"South-Eastern Asia",population:31405416,latlng:[2.5,112.5],demonym:"Malaysian",area:330803,gini:46.2,timezones:["UTC+08:00"],borders:["BRN","IDN","THA"],nativeName:"Malaysia",numericCode:"458",currencies:[{code:"MYR",name:"Malaysian ringgit",symbol:"RM"}],languages:[{iso639_1:null,iso639_2:"zsm",name:"Malaysian",nativeName:"\u0628\u0647\u0627\u0633 \u0645\u0644\u064A\u0633\u064A\u0627"}],translations:{de:"Malaysia",es:"Malasia",fr:"Malaisie",ja:"\u30DE\u30EC\u30FC\u30B7\u30A2",it:"Malesia",br:"Mal\xE1sia",pt:"Mal\xE1sia",nl:"Maleisi\xEB",hr:"Malezija",fa:"\u0645\u0627\u0644\u0632\u06CC"},flag:"https://restcountries.eu/data/mys.svg",regionalBlocs:[{acronym:"ASEAN",name:"Association of Southeast Asian Nations",otherAcronyms:[],otherNames:[]}],cioc:"MAS"},{name:"Maldives",topLevelDomain:[".mv"],alpha2Code:"MV",alpha3Code:"MDV",callingCodes:["960"],capital:"Mal\xE9",altSpellings:["MV","Maldive Islands","Republic of the Maldives","Dhivehi Raajjeyge Jumhooriyya"],region:"Asia",subregion:"Southern Asia",population:344023,latlng:[3.25,73],demonym:"Maldivan",area:300,gini:37.4,timezones:["UTC+05:00"],borders:[],nativeName:"Maldives",numericCode:"462",currencies:[{code:"MVR",name:"Maldivian rufiyaa",symbol:".\u0783"}],languages:[{iso639_1:"dv",iso639_2:"div",name:"Divehi",nativeName:"\u078B\u07A8\u0788\u07AC\u0780\u07A8"}],translations:{de:"Malediven",es:"Maldivas",fr:"Maldives",ja:"\u30E2\u30EB\u30C7\u30A3\u30D6",it:"Maldive",br:"Maldivas",pt:"Maldivas",nl:"Maldiven",hr:"Maldivi",fa:"\u0645\u0627\u0644\u062F\u06CC\u0648"},flag:"https://restcountries.eu/data/mdv.svg",regionalBlocs:[{acronym:"SAARC",name:"South Asian Association for Regional Cooperation",otherAcronyms:[],otherNames:[]}],cioc:"MDV"},{name:"Mali",topLevelDomain:[".ml"],alpha2Code:"ML",alpha3Code:"MLI",callingCodes:["223"],capital:"Bamako",altSpellings:["ML","Republic of Mali","R\xE9publique du Mali"],region:"Africa",subregion:"Western Africa",population:18135e3,latlng:[17,-4],demonym:"Malian",area:1240192,gini:33,timezones:["UTC"],borders:["DZA","BFA","GIN","CIV","MRT","NER","SEN"],nativeName:"Mali",numericCode:"466",currencies:[{code:"XOF",name:"West African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Mali",es:"Mali",fr:"Mali",ja:"\u30DE\u30EA",it:"Mali",br:"Mali",pt:"Mali",nl:"Mali",hr:"Mali",fa:"\u0645\u0627\u0644\u06CC"},flag:"https://restcountries.eu/data/mli.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"MLI"},{name:"Malta",topLevelDomain:[".mt"],alpha2Code:"MT",alpha3Code:"MLT",callingCodes:["356"],capital:"Valletta",altSpellings:["MT","Republic of Malta","Repubblika ta' Malta"],region:"Europe",subregion:"Southern Europe",population:425384,latlng:[35.83333333,14.58333333],demonym:"Maltese",area:316,gini:null,timezones:["UTC+01:00"],borders:[],nativeName:"Malta",numericCode:"470",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"mt",iso639_2:"mlt",name:"Maltese",nativeName:"Malti"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Malta",es:"Malta",fr:"Malte",ja:"\u30DE\u30EB\u30BF",it:"Malta",br:"Malta",pt:"Malta",nl:"Malta",hr:"Malta",fa:"\u0645\u0627\u0644\u062A"},flag:"https://restcountries.eu/data/mlt.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"MLT"},{name:"Marshall Islands",topLevelDomain:[".mh"],alpha2Code:"MH",alpha3Code:"MHL",callingCodes:["692"],capital:"Majuro",altSpellings:["MH","Republic of the Marshall Islands","Aolep\u0101n Aor\u014Dkin M\u0327aje\u013C"],region:"Oceania",subregion:"Micronesia",population:54880,latlng:[9,168],demonym:"Marshallese",area:181,gini:null,timezones:["UTC+12:00"],borders:[],nativeName:"M\u0327aje\u013C",numericCode:"584",currencies:[{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"mh",iso639_2:"mah",name:"Marshallese",nativeName:"Kajin M\u0327aje\u013C"}],translations:{de:"Marshallinseln",es:"Islas Marshall",fr:"\xCEles Marshall",ja:"\u30DE\u30FC\u30B7\u30E3\u30EB\u8AF8\u5CF6",it:"Isole Marshall",br:"Ilhas Marshall",pt:"Ilhas Marshall",nl:"Marshalleilanden",hr:"Mar\u0161alovi Otoci",fa:"\u062C\u0632\u0627\u06CC\u0631 \u0645\u0627\u0631\u0634\u0627\u0644"},flag:"https://restcountries.eu/data/mhl.svg",regionalBlocs:[],cioc:"MHL"},{name:"Martinique",topLevelDomain:[".mq"],alpha2Code:"MQ",alpha3Code:"MTQ",callingCodes:["596"],capital:"Fort-de-France",altSpellings:["MQ"],region:"Americas",subregion:"Caribbean",population:378243,latlng:[14.666667,-61],demonym:"French",area:null,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Martinique",numericCode:"474",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Martinique",es:"Martinica",fr:"Martinique",ja:"\u30DE\u30EB\u30C6\u30A3\u30CB\u30FC\u30AF",it:"Martinica",br:"Martinica",pt:"Martinica",nl:"Martinique",hr:"Martinique",fa:"\u0645\u0648\u0646\u062A\u0633\u0631\u0627\u062A"},flag:"https://restcountries.eu/data/mtq.svg",regionalBlocs:[],cioc:""},{name:"Mauritania",topLevelDomain:[".mr"],alpha2Code:"MR",alpha3Code:"MRT",callingCodes:["222"],capital:"Nouakchott",altSpellings:["MR","Islamic Republic of Mauritania","al-Jumh\u016Briyyah al-\u02BEIsl\u0101miyyah al-M\u016Br\u012Bt\u0101niyyah"],region:"Africa",subregion:"Western Africa",population:3718678,latlng:[20,-12],demonym:"Mauritanian",area:1030700,gini:40.5,timezones:["UTC"],borders:["DZA","MLI","SEN","ESH"],nativeName:"\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0627",numericCode:"478",currencies:[{code:"MRO",name:"Mauritanian ouguiya",symbol:"UM"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Mauretanien",es:"Mauritania",fr:"Mauritanie",ja:"\u30E2\u30FC\u30EA\u30BF\u30CB\u30A2",it:"Mauritania",br:"Maurit\xE2nia",pt:"Maurit\xE2nia",nl:"Mauritani\xEB",hr:"Mauritanija",fa:"\u0645\u0648\u0631\u06CC\u062A\u0627\u0646\u06CC"},flag:"https://restcountries.eu/data/mrt.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]},{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"MTN"},{name:"Mauritius",topLevelDomain:[".mu"],alpha2Code:"MU",alpha3Code:"MUS",callingCodes:["230"],capital:"Port Louis",altSpellings:["MU","Republic of Mauritius","R\xE9publique de Maurice"],region:"Africa",subregion:"Eastern Africa",population:1262879,latlng:[-20.28333333,57.55],demonym:"Mauritian",area:2040,gini:null,timezones:["UTC+04:00"],borders:[],nativeName:"Maurice",numericCode:"480",currencies:[{code:"MUR",name:"Mauritian rupee",symbol:"\u20A8"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Mauritius",es:"Mauricio",fr:"\xCEle Maurice",ja:"\u30E2\u30FC\u30EA\u30B7\u30E3\u30B9",it:"Mauritius",br:"Maur\xEDcio",pt:"Maur\xEDcia",nl:"Mauritius",hr:"Mauricijus",fa:"\u0645\u0648\u0631\u06CC\u0633"},flag:"https://restcountries.eu/data/mus.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"MRI"},{name:"Mayotte",topLevelDomain:[".yt"],alpha2Code:"YT",alpha3Code:"MYT",callingCodes:["262"],capital:"Mamoudzou",altSpellings:["YT","Department of Mayotte","D\xE9partement de Mayotte"],region:"Africa",subregion:"Eastern Africa",population:226915,latlng:[-12.83333333,45.16666666],demonym:"French",area:null,gini:null,timezones:["UTC+03:00"],borders:[],nativeName:"Mayotte",numericCode:"175",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Mayotte",es:"Mayotte",fr:"Mayotte",ja:"\u30DE\u30E8\u30C3\u30C8",it:"Mayotte",br:"Mayotte",pt:"Mayotte",nl:"Mayotte",hr:"Mayotte",fa:"\u0645\u0627\u06CC\u0648\u062A"},flag:"https://restcountries.eu/data/myt.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:""},{name:"Mexico",topLevelDomain:[".mx"],alpha2Code:"MX",alpha3Code:"MEX",callingCodes:["52"],capital:"Mexico City",altSpellings:["MX","Mexicanos","United Mexican States","Estados Unidos Mexicanos"],region:"Americas",subregion:"Central America",population:122273473,latlng:[23,-102],demonym:"Mexican",area:1964375,gini:47,timezones:["UTC-08:00","UTC-07:00","UTC-06:00"],borders:["BLZ","GTM","USA"],nativeName:"M\xE9xico",numericCode:"484",currencies:[{code:"MXN",name:"Mexican peso",symbol:"$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Mexiko",es:"M\xE9xico",fr:"Mexique",ja:"\u30E1\u30AD\u30B7\u30B3",it:"Messico",br:"M\xE9xico",pt:"M\xE9xico",nl:"Mexico",hr:"Meksiko",fa:"\u0645\u06A9\u0632\u06CC\u06A9"},flag:"https://restcountries.eu/data/mex.svg",regionalBlocs:[{acronym:"PA",name:"Pacific Alliance",otherAcronyms:[],otherNames:["Alianza del Pac\xEDfico"]},{acronym:"NAFTA",name:"North American Free Trade Agreement",otherAcronyms:[],otherNames:["Tratado de Libre Comercio de Am\xE9rica del Norte","Accord de Libre-\xE9change Nord-Am\xE9ricain"]}],cioc:"MEX"},{name:"Micronesia (Federated States of)",topLevelDomain:[".fm"],alpha2Code:"FM",alpha3Code:"FSM",callingCodes:["691"],capital:"Palikir",altSpellings:["FM","Federated States of Micronesia"],region:"Oceania",subregion:"Micronesia",population:102800,latlng:[6.91666666,158.25],demonym:"Micronesian",area:702,gini:null,timezones:["UTC+10:00","UTC+11"],borders:[],nativeName:"Micronesia",numericCode:"583",currencies:[{code:null,name:"[D]",symbol:"$"},{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Mikronesien",es:"Micronesia",fr:"Micron\xE9sie",ja:"\u30DF\u30AF\u30ED\u30CD\u30B7\u30A2\u9023\u90A6",it:"Micronesia",br:"Micron\xE9sia",pt:"Micron\xE9sia",nl:"Micronesi\xEB",hr:"Mikronezija",fa:"\u0627\u06CC\u0627\u0644\u0627\u062A \u0641\u062F\u0631\u0627\u0644 \u0645\u06CC\u06A9\u0631\u0648\u0646\u0632\u06CC"},flag:"https://restcountries.eu/data/fsm.svg",regionalBlocs:[],cioc:"FSM"},{name:"Moldova (Republic of)",topLevelDomain:[".md"],alpha2Code:"MD",alpha3Code:"MDA",callingCodes:["373"],capital:"Chi\u0219in\u0103u",altSpellings:["MD","Republic of Moldova","Republica Moldova"],region:"Europe",subregion:"Eastern Europe",population:3553100,latlng:[47,29],demonym:"Moldovan",area:33846,gini:33,timezones:["UTC+02:00"],borders:["ROU","UKR"],nativeName:"Moldova",numericCode:"498",currencies:[{code:"MDL",name:"Moldovan leu",symbol:"L"}],languages:[{iso639_1:"ro",iso639_2:"ron",name:"Romanian",nativeName:"Rom\xE2n\u0103"}],translations:{de:"Moldawie",es:"Moldavia",fr:"Moldavie",ja:"\u30E2\u30EB\u30C9\u30D0\u5171\u548C\u56FD",it:"Moldavia",br:"Mold\xE1via",pt:"Mold\xE1via",nl:"Moldavi\xEB",hr:"Moldova",fa:"\u0645\u0648\u0644\u062F\u0627\u0648\u06CC"},flag:"https://restcountries.eu/data/mda.svg",regionalBlocs:[{acronym:"CEFTA",name:"Central European Free Trade Agreement",otherAcronyms:[],otherNames:[]}],cioc:"MDA"},{name:"Monaco",topLevelDomain:[".mc"],alpha2Code:"MC",alpha3Code:"MCO",callingCodes:["377"],capital:"Monaco",altSpellings:["MC","Principality of Monaco","Principaut\xE9 de Monaco"],region:"Europe",subregion:"Western Europe",population:38400,latlng:[43.73333333,7.4],demonym:"Monegasque",area:2.02,gini:null,timezones:["UTC+01:00"],borders:["FRA"],nativeName:"Monaco",numericCode:"492",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Monaco",es:"M\xF3naco",fr:"Monaco",ja:"\u30E2\u30CA\u30B3",it:"Principato di Monaco",br:"M\xF4naco",pt:"M\xF3naco",nl:"Monaco",hr:"Monako",fa:"\u0645\u0648\u0646\u0627\u06A9\u0648"},flag:"https://restcountries.eu/data/mco.svg",regionalBlocs:[],cioc:"MON"},{name:"Mongolia",topLevelDomain:[".mn"],alpha2Code:"MN",alpha3Code:"MNG",callingCodes:["976"],capital:"Ulan Bator",altSpellings:["MN"],region:"Asia",subregion:"Eastern Asia",population:3093100,latlng:[46,105],demonym:"Mongolian",area:1564110,gini:36.5,timezones:["UTC+07:00","UTC+08:00"],borders:["CHN","RUS"],nativeName:"\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441",numericCode:"496",currencies:[{code:"MNT",name:"Mongolian t\xF6gr\xF6g",symbol:"\u20AE"}],languages:[{iso639_1:"mn",iso639_2:"mon",name:"Mongolian",nativeName:"\u041C\u043E\u043D\u0433\u043E\u043B \u0445\u044D\u043B"}],translations:{de:"Mongolei",es:"Mongolia",fr:"Mongolie",ja:"\u30E2\u30F3\u30B4\u30EB",it:"Mongolia",br:"Mong\xF3lia",pt:"Mong\xF3lia",nl:"Mongoli\xEB",hr:"Mongolija",fa:"\u0645\u063A\u0648\u0644\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/mng.svg",regionalBlocs:[],cioc:"MGL"},{name:"Montenegro",topLevelDomain:[".me"],alpha2Code:"ME",alpha3Code:"MNE",callingCodes:["382"],capital:"Podgorica",altSpellings:["ME","Crna Gora"],region:"Europe",subregion:"Southern Europe",population:621810,latlng:[42.5,19.3],demonym:"Montenegrin",area:13812,gini:30,timezones:["UTC+01:00"],borders:["ALB","BIH","HRV","KOS","SRB"],nativeName:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430",numericCode:"499",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"sr",iso639_2:"srp",name:"Serbian",nativeName:"\u0441\u0440\u043F\u0441\u043A\u0438 \u0458\u0435\u0437\u0438\u043A"},{iso639_1:"bs",iso639_2:"bos",name:"Bosnian",nativeName:"bosanski jezik"},{iso639_1:"sq",iso639_2:"sqi",name:"Albanian",nativeName:"Shqip"},{iso639_1:"hr",iso639_2:"hrv",name:"Croatian",nativeName:"hrvatski jezik"}],translations:{de:"Montenegro",es:"Montenegro",fr:"Mont\xE9n\xE9gro",ja:"\u30E2\u30F3\u30C6\u30CD\u30B0\u30ED",it:"Montenegro",br:"Montenegro",pt:"Montenegro",nl:"Montenegro",hr:"Crna Gora",fa:"\u0645\u0648\u0646\u062A\u0647\u200C\u0646\u06AF\u0631\u0648"},flag:"https://restcountries.eu/data/mne.svg",regionalBlocs:[{acronym:"CEFTA",name:"Central European Free Trade Agreement",otherAcronyms:[],otherNames:[]}],cioc:"MNE"},{name:"Montserrat",topLevelDomain:[".ms"],alpha2Code:"MS",alpha3Code:"MSR",callingCodes:["1664"],capital:"Plymouth",altSpellings:["MS"],region:"Americas",subregion:"Caribbean",population:4922,latlng:[16.75,-62.2],demonym:"Montserratian",area:102,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Montserrat",numericCode:"500",currencies:[{code:"XCD",name:"East Caribbean dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Montserrat",es:"Montserrat",fr:"Montserrat",ja:"\u30E2\u30F3\u30C8\u30BB\u30E9\u30C8",it:"Montserrat",br:"Montserrat",pt:"Monserrate",nl:"Montserrat",hr:"Montserrat",fa:"\u0645\u0627\u06CC\u0648\u062A"},flag:"https://restcountries.eu/data/msr.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]}],cioc:""},{name:"Morocco",topLevelDomain:[".ma"],alpha2Code:"MA",alpha3Code:"MAR",callingCodes:["212"],capital:"Rabat",altSpellings:["MA","Kingdom of Morocco","Al-Mamlakah al-Ma\u0121ribiyah"],region:"Africa",subregion:"Northern Africa",population:33337529,latlng:[32,-5],demonym:"Moroccan",area:446550,gini:40.9,timezones:["UTC"],borders:["DZA","ESH","ESP"],nativeName:"\u0627\u0644\u0645\u063A\u0631\u0628",numericCode:"504",currencies:[{code:"MAD",name:"Moroccan dirham",symbol:"\u062F.\u0645."}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Marokko",es:"Marruecos",fr:"Maroc",ja:"\u30E2\u30ED\u30C3\u30B3",it:"Marocco",br:"Marrocos",pt:"Marrocos",nl:"Marokko",hr:"Maroko",fa:"\u0645\u0631\u0627\u06A9\u0634"},flag:"https://restcountries.eu/data/mar.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]},{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"MAR"},{name:"Mozambique",topLevelDomain:[".mz"],alpha2Code:"MZ",alpha3Code:"MOZ",callingCodes:["258"],capital:"Maputo",altSpellings:["MZ","Republic of Mozambique","Rep\xFAblica de Mo\xE7ambique"],region:"Africa",subregion:"Eastern Africa",population:26423700,latlng:[-18.25,35],demonym:"Mozambican",area:801590,gini:45.7,timezones:["UTC+02:00"],borders:["MWI","ZAF","SWZ","TZA","ZMB","ZWE"],nativeName:"Mo\xE7ambique",numericCode:"508",currencies:[{code:"MZN",name:"Mozambican metical",symbol:"MT"}],languages:[{iso639_1:"pt",iso639_2:"por",name:"Portuguese",nativeName:"Portugu\xEAs"}],translations:{de:"Mosambik",es:"Mozambique",fr:"Mozambique",ja:"\u30E2\u30B6\u30F3\u30D3\u30FC\u30AF",it:"Mozambico",br:"Mo\xE7ambique",pt:"Mo\xE7ambique",nl:"Mozambique",hr:"Mozambik",fa:"\u0645\u0648\u0632\u0627\u0645\u0628\u06CC\u06A9"},flag:"https://restcountries.eu/data/moz.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"MOZ"},{name:"Myanmar",topLevelDomain:[".mm"],alpha2Code:"MM",alpha3Code:"MMR",callingCodes:["95"],capital:"Naypyidaw",altSpellings:["MM","Burma","Republic of the Union of Myanmar","Pyidaunzu Thanm\u0103da My\u0103ma Nainngandaw"],region:"Asia",subregion:"South-Eastern Asia",population:51419420,latlng:[22,98],demonym:"Burmese",area:676578,gini:null,timezones:["UTC+06:30"],borders:["BGD","CHN","IND","LAO","THA"],nativeName:"Myanma",numericCode:"104",currencies:[{code:"MMK",name:"Burmese kyat",symbol:"Ks"}],languages:[{iso639_1:"my",iso639_2:"mya",name:"Burmese",nativeName:"\u1017\u1019\u102C\u1005\u102C"}],translations:{de:"Myanmar",es:"Myanmar",fr:"Myanmar",ja:"\u30DF\u30E3\u30F3\u30DE\u30FC",it:"Birmania",br:"Myanmar",pt:"Myanmar",nl:"Myanmar",hr:"Mijanmar",fa:"\u0645\u06CC\u0627\u0646\u0645\u0627\u0631"},flag:"https://restcountries.eu/data/mmr.svg",regionalBlocs:[{acronym:"ASEAN",name:"Association of Southeast Asian Nations",otherAcronyms:[],otherNames:[]}],cioc:"MYA"},{name:"Namibia",topLevelDomain:[".na"],alpha2Code:"NA",alpha3Code:"NAM",callingCodes:["264"],capital:"Windhoek",altSpellings:["NA","Namibi\xEB","Republic of Namibia"],region:"Africa",subregion:"Southern Africa",population:2324388,latlng:[-22,17],demonym:"Namibian",area:825615,gini:63.9,timezones:["UTC+01:00"],borders:["AGO","BWA","ZAF","ZMB"],nativeName:"Namibia",numericCode:"516",currencies:[{code:"NAD",name:"Namibian dollar",symbol:"$"},{code:"ZAR",name:"South African rand",symbol:"R"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"af",iso639_2:"afr",name:"Afrikaans",nativeName:"Afrikaans"}],translations:{de:"Namibia",es:"Namibia",fr:"Namibie",ja:"\u30CA\u30DF\u30D3\u30A2",it:"Namibia",br:"Nam\xEDbia",pt:"Nam\xEDbia",nl:"Namibi\xEB",hr:"Namibija",fa:"\u0646\u0627\u0645\u06CC\u0628\u06CC\u0627"},flag:"https://restcountries.eu/data/nam.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"NAM"},{name:"Nauru",topLevelDomain:[".nr"],alpha2Code:"NR",alpha3Code:"NRU",callingCodes:["674"],capital:"Yaren",altSpellings:["NR","Naoero","Pleasant Island","Republic of Nauru","Ripublik Naoero"],region:"Oceania",subregion:"Micronesia",population:10084,latlng:[-.53333333,166.91666666],demonym:"Nauruan",area:21,gini:null,timezones:["UTC+12:00"],borders:[],nativeName:"Nauru",numericCode:"520",currencies:[{code:"AUD",name:"Australian dollar",symbol:"$"},{code:"(none)",name:null,symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"na",iso639_2:"nau",name:"Nauruan",nativeName:"Dorerin Naoero"}],translations:{de:"Nauru",es:"Nauru",fr:"Nauru",ja:"\u30CA\u30A6\u30EB",it:"Nauru",br:"Nauru",pt:"Nauru",nl:"Nauru",hr:"Nauru",fa:"\u0646\u0627\u0626\u0648\u0631\u0648"},flag:"https://restcountries.eu/data/nru.svg",regionalBlocs:[],cioc:"NRU"},{name:"Nepal",topLevelDomain:[".np"],alpha2Code:"NP",alpha3Code:"NPL",callingCodes:["977"],capital:"Kathmandu",altSpellings:["NP","Federal Democratic Republic of Nepal","Lokt\u0101ntrik Ganatantra Nep\u0101l"],region:"Asia",subregion:"Southern Asia",population:28431500,latlng:[28,84],demonym:"Nepalese",area:147181,gini:32.8,timezones:["UTC+05:45"],borders:["CHN","IND"],nativeName:"\u0928\u0947\u092A\u093E\u0932",numericCode:"524",currencies:[{code:"NPR",name:"Nepalese rupee",symbol:"\u20A8"}],languages:[{iso639_1:"ne",iso639_2:"nep",name:"Nepali",nativeName:"\u0928\u0947\u092A\u093E\u0932\u0940"}],translations:{de:"N\xE9pal",es:"Nepal",fr:"N\xE9pal",ja:"\u30CD\u30D1\u30FC\u30EB",it:"Nepal",br:"Nepal",pt:"Nepal",nl:"Nepal",hr:"Nepal",fa:"\u0646\u067E\u0627\u0644"},flag:"https://restcountries.eu/data/npl.svg",regionalBlocs:[{acronym:"SAARC",name:"South Asian Association for Regional Cooperation",otherAcronyms:[],otherNames:[]}],cioc:"NEP"},{name:"Netherlands",topLevelDomain:[".nl"],alpha2Code:"NL",alpha3Code:"NLD",callingCodes:["31"],capital:"Amsterdam",altSpellings:["NL","Holland","Nederland"],region:"Europe",subregion:"Western Europe",population:17019800,latlng:[52.5,5.75],demonym:"Dutch",area:41850,gini:30.9,timezones:["UTC-04:00","UTC+01:00"],borders:["BEL","DEU"],nativeName:"Nederland",numericCode:"528",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"nl",iso639_2:"nld",name:"Dutch",nativeName:"Nederlands"}],translations:{de:"Niederlande",es:"Pa\xEDses Bajos",fr:"Pays-Bas",ja:"\u30AA\u30E9\u30F3\u30C0",it:"Paesi Bassi",br:"Holanda",pt:"Pa\xEDses Baixos",nl:"Nederland",hr:"Nizozemska",fa:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0647\u0644\u0646\u062F"},flag:"https://restcountries.eu/data/nld.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"NED"},{name:"New Caledonia",topLevelDomain:[".nc"],alpha2Code:"NC",alpha3Code:"NCL",callingCodes:["687"],capital:"Noum\xE9a",altSpellings:["NC"],region:"Oceania",subregion:"Melanesia",population:268767,latlng:[-21.5,165.5],demonym:"New Caledonian",area:18575,gini:null,timezones:["UTC+11:00"],borders:[],nativeName:"Nouvelle-Cal\xE9donie",numericCode:"540",currencies:[{code:"XPF",name:"CFP franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Neukaledonien",es:"Nueva Caledonia",fr:"Nouvelle-Cal\xE9donie",ja:"\u30CB\u30E5\u30FC\u30AB\u30EC\u30C9\u30CB\u30A2",it:"Nuova Caledonia",br:"Nova Caled\xF4nia",pt:"Nova Caled\xF3nia",nl:"Nieuw-Caledoni\xEB",hr:"Nova Kaledonija",fa:"\u06A9\u0627\u0644\u062F\u0648\u0646\u06CC\u0627\u06CC \u062C\u062F\u06CC\u062F"},flag:"https://restcountries.eu/data/ncl.svg",regionalBlocs:[],cioc:""},{name:"New Zealand",topLevelDomain:[".nz"],alpha2Code:"NZ",alpha3Code:"NZL",callingCodes:["64"],capital:"Wellington",altSpellings:["NZ","Aotearoa"],region:"Oceania",subregion:"Australia and New Zealand",population:4697854,latlng:[-41,174],demonym:"New Zealander",area:270467,gini:36.2,timezones:["UTC-11:00","UTC-10:00","UTC+12:00","UTC+12:45","UTC+13:00"],borders:[],nativeName:"New Zealand",numericCode:"554",currencies:[{code:"NZD",name:"New Zealand dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"mi",iso639_2:"mri",name:"M\u0101ori",nativeName:"te reo M\u0101ori"}],translations:{de:"Neuseeland",es:"Nueva Zelanda",fr:"Nouvelle-Z\xE9lande",ja:"\u30CB\u30E5\u30FC\u30B8\u30FC\u30E9\u30F3\u30C9",it:"Nuova Zelanda",br:"Nova Zel\xE2ndia",pt:"Nova Zel\xE2ndia",nl:"Nieuw-Zeeland",hr:"Novi Zeland",fa:"\u0646\u06CC\u0648\u0632\u06CC\u0644\u0646\u062F"},flag:"https://restcountries.eu/data/nzl.svg",regionalBlocs:[],cioc:"NZL"},{name:"Nicaragua",topLevelDomain:[".ni"],alpha2Code:"NI",alpha3Code:"NIC",callingCodes:["505"],capital:"Managua",altSpellings:["NI","Republic of Nicaragua","Rep\xFAblica de Nicaragua"],region:"Americas",subregion:"Central America",population:6262703,latlng:[13,-85],demonym:"Nicaraguan",area:130373,gini:40.5,timezones:["UTC-06:00"],borders:["CRI","HND"],nativeName:"Nicaragua",numericCode:"558",currencies:[{code:"NIO",name:"Nicaraguan c\xF3rdoba",symbol:"C$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Nicaragua",es:"Nicaragua",fr:"Nicaragua",ja:"\u30CB\u30AB\u30E9\u30B0\u30A2",it:"Nicaragua",br:"Nicar\xE1gua",pt:"Nicar\xE1gua",nl:"Nicaragua",hr:"Nikaragva",fa:"\u0646\u06CC\u06A9\u0627\u0631\u0627\u06AF\u0648\u0626\u0647"},flag:"https://restcountries.eu/data/nic.svg",regionalBlocs:[{acronym:"CAIS",name:"Central American Integration System",otherAcronyms:["SICA"],otherNames:["Sistema de la Integraci\xF3n Centroamericana,"]}],cioc:"NCA"},{name:"Niger",topLevelDomain:[".ne"],alpha2Code:"NE",alpha3Code:"NER",callingCodes:["227"],capital:"Niamey",altSpellings:["NE","Nijar","Republic of Niger","R\xE9publique du Niger"],region:"Africa",subregion:"Western Africa",population:20715e3,latlng:[16,8],demonym:"Nigerien",area:1267e3,gini:34.6,timezones:["UTC+01:00"],borders:["DZA","BEN","BFA","TCD","LBY","MLI","NGA"],nativeName:"Niger",numericCode:"562",currencies:[{code:"XOF",name:"West African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Niger",es:"N\xEDger",fr:"Niger",ja:"\u30CB\u30B8\u30A7\u30FC\u30EB",it:"Niger",br:"N\xEDger",pt:"N\xEDger",nl:"Niger",hr:"Niger",fa:"\u0646\u06CC\u062C\u0631"},flag:"https://restcountries.eu/data/ner.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"NIG"},{name:"Nigeria",topLevelDomain:[".ng"],alpha2Code:"NG",alpha3Code:"NGA",callingCodes:["234"],capital:"Abuja",altSpellings:["NG","Nijeriya","Na\xEDj\xEDr\xED\xE0","Federal Republic of Nigeria"],region:"Africa",subregion:"Western Africa",population:186988e3,latlng:[10,8],demonym:"Nigerian",area:923768,gini:48.8,timezones:["UTC+01:00"],borders:["BEN","CMR","TCD","NER"],nativeName:"Nigeria",numericCode:"566",currencies:[{code:"NGN",name:"Nigerian naira",symbol:"\u20A6"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Nigeria",es:"Nigeria",fr:"Nig\xE9ria",ja:"\u30CA\u30A4\u30B8\u30A7\u30EA\u30A2",it:"Nigeria",br:"Nig\xE9ria",pt:"Nig\xE9ria",nl:"Nigeria",hr:"Nigerija",fa:"\u0646\u06CC\u062C\u0631\u06CC\u0647"},flag:"https://restcountries.eu/data/nga.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"NGR"},{name:"Niue",topLevelDomain:[".nu"],alpha2Code:"NU",alpha3Code:"NIU",callingCodes:["683"],capital:"Alofi",altSpellings:["NU"],region:"Oceania",subregion:"Polynesia",population:1470,latlng:[-19.03333333,-169.86666666],demonym:"Niuean",area:260,gini:null,timezones:["UTC-11:00"],borders:[],nativeName:"Niu\u0113",numericCode:"570",currencies:[{code:"NZD",name:"New Zealand dollar",symbol:"$"},{code:"(none)",name:"Niue dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Niue",es:"Niue",fr:"Niue",ja:"\u30CB\u30A6\u30A8",it:"Niue",br:"Niue",pt:"Niue",nl:"Niue",hr:"Niue",fa:"\u0646\u06CC\u0648\u0648\u06CC"},flag:"https://restcountries.eu/data/niu.svg",regionalBlocs:[],cioc:""},{name:"Norfolk Island",topLevelDomain:[".nf"],alpha2Code:"NF",alpha3Code:"NFK",callingCodes:["672"],capital:"Kingston",altSpellings:["NF","Territory of Norfolk Island","Teratri of Norf'k Ailen"],region:"Oceania",subregion:"Australia and New Zealand",population:2302,latlng:[-29.03333333,167.95],demonym:"Norfolk Islander",area:36,gini:null,timezones:["UTC+11:30"],borders:[],nativeName:"Norfolk Island",numericCode:"574",currencies:[{code:"AUD",name:"Australian dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Norfolkinsel",es:"Isla de Norfolk",fr:"\xCEle de Norfolk",ja:"\u30CE\u30FC\u30D5\u30A9\u30FC\u30AF\u5CF6",it:"Isola Norfolk",br:"Ilha Norfolk",pt:"Ilha Norfolk",nl:"Norfolkeiland",hr:"Otok Norfolk",fa:"\u062C\u0632\u06CC\u0631\u0647 \u0646\u0648\u0631\u0641\u06A9"},flag:"https://restcountries.eu/data/nfk.svg",regionalBlocs:[],cioc:""},{name:"Korea (Democratic People's Republic of)",topLevelDomain:[".kp"],alpha2Code:"KP",alpha3Code:"PRK",callingCodes:["850"],capital:"Pyongyang",altSpellings:["KP","Democratic People's Republic of Korea","\uC870\uC120\uBBFC\uC8FC\uC8FC\uC758\uC778\uBBFC\uACF5\uD654\uAD6D","Chos\u014Fn Minjuju\u016Di Inmin Konghwaguk"],region:"Asia",subregion:"Eastern Asia",population:25281e3,latlng:[40,127],demonym:"North Korean",area:120538,gini:null,timezones:["UTC+09:00"],borders:["CHN","KOR","RUS"],nativeName:"\uBD81\uD55C",numericCode:"408",currencies:[{code:"KPW",name:"North Korean won",symbol:"\u20A9"}],languages:[{iso639_1:"ko",iso639_2:"kor",name:"Korean",nativeName:"\uD55C\uAD6D\uC5B4"}],translations:{de:"Nordkorea",es:"Corea del Norte",fr:"Cor\xE9e du Nord",ja:"\u671D\u9BAE\u6C11\u4E3B\u4E3B\u7FA9\u4EBA\u6C11\u5171\u548C\u56FD",it:"Corea del Nord",br:"Coreia do Norte",pt:"Coreia do Norte",nl:"Noord-Korea",hr:"Sjeverna Koreja",fa:"\u06A9\u0631\u0647 \u062C\u0646\u0648\u0628\u06CC"},flag:"https://restcountries.eu/data/prk.svg",regionalBlocs:[],cioc:"PRK"},{name:"Northern Mariana Islands",topLevelDomain:[".mp"],alpha2Code:"MP",alpha3Code:"MNP",callingCodes:["1670"],capital:"Saipan",altSpellings:["MP","Commonwealth of the Northern Mariana Islands","Sankattan Siha Na Islas Mari\xE5nas"],region:"Oceania",subregion:"Micronesia",population:56940,latlng:[15.2,145.75],demonym:"American",area:464,gini:null,timezones:["UTC+10:00"],borders:[],nativeName:"Northern Mariana Islands",numericCode:"580",currencies:[{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"ch",iso639_2:"cha",name:"Chamorro",nativeName:"Chamoru"}],translations:{de:"N\xF6rdliche Marianen",es:"Islas Marianas del Norte",fr:"\xCEles Mariannes du Nord",ja:"\u5317\u30DE\u30EA\u30A2\u30CA\u8AF8\u5CF6",it:"Isole Marianne Settentrionali",br:"Ilhas Marianas",pt:"Ilhas Marianas",nl:"Noordelijke Marianeneilanden",hr:"Sjevernomarijanski otoci",fa:"\u062C\u0632\u0627\u06CC\u0631 \u0645\u0627\u0631\u06CC\u0627\u0646\u0627\u06CC \u0634\u0645\u0627\u0644\u06CC"},flag:"https://restcountries.eu/data/mnp.svg",regionalBlocs:[],cioc:""},{name:"Norway",topLevelDomain:[".no"],alpha2Code:"NO",alpha3Code:"NOR",callingCodes:["47"],capital:"Oslo",altSpellings:["NO","Norge","Noreg","Kingdom of Norway","Kongeriket Norge","Kongeriket Noreg"],region:"Europe",subregion:"Northern Europe",population:5223256,latlng:[62,10],demonym:"Norwegian",area:323802,gini:25.8,timezones:["UTC+01:00"],borders:["FIN","SWE","RUS"],nativeName:"Norge",numericCode:"578",currencies:[{code:"NOK",name:"Norwegian krone",symbol:"kr"}],languages:[{iso639_1:"no",iso639_2:"nor",name:"Norwegian",nativeName:"Norsk"},{iso639_1:"nb",iso639_2:"nob",name:"Norwegian Bokm\xE5l",nativeName:"Norsk bokm\xE5l"},{iso639_1:"nn",iso639_2:"nno",name:"Norwegian Nynorsk",nativeName:"Norsk nynorsk"}],translations:{de:"Norwegen",es:"Noruega",fr:"Norv\xE8ge",ja:"\u30CE\u30EB\u30A6\u30A7\u30FC",it:"Norvegia",br:"Noruega",pt:"Noruega",nl:"Noorwegen",hr:"Norve\u0161ka",fa:"\u0646\u0631\u0648\u0698"},flag:"https://restcountries.eu/data/nor.svg",regionalBlocs:[{acronym:"EFTA",name:"European Free Trade Association",otherAcronyms:[],otherNames:[]}],cioc:"NOR"},{name:"Oman",topLevelDomain:[".om"],alpha2Code:"OM",alpha3Code:"OMN",callingCodes:["968"],capital:"Muscat",altSpellings:["OM","Sultanate of Oman","Sal\u1E6Danat \u02BBUm\u0101n"],region:"Asia",subregion:"Western Asia",population:4420133,latlng:[21,57],demonym:"Omani",area:309500,gini:null,timezones:["UTC+04:00"],borders:["SAU","ARE","YEM"],nativeName:"\u0639\u0645\u0627\u0646",numericCode:"512",currencies:[{code:"OMR",name:"Omani rial",symbol:"\u0631.\u0639."}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Oman",es:"Om\xE1n",fr:"Oman",ja:"\u30AA\u30DE\u30FC\u30F3",it:"oman",br:"Om\xE3",pt:"Om\xE3",nl:"Oman",hr:"Oman",fa:"\u0639\u0645\u0627\u0646"},flag:"https://restcountries.eu/data/omn.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"OMA"},{name:"Pakistan",topLevelDomain:[".pk"],alpha2Code:"PK",alpha3Code:"PAK",callingCodes:["92"],capital:"Islamabad",altSpellings:["PK","P\u0101kist\u0101n","Islamic Republic of Pakistan","Isl\u0101m\u012B Jumh\u016Briya'eh P\u0101kist\u0101n"],region:"Asia",subregion:"Southern Asia",population:194125062,latlng:[30,70],demonym:"Pakistani",area:881912,gini:30,timezones:["UTC+05:00"],borders:["AFG","CHN","IND","IRN"],nativeName:"Pakistan",numericCode:"586",currencies:[{code:"PKR",name:"Pakistani rupee",symbol:"\u20A8"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"ur",iso639_2:"urd",name:"Urdu",nativeName:"\u0627\u0631\u062F\u0648"}],translations:{de:"Pakistan",es:"Pakist\xE1n",fr:"Pakistan",ja:"\u30D1\u30AD\u30B9\u30BF\u30F3",it:"Pakistan",br:"Paquist\xE3o",pt:"Paquist\xE3o",nl:"Pakistan",hr:"Pakistan",fa:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/pak.svg",regionalBlocs:[{acronym:"SAARC",name:"South Asian Association for Regional Cooperation",otherAcronyms:[],otherNames:[]}],cioc:"PAK"},{name:"Palau",topLevelDomain:[".pw"],alpha2Code:"PW",alpha3Code:"PLW",callingCodes:["680"],capital:"Ngerulmud",altSpellings:["PW","Republic of Palau","Beluu er a Belau"],region:"Oceania",subregion:"Micronesia",population:17950,latlng:[7.5,134.5],demonym:"Palauan",area:459,gini:null,timezones:["UTC+09:00"],borders:[],nativeName:"Palau",numericCode:"585",currencies:[{code:"(none)",name:"[E]",symbol:"$"},{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Palau",es:"Palau",fr:"Palaos",ja:"\u30D1\u30E9\u30AA",it:"Palau",br:"Palau",pt:"Palau",nl:"Palau",hr:"Palau",fa:"\u067E\u0627\u0644\u0627\u0626\u0648"},flag:"https://restcountries.eu/data/plw.svg",regionalBlocs:[],cioc:"PLW"},{name:"Palestine, State of",topLevelDomain:[".ps"],alpha2Code:"PS",alpha3Code:"PSE",callingCodes:["970"],capital:"Ramallah",altSpellings:["PS","State of Palestine","Dawlat Filas\u1E6Din"],region:"Asia",subregion:"Western Asia",population:4682467,latlng:[31.9,35.2],demonym:"Palestinian",area:null,gini:35.5,timezones:["UTC+02:00"],borders:["ISR","EGY","JOR"],nativeName:"\u0641\u0644\u0633\u0637\u064A\u0646",numericCode:"275",currencies:[{code:"ILS",name:"Israeli new sheqel",symbol:"\u20AA"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Pal\xE4stina",es:"Palestina",fr:"Palestine",ja:"\u30D1\u30EC\u30B9\u30C1\u30CA",it:"Palestina",br:"Palestina",pt:"Palestina",nl:"Palestijnse gebieden",hr:"Palestina",fa:"\u0641\u0644\u0633\u0637\u06CC\u0646"},flag:"https://restcountries.eu/data/pse.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"PLE"},{name:"Panama",topLevelDomain:[".pa"],alpha2Code:"PA",alpha3Code:"PAN",callingCodes:["507"],capital:"Panama City",altSpellings:["PA","Republic of Panama","Rep\xFAblica de Panam\xE1"],region:"Americas",subregion:"Central America",population:3814672,latlng:[9,-80],demonym:"Panamanian",area:75417,gini:51.9,timezones:["UTC-05:00"],borders:["COL","CRI"],nativeName:"Panam\xE1",numericCode:"591",currencies:[{code:"PAB",name:"Panamanian balboa",symbol:"B/."},{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Panama",es:"Panam\xE1",fr:"Panama",ja:"\u30D1\u30CA\u30DE",it:"Panama",br:"Panam\xE1",pt:"Panam\xE1",nl:"Panama",hr:"Panama",fa:"\u067E\u0627\u0646\u0627\u0645\u0627"},flag:"https://restcountries.eu/data/pan.svg",regionalBlocs:[{acronym:"CAIS",name:"Central American Integration System",otherAcronyms:["SICA"],otherNames:["Sistema de la Integraci\xF3n Centroamericana,"]}],cioc:"PAN"},{name:"Papua New Guinea",topLevelDomain:[".pg"],alpha2Code:"PG",alpha3Code:"PNG",callingCodes:["675"],capital:"Port Moresby",altSpellings:["PG","Independent State of Papua New Guinea","Independen Stet bilong Papua Niugini"],region:"Oceania",subregion:"Melanesia",population:8083700,latlng:[-6,147],demonym:"Papua New Guinean",area:462840,gini:50.9,timezones:["UTC+10:00"],borders:["IDN"],nativeName:"Papua Niugini",numericCode:"598",currencies:[{code:"PGK",name:"Papua New Guinean kina",symbol:"K"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Papua-Neuguinea",es:"Pap\xFAa Nueva Guinea",fr:"Papouasie-Nouvelle-Guin\xE9e",ja:"\u30D1\u30D7\u30A2\u30CB\u30E5\u30FC\u30AE\u30CB\u30A2",it:"Papua Nuova Guinea",br:"Papua Nova Guin\xE9",pt:"Papua Nova Guin\xE9",nl:"Papoea-Nieuw-Guinea",hr:"Papua Nova Gvineja",fa:"\u067E\u0627\u067E\u0648\u0622 \u06AF\u06CC\u0646\u0647 \u0646\u0648"},flag:"https://restcountries.eu/data/png.svg",regionalBlocs:[],cioc:"PNG"},{name:"Paraguay",topLevelDomain:[".py"],alpha2Code:"PY",alpha3Code:"PRY",callingCodes:["595"],capital:"Asunci\xF3n",altSpellings:["PY","Republic of Paraguay","Rep\xFAblica del Paraguay","Tet\xE3 Paragu\xE1i"],region:"Americas",subregion:"South America",population:6854536,latlng:[-23,-58],demonym:"Paraguayan",area:406752,gini:52.4,timezones:["UTC-04:00"],borders:["ARG","BOL","BRA"],nativeName:"Paraguay",numericCode:"600",currencies:[{code:"PYG",name:"Paraguayan guaran\xED",symbol:"\u20B2"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"},{iso639_1:"gn",iso639_2:"grn",name:"Guaran\xED",nativeName:"Ava\xF1e'\u1EBD"}],translations:{de:"Paraguay",es:"Paraguay",fr:"Paraguay",ja:"\u30D1\u30E9\u30B0\u30A2\u30A4",it:"Paraguay",br:"Paraguai",pt:"Paraguai",nl:"Paraguay",hr:"Paragvaj",fa:"\u067E\u0627\u0631\u0627\u06AF\u0648\u0626\u0647"},flag:"https://restcountries.eu/data/pry.svg",regionalBlocs:[{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"PAR"},{name:"Peru",topLevelDomain:[".pe"],alpha2Code:"PE",alpha3Code:"PER",callingCodes:["51"],capital:"Lima",altSpellings:["PE","Republic of Peru"," Rep\xFAblica del Per\xFA"],region:"Americas",subregion:"South America",population:31488700,latlng:[-10,-76],demonym:"Peruvian",area:1285216,gini:48.1,timezones:["UTC-05:00"],borders:["BOL","BRA","CHL","COL","ECU"],nativeName:"Per\xFA",numericCode:"604",currencies:[{code:"PEN",name:"Peruvian sol",symbol:"S/."}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Peru",es:"Per\xFA",fr:"P\xE9rou",ja:"\u30DA\u30EB\u30FC",it:"Per\xF9",br:"Peru",pt:"Peru",nl:"Peru",hr:"Peru",fa:"\u067E\u0631\u0648"},flag:"https://restcountries.eu/data/per.svg",regionalBlocs:[{acronym:"PA",name:"Pacific Alliance",otherAcronyms:[],otherNames:["Alianza del Pac\xEDfico"]},{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"PER"},{name:"Philippines",topLevelDomain:[".ph"],alpha2Code:"PH",alpha3Code:"PHL",callingCodes:["63"],capital:"Manila",altSpellings:["PH","Republic of the Philippines","Rep\xFAblika ng Pilipinas"],region:"Asia",subregion:"South-Eastern Asia",population:103279800,latlng:[13,122],demonym:"Filipino",area:342353,gini:43,timezones:["UTC+08:00"],borders:[],nativeName:"Pilipinas",numericCode:"608",currencies:[{code:"PHP",name:"Philippine peso",symbol:"\u20B1"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Philippinen",es:"Filipinas",fr:"Philippines",ja:"\u30D5\u30A3\u30EA\u30D4\u30F3",it:"Filippine",br:"Filipinas",pt:"Filipinas",nl:"Filipijnen",hr:"Filipini",fa:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0646\u062F\u0641\u06CC\u0644\u06CC\u067E\u06CC\u0646"},flag:"https://restcountries.eu/data/phl.svg",regionalBlocs:[{acronym:"ASEAN",name:"Association of Southeast Asian Nations",otherAcronyms:[],otherNames:[]}],cioc:"PHI"},{name:"Pitcairn",topLevelDomain:[".pn"],alpha2Code:"PN",alpha3Code:"PCN",callingCodes:["64"],capital:"Adamstown",altSpellings:["PN","Pitcairn Henderson Ducie and Oeno Islands"],region:"Oceania",subregion:"Polynesia",population:56,latlng:[-25.06666666,-130.1],demonym:"Pitcairn Islander",area:47,gini:null,timezones:["UTC-08:00"],borders:[],nativeName:"Pitcairn Islands",numericCode:"612",currencies:[{code:"NZD",name:"New Zealand dollar",symbol:"$"},{code:null,name:"Pitcairn Islands dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Pitcairn",es:"Islas Pitcairn",fr:"\xCEles Pitcairn",ja:"\u30D4\u30C8\u30B1\u30A2\u30F3",it:"Isole Pitcairn",br:"Ilhas Pitcairn",pt:"Ilhas Pic\xE1rnia",nl:"Pitcairneilanden",hr:"Pitcairnovo oto\u010Dje",fa:"\u067E\u06CC\u062A\u06A9\u0631\u0646"},flag:"https://restcountries.eu/data/pcn.svg",regionalBlocs:[],cioc:""},{name:"Poland",topLevelDomain:[".pl"],alpha2Code:"PL",alpha3Code:"POL",callingCodes:["48"],capital:"Warsaw",altSpellings:["PL","Republic of Poland","Rzeczpospolita Polska"],region:"Europe",subregion:"Eastern Europe",population:38437239,latlng:[52,20],demonym:"Polish",area:312679,gini:34.1,timezones:["UTC+01:00"],borders:["BLR","CZE","DEU","LTU","RUS","SVK","UKR"],nativeName:"Polska",numericCode:"616",currencies:[{code:"PLN",name:"Polish z\u0142oty",symbol:"z\u0142"}],languages:[{iso639_1:"pl",iso639_2:"pol",name:"Polish",nativeName:"j\u0119zyk polski"}],translations:{de:"Polen",es:"Polonia",fr:"Pologne",ja:"\u30DD\u30FC\u30E9\u30F3\u30C9",it:"Polonia",br:"Pol\xF4nia",pt:"Pol\xF3nia",nl:"Polen",hr:"Poljska",fa:"\u0644\u0647\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/pol.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"POL"},{name:"Portugal",topLevelDomain:[".pt"],alpha2Code:"PT",alpha3Code:"PRT",callingCodes:["351"],capital:"Lisbon",altSpellings:["PT","Portuguesa","Portuguese Republic","Rep\xFAblica Portuguesa"],region:"Europe",subregion:"Southern Europe",population:10374822,latlng:[39.5,-8],demonym:"Portuguese",area:92090,gini:38.5,timezones:["UTC-01:00","UTC"],borders:["ESP"],nativeName:"Portugal",numericCode:"620",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"pt",iso639_2:"por",name:"Portuguese",nativeName:"Portugu\xEAs"}],translations:{de:"Portugal",es:"Portugal",fr:"Portugal",ja:"\u30DD\u30EB\u30C8\u30AC\u30EB",it:"Portogallo",br:"Portugal",pt:"Portugal",nl:"Portugal",hr:"Portugal",fa:"\u067E\u0631\u062A\u063A\u0627\u0644"},flag:"https://restcountries.eu/data/prt.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"POR"},{name:"Puerto Rico",topLevelDomain:[".pr"],alpha2Code:"PR",alpha3Code:"PRI",callingCodes:["1787","1939"],capital:"San Juan",altSpellings:["PR","Commonwealth of Puerto Rico","Estado Libre Asociado de Puerto Rico"],region:"Americas",subregion:"Caribbean",population:3474182,latlng:[18.25,-66.5],demonym:"Puerto Rican",area:8870,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Puerto Rico",numericCode:"630",currencies:[{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Puerto Rico",es:"Puerto Rico",fr:"Porto Rico",ja:"\u30D7\u30A8\u30EB\u30C8\u30EA\u30B3",it:"Porto Rico",br:"Porto Rico",pt:"Porto Rico",nl:"Puerto Rico",hr:"Portoriko",fa:"\u067E\u0648\u0631\u062A\u0648 \u0631\u06CC\u06A9\u0648"},flag:"https://restcountries.eu/data/pri.svg",regionalBlocs:[],cioc:"PUR"},{name:"Qatar",topLevelDomain:[".qa"],alpha2Code:"QA",alpha3Code:"QAT",callingCodes:["974"],capital:"Doha",altSpellings:["QA","State of Qatar","Dawlat Qa\u1E6Dar"],region:"Asia",subregion:"Western Asia",population:2587564,latlng:[25.5,51.25],demonym:"Qatari",area:11586,gini:41.1,timezones:["UTC+03:00"],borders:["SAU"],nativeName:"\u0642\u0637\u0631",numericCode:"634",currencies:[{code:"QAR",name:"Qatari riyal",symbol:"\u0631.\u0642"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Katar",es:"Catar",fr:"Qatar",ja:"\u30AB\u30BF\u30FC\u30EB",it:"Qatar",br:"Catar",pt:"Catar",nl:"Qatar",hr:"Katar",fa:"\u0642\u0637\u0631"},flag:"https://restcountries.eu/data/qat.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"QAT"},{name:"Republic of Kosovo",topLevelDomain:[""],alpha2Code:"XK",alpha3Code:"KOS",callingCodes:["383"],capital:"Pristina",altSpellings:["XK","\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u0441\u043E\u0432\u043E"],region:"Europe",subregion:"Eastern Europe",population:1733842,latlng:[42.666667,21.166667],demonym:"Kosovar",area:10908,gini:null,timezones:["UTC+01:00"],borders:["ALB","MKD","MNE","SRB"],nativeName:"Republika e Kosov\xEBs",numericCode:null,currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"sq",iso639_2:"sqi",name:"Albanian",nativeName:"Shqip"},{iso639_1:"sr",iso639_2:"srp",name:"Serbian",nativeName:"\u0441\u0440\u043F\u0441\u043A\u0438 \u0458\u0435\u0437\u0438\u043A"}],translations:{de:null,es:"Kosovo",fr:null,ja:null,it:null,br:"Kosovo",pt:"Kosovo",nl:null,hr:"Kosovo",fa:"\u06A9\u0648\u0632\u0648\u0648"},flag:"https://restcountries.eu/data/kos.svg",regionalBlocs:[{acronym:"CEFTA",name:"Central European Free Trade Agreement",otherAcronyms:[],otherNames:[]}],cioc:null},{name:"R\xE9union",topLevelDomain:[".re"],alpha2Code:"RE",alpha3Code:"REU",callingCodes:["262"],capital:"Saint-Denis",altSpellings:["RE","Reunion"],region:"Africa",subregion:"Eastern Africa",population:840974,latlng:[-21.15,55.5],demonym:"French",area:null,gini:null,timezones:["UTC+04:00"],borders:[],nativeName:"La R\xE9union",numericCode:"638",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"R\xE9union",es:"Reuni\xF3n",fr:"R\xE9union",ja:"\u30EC\u30E6\u30CB\u30AA\u30F3",it:"Riunione",br:"Reuni\xE3o",pt:"Reuni\xE3o",nl:"R\xE9union",hr:"R\xE9union",fa:"\u0631\u0626\u0648\u0646\u06CC\u0648\u0646"},flag:"https://restcountries.eu/data/reu.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:""},{name:"Romania",topLevelDomain:[".ro"],alpha2Code:"RO",alpha3Code:"ROU",callingCodes:["40"],capital:"Bucharest",altSpellings:["RO","Rumania","Roumania","Rom\xE2nia"],region:"Europe",subregion:"Eastern Europe",population:19861408,latlng:[46,25],demonym:"Romanian",area:238391,gini:30,timezones:["UTC+02:00"],borders:["BGR","HUN","MDA","SRB","UKR"],nativeName:"Rom\xE2nia",numericCode:"642",currencies:[{code:"RON",name:"Romanian leu",symbol:"lei"}],languages:[{iso639_1:"ro",iso639_2:"ron",name:"Romanian",nativeName:"Rom\xE2n\u0103"}],translations:{de:"Rum\xE4nien",es:"Rumania",fr:"Roumanie",ja:"\u30EB\u30FC\u30DE\u30CB\u30A2",it:"Romania",br:"Rom\xEAnia",pt:"Rom\xE9nia",nl:"Roemeni\xEB",hr:"Rumunjska",fa:"\u0631\u0648\u0645\u0627\u0646\u06CC"},flag:"https://restcountries.eu/data/rou.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"ROU"},{name:"Russian Federation",topLevelDomain:[".ru"],alpha2Code:"RU",alpha3Code:"RUS",callingCodes:["7"],capital:"Moscow",altSpellings:["RU","Rossiya","Russian Federation","\u0420\u043E\u0441\u0441\u0438\u0439\u0441\u043A\u0430\u044F \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u044F","Rossiyskaya Federatsiya"],region:"Europe",subregion:"Eastern Europe",population:146599183,latlng:[60,100],demonym:"Russian",area:17124442,gini:40.1,timezones:["UTC+03:00","UTC+04:00","UTC+06:00","UTC+07:00","UTC+08:00","UTC+09:00","UTC+10:00","UTC+11:00","UTC+12:00"],borders:["AZE","BLR","CHN","EST","FIN","GEO","KAZ","PRK","LVA","LTU","MNG","NOR","POL","UKR"],nativeName:"\u0420\u043E\u0441\u0441\u0438\u044F",numericCode:"643",currencies:[{code:"RUB",name:"Russian ruble",symbol:"\u20BD"}],languages:[{iso639_1:"ru",iso639_2:"rus",name:"Russian",nativeName:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"}],translations:{de:"Russland",es:"Rusia",fr:"Russie",ja:"\u30ED\u30B7\u30A2\u9023\u90A6",it:"Russia",br:"R\xFAssia",pt:"R\xFAssia",nl:"Rusland",hr:"Rusija",fa:"\u0631\u0648\u0633\u06CC\u0647"},flag:"https://restcountries.eu/data/rus.svg",regionalBlocs:[{acronym:"EEU",name:"Eurasian Economic Union",otherAcronyms:["EAEU"],otherNames:[]}],cioc:"RUS"},{name:"Rwanda",topLevelDomain:[".rw"],alpha2Code:"RW",alpha3Code:"RWA",callingCodes:["250"],capital:"Kigali",altSpellings:["RW","Republic of Rwanda","Repubulika y'u Rwanda","R\xE9publique du Rwanda"],region:"Africa",subregion:"Eastern Africa",population:11553188,latlng:[-2,30],demonym:"Rwandan",area:26338,gini:50.8,timezones:["UTC+02:00"],borders:["BDI","COD","TZA","UGA"],nativeName:"Rwanda",numericCode:"646",currencies:[{code:"RWF",name:"Rwandan franc",symbol:"Fr"}],languages:[{iso639_1:"rw",iso639_2:"kin",name:"Kinyarwanda",nativeName:"Ikinyarwanda"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Ruanda",es:"Ruanda",fr:"Rwanda",ja:"\u30EB\u30EF\u30F3\u30C0",it:"Ruanda",br:"Ruanda",pt:"Ruanda",nl:"Rwanda",hr:"Ruanda",fa:"\u0631\u0648\u0627\u0646\u062F\u0627"},flag:"https://restcountries.eu/data/rwa.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"RWA"},{name:"Saint Barth\xE9lemy",topLevelDomain:[".bl"],alpha2Code:"BL",alpha3Code:"BLM",callingCodes:["590"],capital:"Gustavia",altSpellings:["BL","St. Barthelemy","Collectivity of Saint Barth\xE9lemy","Collectivit\xE9 de Saint-Barth\xE9lemy"],region:"Americas",subregion:"Caribbean",population:9417,latlng:[18.5,-63.41666666],demonym:"Saint Barth\xE9lemy Islander",area:21,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Saint-Barth\xE9lemy",numericCode:"652",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Saint-Barth\xE9lemy",es:"San Bartolom\xE9",fr:"Saint-Barth\xE9lemy",ja:"\u30B5\u30F3\u30FB\u30D0\u30EB\u30C6\u30EB\u30DF\u30FC",it:"Antille Francesi",br:"S\xE3o Bartolomeu",pt:"S\xE3o Bartolomeu",nl:"Saint Barth\xE9lemy",hr:"Saint Barth\xE9lemy",fa:"\u0633\u0646-\u0628\u0627\u0631\u062A\u0644\u0645\u06CC"},flag:"https://restcountries.eu/data/blm.svg",regionalBlocs:[],cioc:""},{name:"Saint Helena, Ascension and Tristan da Cunha",topLevelDomain:[".sh"],alpha2Code:"SH",alpha3Code:"SHN",callingCodes:["290"],capital:"Jamestown",altSpellings:["SH"],region:"Africa",subregion:"Western Africa",population:4255,latlng:[-15.95,-5.7],demonym:"Saint Helenian",area:null,gini:null,timezones:["UTC+00:00"],borders:[],nativeName:"Saint Helena",numericCode:"654",currencies:[{code:"SHP",name:"Saint Helena pound",symbol:"\xA3"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Sankt Helena",es:"Santa Helena",fr:"Sainte-H\xE9l\xE8ne",ja:"\u30BB\u30F3\u30C8\u30D8\u30EC\u30CA\u30FB\u30A2\u30BB\u30F3\u30B7\u30E7\u30F3\u304A\u3088\u3073\u30C8\u30EA\u30B9\u30BF\u30F3\u30C0\u30AF\u30FC\u30CB\u30E3",it:"Sant'Elena",br:"Santa Helena",pt:"Santa Helena",nl:"Sint-Helena",hr:"Sveta Helena",fa:"\u0633\u0646\u062A \u0647\u0644\u0646\u0627\u060C \u0627\u0633\u0646\u0634\u0646 \u0648 \u062A\u0631\u06CC\u0633\u062A\u0627\u0646 \u062F\u0627 \u06A9\u0648\u0646\u0627"},flag:"https://restcountries.eu/data/shn.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:null},{name:"Saint Kitts and Nevis",topLevelDomain:[".kn"],alpha2Code:"KN",alpha3Code:"KNA",callingCodes:["1869"],capital:"Basseterre",altSpellings:["KN","Federation of Saint Christopher and Nevis"],region:"Americas",subregion:"Caribbean",population:46204,latlng:[17.33333333,-62.75],demonym:"Kittian and Nevisian",area:261,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Saint Kitts and Nevis",numericCode:"659",currencies:[{code:"XCD",name:"East Caribbean dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"St. Kitts und Nevis",es:"San Crist\xF3bal y Nieves",fr:"Saint-Christophe-et-Ni\xE9v\xE8s",ja:"\u30BB\u30F3\u30C8\u30AF\u30EA\u30B9\u30C8\u30D5\u30A1\u30FC\u30FB\u30CD\u30A4\u30D3\u30B9",it:"Saint Kitts e Nevis",br:"S\xE3o Crist\xF3v\xE3o e Neves",pt:"S\xE3o Crist\xF3v\xE3o e Neves",nl:"Saint Kitts en Nevis",hr:"Sveti Kristof i Nevis",fa:"\u0633\u0646\u062A \u06A9\u06CC\u062A\u0633 \u0648 \u0646\u0648\u06CC\u0633"},flag:"https://restcountries.eu/data/kna.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]}],cioc:"SKN"},{name:"Saint Lucia",topLevelDomain:[".lc"],alpha2Code:"LC",alpha3Code:"LCA",callingCodes:["1758"],capital:"Castries",altSpellings:["LC"],region:"Americas",subregion:"Caribbean",population:186e3,latlng:[13.88333333,-60.96666666],demonym:"Saint Lucian",area:616,gini:42.6,timezones:["UTC-04:00"],borders:[],nativeName:"Saint Lucia",numericCode:"662",currencies:[{code:"XCD",name:"East Caribbean dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Saint Lucia",es:"Santa Luc\xEDa",fr:"Saint-Lucie",ja:"\u30BB\u30F3\u30C8\u30EB\u30B7\u30A2",it:"Santa Lucia",br:"Santa L\xFAcia",pt:"Santa L\xFAcia",nl:"Saint Lucia",hr:"Sveta Lucija",fa:"\u0633\u0646\u062A \u0644\u0648\u0633\u06CC\u0627"},flag:"https://restcountries.eu/data/lca.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]}],cioc:"LCA"},{name:"Saint Martin (French part)",topLevelDomain:[".mf",".fr",".gp"],alpha2Code:"MF",alpha3Code:"MAF",callingCodes:["590"],capital:"Marigot",altSpellings:["MF","Collectivity of Saint Martin","Collectivit\xE9 de Saint-Martin"],region:"Americas",subregion:"Caribbean",population:36979,latlng:[18.08333333,-63.95],demonym:"Saint Martin Islander",area:53,gini:null,timezones:["UTC-04:00"],borders:["SXM","NLD"],nativeName:"Saint-Martin",numericCode:"663",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"nl",iso639_2:"nld",name:"Dutch",nativeName:"Nederlands"}],translations:{de:"Saint Martin",es:"Saint Martin",fr:"Saint-Martin",ja:"\u30B5\u30F3\u30FB\u30DE\u30EB\u30BF\u30F3\uFF08\u30D5\u30E9\u30F3\u30B9\u9818\uFF09",it:"Saint Martin",br:"Saint Martin",pt:"Ilha S\xE3o Martinho",nl:"Saint-Martin",hr:"Sveti Martin",fa:"\u0633\u06CC\u0646\u062A \u0645\u0627\u0631\u062A\u0646"},flag:"https://restcountries.eu/data/maf.svg",regionalBlocs:[],cioc:""},{name:"Saint Pierre and Miquelon",topLevelDomain:[".pm"],alpha2Code:"PM",alpha3Code:"SPM",callingCodes:["508"],capital:"Saint-Pierre",altSpellings:["PM","Collectivit\xE9 territoriale de Saint-Pierre-et-Miquelon"],region:"Americas",subregion:"Northern America",population:6069,latlng:[46.83333333,-56.33333333],demonym:"French",area:242,gini:null,timezones:["UTC-03:00"],borders:[],nativeName:"Saint-Pierre-et-Miquelon",numericCode:"666",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Saint-Pierre und Miquelon",es:"San Pedro y Miquel\xF3n",fr:"Saint-Pierre-et-Miquelon",ja:"\u30B5\u30F3\u30D4\u30A8\u30FC\u30EB\u5CF6\u30FB\u30DF\u30AF\u30ED\u30F3\u5CF6",it:"Saint-Pierre e Miquelon",br:"Saint-Pierre e Miquelon",pt:"S\xE3o Pedro e Miquelon",nl:"Saint Pierre en Miquelon",hr:"Sveti Petar i Mikelon",fa:"\u0633\u0646 \u067E\u06CC\u0631 \u0648 \u0645\u06CC\u06A9\u0644\u0646"},flag:"https://restcountries.eu/data/spm.svg",regionalBlocs:[],cioc:""},{name:"Saint Vincent and the Grenadines",topLevelDomain:[".vc"],alpha2Code:"VC",alpha3Code:"VCT",callingCodes:["1784"],capital:"Kingstown",altSpellings:["VC"],region:"Americas",subregion:"Caribbean",population:109991,latlng:[13.25,-61.2],demonym:"Saint Vincentian",area:389,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Saint Vincent and the Grenadines",numericCode:"670",currencies:[{code:"XCD",name:"East Caribbean dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Saint Vincent und die Grenadinen",es:"San Vicente y Granadinas",fr:"Saint-Vincent-et-les-Grenadines",ja:"\u30BB\u30F3\u30C8\u30D3\u30F3\u30BB\u30F3\u30C8\u304A\u3088\u3073\u30B0\u30EC\u30CA\u30C7\u30A3\u30FC\u30F3\u8AF8\u5CF6",it:"Saint Vincent e Grenadine",br:"S\xE3o Vicente e Granadinas",pt:"S\xE3o Vicente e Granadinas",nl:"Saint Vincent en de Grenadines",hr:"Sveti Vincent i Grenadini",fa:"\u0633\u0646\u062A \u0648\u06CC\u0646\u0633\u0646\u062A \u0648 \u06AF\u0631\u0646\u0627\u062F\u06CC\u0646\u200C\u0647\u0627"},flag:"https://restcountries.eu/data/vct.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]}],cioc:"VIN"},{name:"Samoa",topLevelDomain:[".ws"],alpha2Code:"WS",alpha3Code:"WSM",callingCodes:["685"],capital:"Apia",altSpellings:["WS","Independent State of Samoa","Malo Sa\u02BBoloto Tuto\u02BBatasi o S\u0101moa"],region:"Oceania",subregion:"Polynesia",population:194899,latlng:[-13.58333333,-172.33333333],demonym:"Samoan",area:2842,gini:null,timezones:["UTC+13:00"],borders:[],nativeName:"Samoa",numericCode:"882",currencies:[{code:"WST",name:"Samoan t\u0101l\u0101",symbol:"T"}],languages:[{iso639_1:"sm",iso639_2:"smo",name:"Samoan",nativeName:"gagana fa'a Samoa"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Samoa",es:"Samoa",fr:"Samoa",ja:"\u30B5\u30E2\u30A2",it:"Samoa",br:"Samoa",pt:"Samoa",nl:"Samoa",hr:"Samoa",fa:"\u0633\u0627\u0645\u0648\u0622"},flag:"https://restcountries.eu/data/wsm.svg",regionalBlocs:[],cioc:"SAM"},{name:"San Marino",topLevelDomain:[".sm"],alpha2Code:"SM",alpha3Code:"SMR",callingCodes:["378"],capital:"City of San Marino",altSpellings:["SM","Republic of San Marino","Repubblica di San Marino"],region:"Europe",subregion:"Southern Europe",population:33005,latlng:[43.76666666,12.41666666],demonym:"Sammarinese",area:61,gini:null,timezones:["UTC+01:00"],borders:["ITA"],nativeName:"San Marino",numericCode:"674",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"it",iso639_2:"ita",name:"Italian",nativeName:"Italiano"}],translations:{de:"San Marino",es:"San Marino",fr:"Saint-Marin",ja:"\u30B5\u30F3\u30DE\u30EA\u30CE",it:"San Marino",br:"San Marino",pt:"S\xE3o Marinho",nl:"San Marino",hr:"San Marino",fa:"\u0633\u0627\u0646 \u0645\u0627\u0631\u06CC\u0646\u0648"},flag:"https://restcountries.eu/data/smr.svg",regionalBlocs:[],cioc:"SMR"},{name:"Sao Tome and Principe",topLevelDomain:[".st"],alpha2Code:"ST",alpha3Code:"STP",callingCodes:["239"],capital:"S\xE3o Tom\xE9",altSpellings:["ST","Democratic Republic of S\xE3o Tom\xE9 and Pr\xEDncipe","Rep\xFAblica Democr\xE1tica de S\xE3o Tom\xE9 e Pr\xEDncipe"],region:"Africa",subregion:"Middle Africa",population:187356,latlng:[1,7],demonym:"Sao Tomean",area:964,gini:50.8,timezones:["UTC"],borders:[],nativeName:"S\xE3o Tom\xE9 e Pr\xEDncipe",numericCode:"678",currencies:[{code:"STD",name:"S\xE3o Tom\xE9 and Pr\xEDncipe dobra",symbol:"Db"}],languages:[{iso639_1:"pt",iso639_2:"por",name:"Portuguese",nativeName:"Portugu\xEAs"}],translations:{de:"S\xE3o Tom\xE9 und Pr\xEDncipe",es:"Santo Tom\xE9 y Pr\xEDncipe",fr:"Sao Tom\xE9-et-Principe",ja:"\u30B5\u30F3\u30C8\u30E1\u30FB\u30D7\u30EA\u30F3\u30B7\u30DA",it:"S\xE3o Tom\xE9 e Pr\xEDncipe",br:"S\xE3o Tom\xE9 e Pr\xEDncipe",pt:"S\xE3o Tom\xE9 e Pr\xEDncipe",nl:"Sao Tom\xE9 en Principe",hr:"Sveti Toma i Princip",fa:"\u06A9\u0648\u0627\u062A\u0631\u0648 \u062F\u0648 \u0641\u0631\u0648\u06CC\u0631\u0648"},flag:"https://restcountries.eu/data/stp.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"STP"},{name:"Saudi Arabia",topLevelDomain:[".sa"],alpha2Code:"SA",alpha3Code:"SAU",callingCodes:["966"],capital:"Riyadh",altSpellings:["SA","Kingdom of Saudi Arabia","Al-Mamlakah al-\u2018Arabiyyah as-Su\u2018\u016Bdiyyah"],region:"Asia",subregion:"Western Asia",population:32248200,latlng:[25,45],demonym:"Saudi Arabian",area:2149690,gini:null,timezones:["UTC+03:00"],borders:["IRQ","JOR","KWT","OMN","QAT","ARE","YEM"],nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629",numericCode:"682",currencies:[{code:"SAR",name:"Saudi riyal",symbol:"\u0631.\u0633"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Saudi-Arabien",es:"Arabia Saud\xED",fr:"Arabie Saoudite",ja:"\u30B5\u30A6\u30B8\u30A2\u30E9\u30D3\u30A2",it:"Arabia Saudita",br:"Ar\xE1bia Saudita",pt:"Ar\xE1bia Saudita",nl:"Saoedi-Arabi\xEB",hr:"Saudijska Arabija",fa:"\u0639\u0631\u0628\u0633\u062A\u0627\u0646 \u0633\u0639\u0648\u062F\u06CC"},flag:"https://restcountries.eu/data/sau.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"KSA"},{name:"Senegal",topLevelDomain:[".sn"],alpha2Code:"SN",alpha3Code:"SEN",callingCodes:["221"],capital:"Dakar",altSpellings:["SN","Republic of Senegal","R\xE9publique du S\xE9n\xE9gal"],region:"Africa",subregion:"Western Africa",population:14799859,latlng:[14,-14],demonym:"Senegalese",area:196722,gini:39.2,timezones:["UTC"],borders:["GMB","GIN","GNB","MLI","MRT"],nativeName:"S\xE9n\xE9gal",numericCode:"686",currencies:[{code:"XOF",name:"West African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Senegal",es:"Senegal",fr:"S\xE9n\xE9gal",ja:"\u30BB\u30CD\u30AC\u30EB",it:"Senegal",br:"Senegal",pt:"Senegal",nl:"Senegal",hr:"Senegal",fa:"\u0633\u0646\u06AF\u0627\u0644"},flag:"https://restcountries.eu/data/sen.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"SEN"},{name:"Serbia",topLevelDomain:[".rs"],alpha2Code:"RS",alpha3Code:"SRB",callingCodes:["381"],capital:"Belgrade",altSpellings:["RS","Srbija","Republic of Serbia","\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0440\u0431\u0438\u0458\u0430","Republika Srbija"],region:"Europe",subregion:"Southern Europe",population:7076372,latlng:[44,21],demonym:"Serbian",area:88361,gini:27.8,timezones:["UTC+01:00"],borders:["BIH","BGR","HRV","HUN","KOS","MKD","MNE","ROU"],nativeName:"\u0421\u0440\u0431\u0438\u0458\u0430",numericCode:"688",currencies:[{code:"RSD",name:"Serbian dinar",symbol:"\u0434\u0438\u043D."}],languages:[{iso639_1:"sr",iso639_2:"srp",name:"Serbian",nativeName:"\u0441\u0440\u043F\u0441\u043A\u0438 \u0458\u0435\u0437\u0438\u043A"}],translations:{de:"Serbien",es:"Serbia",fr:"Serbie",ja:"\u30BB\u30EB\u30D3\u30A2",it:"Serbia",br:"S\xE9rvia",pt:"S\xE9rvia",nl:"Servi\xEB",hr:"Srbija",fa:"\u0635\u0631\u0628\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/srb.svg",regionalBlocs:[{acronym:"CEFTA",name:"Central European Free Trade Agreement",otherAcronyms:[],otherNames:[]}],cioc:"SRB"},{name:"Seychelles",topLevelDomain:[".sc"],alpha2Code:"SC",alpha3Code:"SYC",callingCodes:["248"],capital:"Victoria",altSpellings:["SC","Republic of Seychelles","Repiblik Sesel","R\xE9publique des Seychelles"],region:"Africa",subregion:"Eastern Africa",population:91400,latlng:[-4.58333333,55.66666666],demonym:"Seychellois",area:452,gini:65.8,timezones:["UTC+04:00"],borders:[],nativeName:"Seychelles",numericCode:"690",currencies:[{code:"SCR",name:"Seychellois rupee",symbol:"\u20A8"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Seychellen",es:"Seychelles",fr:"Seychelles",ja:"\u30BB\u30FC\u30B7\u30A7\u30EB",it:"Seychelles",br:"Seicheles",pt:"Seicheles",nl:"Seychellen",hr:"Sej\u0161eli",fa:"\u0633\u06CC\u0634\u0644"},flag:"https://restcountries.eu/data/syc.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"SEY"},{name:"Sierra Leone",topLevelDomain:[".sl"],alpha2Code:"SL",alpha3Code:"SLE",callingCodes:["232"],capital:"Freetown",altSpellings:["SL","Republic of Sierra Leone"],region:"Africa",subregion:"Western Africa",population:7075641,latlng:[8.5,-11.5],demonym:"Sierra Leonean",area:71740,gini:42.5,timezones:["UTC"],borders:["GIN","LBR"],nativeName:"Sierra Leone",numericCode:"694",currencies:[{code:"SLL",name:"Sierra Leonean leone",symbol:"Le"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Sierra Leone",es:"Sierra Leone",fr:"Sierra Leone",ja:"\u30B7\u30A8\u30E9\u30EC\u30AA\u30CD",it:"Sierra Leone",br:"Serra Leoa",pt:"Serra Leoa",nl:"Sierra Leone",hr:"Sijera Leone",fa:"\u0633\u06CC\u0631\u0627\u0644\u0626\u0648\u0646"},flag:"https://restcountries.eu/data/sle.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"SLE"},{name:"Singapore",topLevelDomain:[".sg"],alpha2Code:"SG",alpha3Code:"SGP",callingCodes:["65"],capital:"Singapore",altSpellings:["SG","Singapura","Republik Singapura","\u65B0\u52A0\u5761\u5171\u548C\u56FD"],region:"Asia",subregion:"South-Eastern Asia",population:5535e3,latlng:[1.36666666,103.8],demonym:"Singaporean",area:710,gini:48.1,timezones:["UTC+08:00"],borders:[],nativeName:"Singapore",numericCode:"702",currencies:[{code:"BND",name:"Brunei dollar",symbol:"$"},{code:"SGD",name:"Singapore dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"ms",iso639_2:"msa",name:"Malay",nativeName:"bahasa Melayu"},{iso639_1:"ta",iso639_2:"tam",name:"Tamil",nativeName:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},{iso639_1:"zh",iso639_2:"zho",name:"Chinese",nativeName:"\u4E2D\u6587 (Zh\u014Dngw\xE9n)"}],translations:{de:"Singapur",es:"Singapur",fr:"Singapour",ja:"\u30B7\u30F3\u30AC\u30DD\u30FC\u30EB",it:"Singapore",br:"Singapura",pt:"Singapura",nl:"Singapore",hr:"Singapur",fa:"\u0633\u0646\u06AF\u0627\u067E\u0648\u0631"},flag:"https://restcountries.eu/data/sgp.svg",regionalBlocs:[{acronym:"ASEAN",name:"Association of Southeast Asian Nations",otherAcronyms:[],otherNames:[]}],cioc:"SIN"},{name:"Sint Maarten (Dutch part)",topLevelDomain:[".sx"],alpha2Code:"SX",alpha3Code:"SXM",callingCodes:["1721"],capital:"Philipsburg",altSpellings:["SX"],region:"Americas",subregion:"Caribbean",population:38247,latlng:[18.033333,-63.05],demonym:"Dutch",area:34,gini:null,timezones:["UTC-04:00"],borders:["MAF"],nativeName:"Sint Maarten",numericCode:"534",currencies:[{code:"ANG",name:"Netherlands Antillean guilder",symbol:"\u0192"}],languages:[{iso639_1:"nl",iso639_2:"nld",name:"Dutch",nativeName:"Nederlands"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Sint Maarten (niederl. Teil)",es:null,fr:"Saint Martin (partie n\xE9erlandaise)",ja:null,it:"Saint Martin (parte olandese)",br:"Sint Maarten",pt:"S\xE3o Martinho",nl:"Sint Maarten",hr:null,fa:"\u0633\u06CC\u0646\u062A \u0645\u0627\u0631\u062A\u0646"},flag:"https://restcountries.eu/data/sxm.svg",regionalBlocs:[],cioc:""},{name:"Slovakia",topLevelDomain:[".sk"],alpha2Code:"SK",alpha3Code:"SVK",callingCodes:["421"],capital:"Bratislava",altSpellings:["SK","Slovak Republic","Slovensk\xE1 republika"],region:"Europe",subregion:"Eastern Europe",population:5426252,latlng:[48.66666666,19.5],demonym:"Slovak",area:49037,gini:26,timezones:["UTC+01:00"],borders:["AUT","CZE","HUN","POL","UKR"],nativeName:"Slovensko",numericCode:"703",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"sk",iso639_2:"slk",name:"Slovak",nativeName:"sloven\u010Dina"}],translations:{de:"Slowakei",es:"Rep\xFAblica Eslovaca",fr:"Slovaquie",ja:"\u30B9\u30ED\u30D0\u30AD\u30A2",it:"Slovacchia",br:"Eslov\xE1quia",pt:"Eslov\xE1quia",nl:"Slowakije",hr:"Slova\u010Dka",fa:"\u0627\u0633\u0644\u0648\u0627\u06A9\u06CC"},flag:"https://restcountries.eu/data/svk.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"SVK"},{name:"Slovenia",topLevelDomain:[".si"],alpha2Code:"SI",alpha3Code:"SVN",callingCodes:["386"],capital:"Ljubljana",altSpellings:["SI","Republic of Slovenia","Republika Slovenija"],region:"Europe",subregion:"Southern Europe",population:2064188,latlng:[46.11666666,14.81666666],demonym:"Slovene",area:20273,gini:31.2,timezones:["UTC+01:00"],borders:["AUT","HRV","ITA","HUN"],nativeName:"Slovenija",numericCode:"705",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"sl",iso639_2:"slv",name:"Slovene",nativeName:"slovenski jezik"}],translations:{de:"Slowenien",es:"Eslovenia",fr:"Slov\xE9nie",ja:"\u30B9\u30ED\u30D9\u30CB\u30A2",it:"Slovenia",br:"Eslov\xEAnia",pt:"Eslov\xE9nia",nl:"Sloveni\xEB",hr:"Slovenija",fa:"\u0627\u0633\u0644\u0648\u0648\u0646\u06CC"},flag:"https://restcountries.eu/data/svn.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"SLO"},{name:"Solomon Islands",topLevelDomain:[".sb"],alpha2Code:"SB",alpha3Code:"SLB",callingCodes:["677"],capital:"Honiara",altSpellings:["SB"],region:"Oceania",subregion:"Melanesia",population:642e3,latlng:[-8,159],demonym:"Solomon Islander",area:28896,gini:null,timezones:["UTC+11:00"],borders:[],nativeName:"Solomon Islands",numericCode:"090",currencies:[{code:"SBD",name:"Solomon Islands dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Salomonen",es:"Islas Salom\xF3n",fr:"\xCEles Salomon",ja:"\u30BD\u30ED\u30E2\u30F3\u8AF8\u5CF6",it:"Isole Salomone",br:"Ilhas Salom\xE3o",pt:"Ilhas Salom\xE3o",nl:"Salomonseilanden",hr:"Solomonski Otoci",fa:"\u062C\u0632\u0627\u06CC\u0631 \u0633\u0644\u06CC\u0645\u0627\u0646"},flag:"https://restcountries.eu/data/slb.svg",regionalBlocs:[],cioc:"SOL"},{name:"Somalia",topLevelDomain:[".so"],alpha2Code:"SO",alpha3Code:"SOM",callingCodes:["252"],capital:"Mogadishu",altSpellings:["SO","a\u1E63-\u1E62\u016Bm\u0101l","Federal Republic of Somalia","Jamhuuriyadda Federaalka Soomaaliya","Jumh\u016Briyyat a\u1E63-\u1E62\u016Bm\u0101l al-Fider\u0101liyya"],region:"Africa",subregion:"Eastern Africa",population:11079e3,latlng:[10,49],demonym:"Somali",area:637657,gini:null,timezones:["UTC+03:00"],borders:["DJI","ETH","KEN"],nativeName:"Soomaaliya",numericCode:"706",currencies:[{code:"SOS",name:"Somali shilling",symbol:"Sh"}],languages:[{iso639_1:"so",iso639_2:"som",name:"Somali",nativeName:"Soomaaliga"},{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Somalia",es:"Somalia",fr:"Somalie",ja:"\u30BD\u30DE\u30EA\u30A2",it:"Somalia",br:"Som\xE1lia",pt:"Som\xE1lia",nl:"Somali\xEB",hr:"Somalija",fa:"\u0633\u0648\u0645\u0627\u0644\u06CC"},flag:"https://restcountries.eu/data/som.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]},{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"SOM"},{name:"South Africa",topLevelDomain:[".za"],alpha2Code:"ZA",alpha3Code:"ZAF",callingCodes:["27"],capital:"Pretoria",altSpellings:["ZA","RSA","Suid-Afrika","Republic of South Africa"],region:"Africa",subregion:"Southern Africa",population:55653654,latlng:[-29,24],demonym:"South African",area:1221037,gini:63.1,timezones:["UTC+02:00"],borders:["BWA","LSO","MOZ","NAM","SWZ","ZWE"],nativeName:"South Africa",numericCode:"710",currencies:[{code:"ZAR",name:"South African rand",symbol:"R"}],languages:[{iso639_1:"af",iso639_2:"afr",name:"Afrikaans",nativeName:"Afrikaans"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"nr",iso639_2:"nbl",name:"Southern Ndebele",nativeName:"isiNdebele"},{iso639_1:"st",iso639_2:"sot",name:"Southern Sotho",nativeName:"Sesotho"},{iso639_1:"ss",iso639_2:"ssw",name:"Swati",nativeName:"SiSwati"},{iso639_1:"tn",iso639_2:"tsn",name:"Tswana",nativeName:"Setswana"},{iso639_1:"ts",iso639_2:"tso",name:"Tsonga",nativeName:"Xitsonga"},{iso639_1:"ve",iso639_2:"ven",name:"Venda",nativeName:"Tshiven\u1E13a"},{iso639_1:"xh",iso639_2:"xho",name:"Xhosa",nativeName:"isiXhosa"},{iso639_1:"zu",iso639_2:"zul",name:"Zulu",nativeName:"isiZulu"}],translations:{de:"Republik S\xFCdafrika",es:"Rep\xFAblica de Sud\xE1frica",fr:"Afrique du Sud",ja:"\u5357\u30A2\u30D5\u30EA\u30AB",it:"Sud Africa",br:"Rep\xFAblica Sul-Africana",pt:"Rep\xFAblica Sul-Africana",nl:"Zuid-Afrika",hr:"Ju\u017Enoafri\u010Dka Republika",fa:"\u0622\u0641\u0631\u06CC\u0642\u0627\u06CC \u062C\u0646\u0648\u0628\u06CC"},flag:"https://restcountries.eu/data/zaf.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"RSA"},{name:"South Georgia and the South Sandwich Islands",topLevelDomain:[".gs"],alpha2Code:"GS",alpha3Code:"SGS",callingCodes:["500"],capital:"King Edward Point",altSpellings:["GS","South Georgia and the South Sandwich Islands"],region:"Americas",subregion:"South America",population:30,latlng:[-54.5,-37],demonym:"South Georgia and the South Sandwich Islander",area:null,gini:null,timezones:["UTC-02:00"],borders:[],nativeName:"South Georgia",numericCode:"239",currencies:[{code:"GBP",name:"British pound",symbol:"\xA3"},{code:"(none)",name:null,symbol:"\xA3"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"S\xFCdgeorgien und die S\xFCdlichen Sandwichinseln",es:"Islas Georgias del Sur y Sandwich del Sur",fr:"G\xE9orgie du Sud-et-les \xCEles Sandwich du Sud",ja:"\u30B5\u30A6\u30B9\u30B8\u30E7\u30FC\u30B8\u30A2\u30FB\u30B5\u30A6\u30B9\u30B5\u30F3\u30C9\u30A6\u30A3\u30C3\u30C1\u8AF8\u5CF6",it:"Georgia del Sud e Isole Sandwich Meridionali",br:"Ilhas Ge\xF3rgias do Sul e Sandwich do Sul",pt:"Ilhas Ge\xF3rgia do Sul e Sandu\xEDche do Sul",nl:"Zuid-Georgia en Zuidelijke Sandwicheilanden",hr:"Ju\u017Ena Georgija i oto\u010Dje Ju\u017Eni Sandwich",fa:"\u062C\u0632\u0627\u06CC\u0631 \u062C\u0648\u0631\u062C\u06CC\u0627\u06CC \u062C\u0646\u0648\u0628\u06CC \u0648 \u0633\u0627\u0646\u062F\u0648\u06CC\u0686 \u062C\u0646\u0648\u0628\u06CC"},flag:"https://restcountries.eu/data/sgs.svg",regionalBlocs:[{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:""},{name:"Korea (Republic of)",topLevelDomain:[".kr"],alpha2Code:"KR",alpha3Code:"KOR",callingCodes:["82"],capital:"Seoul",altSpellings:["KR","Republic of Korea"],region:"Asia",subregion:"Eastern Asia",population:50801405,latlng:[37,127.5],demonym:"South Korean",area:100210,gini:31.3,timezones:["UTC+09:00"],borders:["PRK"],nativeName:"\uB300\uD55C\uBBFC\uAD6D",numericCode:"410",currencies:[{code:"KRW",name:"South Korean won",symbol:"\u20A9"}],languages:[{iso639_1:"ko",iso639_2:"kor",name:"Korean",nativeName:"\uD55C\uAD6D\uC5B4"}],translations:{de:"S\xFCdkorea",es:"Corea del Sur",fr:"Cor\xE9e du Sud",ja:"\u5927\u97D3\u6C11\u56FD",it:"Corea del Sud",br:"Coreia do Sul",pt:"Coreia do Sul",nl:"Zuid-Korea",hr:"Ju\u017Ena Koreja",fa:"\u06A9\u0631\u0647 \u0634\u0645\u0627\u0644\u06CC"},flag:"https://restcountries.eu/data/kor.svg",regionalBlocs:[],cioc:"KOR"},{name:"South Sudan",topLevelDomain:[".ss"],alpha2Code:"SS",alpha3Code:"SSD",callingCodes:["211"],capital:"Juba",altSpellings:["SS"],region:"Africa",subregion:"Middle Africa",population:12131e3,latlng:[7,30],demonym:"South Sudanese",area:619745,gini:45.5,timezones:["UTC+03:00"],borders:["CAF","COD","ETH","KEN","SDN","UGA"],nativeName:"South Sudan",numericCode:"728",currencies:[{code:"SSP",name:"South Sudanese pound",symbol:"\xA3"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"S\xFCdsudan",es:"Sud\xE1n del Sur",fr:"Soudan du Sud",ja:"\u5357\u30B9\u30FC\u30C0\u30F3",it:"Sudan del sud",br:"Sud\xE3o do Sul",pt:"Sud\xE3o do Sul",nl:"Zuid-Soedan",hr:"Ju\u017Eni Sudan",fa:"\u0633\u0648\u062F\u0627\u0646 \u062C\u0646\u0648\u0628\u06CC"},flag:"https://restcountries.eu/data/ssd.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:""},{name:"Spain",topLevelDomain:[".es"],alpha2Code:"ES",alpha3Code:"ESP",callingCodes:["34"],capital:"Madrid",altSpellings:["ES","Kingdom of Spain","Reino de Espa\xF1a"],region:"Europe",subregion:"Southern Europe",population:46438422,latlng:[40,-4],demonym:"Spanish",area:505992,gini:34.7,timezones:["UTC","UTC+01:00"],borders:["AND","FRA","GIB","PRT","MAR"],nativeName:"Espa\xF1a",numericCode:"724",currencies:[{code:"EUR",name:"Euro",symbol:"\u20AC"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Spanien",es:"Espa\xF1a",fr:"Espagne",ja:"\u30B9\u30DA\u30A4\u30F3",it:"Spagna",br:"Espanha",pt:"Espanha",nl:"Spanje",hr:"\u0160panjolska",fa:"\u0627\u0633\u067E\u0627\u0646\u06CC\u0627"},flag:"https://restcountries.eu/data/esp.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"ESP"},{name:"Sri Lanka",topLevelDomain:[".lk"],alpha2Code:"LK",alpha3Code:"LKA",callingCodes:["94"],capital:"Colombo",altSpellings:["LK","ila\u1E45kai","Democratic Socialist Republic of Sri Lanka"],region:"Asia",subregion:"Southern Asia",population:20966e3,latlng:[7,81],demonym:"Sri Lankan",area:65610,gini:40.3,timezones:["UTC+05:30"],borders:["IND"],nativeName:"\u015Br\u012B la\u1E43k\u0101va",numericCode:"144",currencies:[{code:"LKR",name:"Sri Lankan rupee",symbol:"Rs"}],languages:[{iso639_1:"si",iso639_2:"sin",name:"Sinhalese",nativeName:"\u0DC3\u0DD2\u0D82\u0DC4\u0DBD"},{iso639_1:"ta",iso639_2:"tam",name:"Tamil",nativeName:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"}],translations:{de:"Sri Lanka",es:"Sri Lanka",fr:"Sri Lanka",ja:"\u30B9\u30EA\u30E9\u30F3\u30AB",it:"Sri Lanka",br:"Sri Lanka",pt:"Sri Lanka",nl:"Sri Lanka",hr:"\u0160ri Lanka",fa:"\u0633\u0631\u06CC\u200C\u0644\u0627\u0646\u06A9\u0627"},flag:"https://restcountries.eu/data/lka.svg",regionalBlocs:[{acronym:"SAARC",name:"South Asian Association for Regional Cooperation",otherAcronyms:[],otherNames:[]}],cioc:"SRI"},{name:"Sudan",topLevelDomain:[".sd"],alpha2Code:"SD",alpha3Code:"SDN",callingCodes:["249"],capital:"Khartoum",altSpellings:["SD","Republic of the Sudan","Jumh\u016Br\u012Byat as-S\u016Bd\u0101n"],region:"Africa",subregion:"Northern Africa",population:39598700,latlng:[15,30],demonym:"Sudanese",area:1886068,gini:35.3,timezones:["UTC+03:00"],borders:["CAF","TCD","EGY","ERI","ETH","LBY","SSD"],nativeName:"\u0627\u0644\u0633\u0648\u062F\u0627\u0646",numericCode:"729",currencies:[{code:"SDG",name:"Sudanese pound",symbol:"\u062C.\u0633."}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Sudan",es:"Sud\xE1n",fr:"Soudan",ja:"\u30B9\u30FC\u30C0\u30F3",it:"Sudan",br:"Sud\xE3o",pt:"Sud\xE3o",nl:"Soedan",hr:"Sudan",fa:"\u0633\u0648\u062F\u0627\u0646"},flag:"https://restcountries.eu/data/sdn.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]},{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"SUD"},{name:"Suriname",topLevelDomain:[".sr"],alpha2Code:"SR",alpha3Code:"SUR",callingCodes:["597"],capital:"Paramaribo",altSpellings:["SR","Sarnam","Sranangron","Republic of Suriname","Republiek Suriname"],region:"Americas",subregion:"South America",population:541638,latlng:[4,-56],demonym:"Surinamer",area:163820,gini:52.9,timezones:["UTC-03:00"],borders:["BRA","GUF","FRA","GUY"],nativeName:"Suriname",numericCode:"740",currencies:[{code:"SRD",name:"Surinamese dollar",symbol:"$"}],languages:[{iso639_1:"nl",iso639_2:"nld",name:"Dutch",nativeName:"Nederlands"}],translations:{de:"Suriname",es:"Surinam",fr:"Surinam",ja:"\u30B9\u30EA\u30CA\u30E0",it:"Suriname",br:"Suriname",pt:"Suriname",nl:"Suriname",hr:"Surinam",fa:"\u0633\u0648\u0631\u06CC\u0646\u0627\u0645"},flag:"https://restcountries.eu/data/sur.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]},{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"SUR"},{name:"Svalbard and Jan Mayen",topLevelDomain:[".sj"],alpha2Code:"SJ",alpha3Code:"SJM",callingCodes:["4779"],capital:"Longyearbyen",altSpellings:["SJ","Svalbard and Jan Mayen Islands"],region:"Europe",subregion:"Northern Europe",population:2562,latlng:[78,20],demonym:"Norwegian",area:null,gini:null,timezones:["UTC+01:00"],borders:[],nativeName:"Svalbard og Jan Mayen",numericCode:"744",currencies:[{code:"NOK",name:"Norwegian krone",symbol:"kr"}],languages:[{iso639_1:"no",iso639_2:"nor",name:"Norwegian",nativeName:"Norsk"}],translations:{de:"Svalbard und Jan Mayen",es:"Islas Svalbard y Jan Mayen",fr:"Svalbard et Jan Mayen",ja:"\u30B9\u30F4\u30A1\u30FC\u30EB\u30D0\u30EB\u8AF8\u5CF6\u304A\u3088\u3073\u30E4\u30F3\u30DE\u30A4\u30A8\u30F3\u5CF6",it:"Svalbard e Jan Mayen",br:"Svalbard",pt:"Svalbard",nl:"Svalbard en Jan Mayen",hr:"Svalbard i Jan Mayen",fa:"\u0633\u0648\u0627\u0644\u0628\u0627\u0631\u062F \u0648 \u06CC\u0627\u0646 \u0645\u0627\u06CC\u0646"},flag:"https://restcountries.eu/data/sjm.svg",regionalBlocs:[],cioc:""},{name:"Swaziland",topLevelDomain:[".sz"],alpha2Code:"SZ",alpha3Code:"SWZ",callingCodes:["268"],capital:"Lobamba",altSpellings:["SZ","weSwatini","Swatini","Ngwane","Kingdom of Swaziland","Umbuso waseSwatini"],region:"Africa",subregion:"Southern Africa",population:1132657,latlng:[-26.5,31.5],demonym:"Swazi",area:17364,gini:51.5,timezones:["UTC+02:00"],borders:["MOZ","ZAF"],nativeName:"Swaziland",numericCode:"748",currencies:[{code:"SZL",name:"Swazi lilangeni",symbol:"L"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"ss",iso639_2:"ssw",name:"Swati",nativeName:"SiSwati"}],translations:{de:"Swasiland",es:"Suazilandia",fr:"Swaziland",ja:"\u30B9\u30EF\u30B8\u30E9\u30F3\u30C9",it:"Swaziland",br:"Suazil\xE2ndia",pt:"Suazil\xE2ndia",nl:"Swaziland",hr:"Svazi",fa:"\u0633\u0648\u0627\u0632\u06CC\u0644\u0646\u062F"},flag:"https://restcountries.eu/data/swz.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"SWZ"},{name:"Sweden",topLevelDomain:[".se"],alpha2Code:"SE",alpha3Code:"SWE",callingCodes:["46"],capital:"Stockholm",altSpellings:["SE","Kingdom of Sweden","Konungariket Sverige"],region:"Europe",subregion:"Northern Europe",population:9894888,latlng:[62,15],demonym:"Swedish",area:450295,gini:25,timezones:["UTC+01:00"],borders:["FIN","NOR"],nativeName:"Sverige",numericCode:"752",currencies:[{code:"SEK",name:"Swedish krona",symbol:"kr"}],languages:[{iso639_1:"sv",iso639_2:"swe",name:"Swedish",nativeName:"svenska"}],translations:{de:"Schweden",es:"Suecia",fr:"Su\xE8de",ja:"\u30B9\u30A6\u30A7\u30FC\u30C7\u30F3",it:"Svezia",br:"Su\xE9cia",pt:"Su\xE9cia",nl:"Zweden",hr:"\u0160vedska",fa:"\u0633\u0648\u0626\u062F"},flag:"https://restcountries.eu/data/swe.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"SWE"},{name:"Switzerland",topLevelDomain:[".ch"],alpha2Code:"CH",alpha3Code:"CHE",callingCodes:["41"],capital:"Bern",altSpellings:["CH","Swiss Confederation","Schweiz","Suisse","Svizzera","Svizra"],region:"Europe",subregion:"Western Europe",population:8341600,latlng:[47,8],demonym:"Swiss",area:41284,gini:33.7,timezones:["UTC+01:00"],borders:["AUT","FRA","ITA","LIE","DEU"],nativeName:"Schweiz",numericCode:"756",currencies:[{code:"CHF",name:"Swiss franc",symbol:"Fr"}],languages:[{iso639_1:"de",iso639_2:"deu",name:"German",nativeName:"Deutsch"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"},{iso639_1:"it",iso639_2:"ita",name:"Italian",nativeName:"Italiano"}],translations:{de:"Schweiz",es:"Suiza",fr:"Suisse",ja:"\u30B9\u30A4\u30B9",it:"Svizzera",br:"Su\xED\xE7a",pt:"Su\xED\xE7a",nl:"Zwitserland",hr:"\u0160vicarska",fa:"\u0633\u0648\u0626\u06CC\u0633"},flag:"https://restcountries.eu/data/che.svg",regionalBlocs:[{acronym:"EFTA",name:"European Free Trade Association",otherAcronyms:[],otherNames:[]}],cioc:"SUI"},{name:"Syrian Arab Republic",topLevelDomain:[".sy"],alpha2Code:"SY",alpha3Code:"SYR",callingCodes:["963"],capital:"Damascus",altSpellings:["SY","Syrian Arab Republic","Al-Jumh\u016Br\u012Byah Al-\u02BBArab\u012Byah As-S\u016Br\u012Byah"],region:"Asia",subregion:"Western Asia",population:18564e3,latlng:[35,38],demonym:"Syrian",area:185180,gini:35.8,timezones:["UTC+02:00"],borders:["IRQ","ISR","JOR","LBN","TUR"],nativeName:"\u0633\u0648\u0631\u064A\u0627",numericCode:"760",currencies:[{code:"SYP",name:"Syrian pound",symbol:"\xA3"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Syrien",es:"Siria",fr:"Syrie",ja:"\u30B7\u30EA\u30A2\u30FB\u30A2\u30E9\u30D6\u5171\u548C\u56FD",it:"Siria",br:"S\xEDria",pt:"S\xEDria",nl:"Syri\xEB",hr:"Sirija",fa:"\u0633\u0648\u0631\u06CC\u0647"},flag:"https://restcountries.eu/data/syr.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"SYR"},{name:"Taiwan",topLevelDomain:[".tw"],alpha2Code:"TW",alpha3Code:"TWN",callingCodes:["886"],capital:"Taipei",altSpellings:["TW","T\xE1iw\u0101n","Republic of China","\u4E2D\u83EF\u6C11\u570B","Zh\u014Dnghu\xE1 M\xEDngu\xF3"],region:"Asia",subregion:"Eastern Asia",population:23503349,latlng:[23.5,121],demonym:"Taiwanese",area:36193,gini:null,timezones:["UTC+08:00"],borders:[],nativeName:"\u81FA\u7063",numericCode:"158",currencies:[{code:"TWD",name:"New Taiwan dollar",symbol:"$"}],languages:[{iso639_1:"zh",iso639_2:"zho",name:"Chinese",nativeName:"\u4E2D\u6587 (Zh\u014Dngw\xE9n)"}],translations:{de:"Taiwan",es:"Taiw\xE1n",fr:"Ta\xEFwan",ja:"\u53F0\u6E7E\uFF08\u4E2D\u83EF\u6C11\u56FD\uFF09",it:"Taiwan",br:"Taiwan",pt:"Taiwan",nl:"Taiwan",hr:"Tajvan",fa:"\u062A\u0627\u06CC\u0648\u0627\u0646"},flag:"https://restcountries.eu/data/twn.svg",regionalBlocs:[],cioc:"TPE"},{name:"Tajikistan",topLevelDomain:[".tj"],alpha2Code:"TJ",alpha3Code:"TJK",callingCodes:["992"],capital:"Dushanbe",altSpellings:["TJ","To\xE7ikiston","Republic of Tajikistan","\u04B6\u0443\u043C\u04B3\u0443\u0440\u0438\u0438 \u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D","\xC7umhuriyi To\xE7ikiston"],region:"Asia",subregion:"Central Asia",population:8593600,latlng:[39,71],demonym:"Tadzhik",area:143100,gini:30.8,timezones:["UTC+05:00"],borders:["AFG","CHN","KGZ","UZB"],nativeName:"\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D",numericCode:"762",currencies:[{code:"TJS",name:"Tajikistani somoni",symbol:"\u0405\u041C"}],languages:[{iso639_1:"tg",iso639_2:"tgk",name:"Tajik",nativeName:"\u0442\u043E\u04B7\u0438\u043A\u04E3"},{iso639_1:"ru",iso639_2:"rus",name:"Russian",nativeName:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"}],translations:{de:"Tadschikistan",es:"Tayikist\xE1n",fr:"Tadjikistan",ja:"\u30BF\u30B8\u30AD\u30B9\u30BF\u30F3",it:"Tagikistan",br:"Tajiquist\xE3o",pt:"Tajiquist\xE3o",nl:"Tadzjikistan",hr:"Ta\u0111ikistan",fa:"\u062A\u0627\u062C\u06CC\u06A9\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/tjk.svg",regionalBlocs:[],cioc:"TJK"},{name:"Tanzania, United Republic of",topLevelDomain:[".tz"],alpha2Code:"TZ",alpha3Code:"TZA",callingCodes:["255"],capital:"Dodoma",altSpellings:["TZ","United Republic of Tanzania","Jamhuri ya Muungano wa Tanzania"],region:"Africa",subregion:"Eastern Africa",population:55155e3,latlng:[-6,35],demonym:"Tanzanian",area:945087,gini:37.6,timezones:["UTC+03:00"],borders:["BDI","COD","KEN","MWI","MOZ","RWA","UGA","ZMB"],nativeName:"Tanzania",numericCode:"834",currencies:[{code:"TZS",name:"Tanzanian shilling",symbol:"Sh"}],languages:[{iso639_1:"sw",iso639_2:"swa",name:"Swahili",nativeName:"Kiswahili"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Tansania",es:"Tanzania",fr:"Tanzanie",ja:"\u30BF\u30F3\u30B6\u30CB\u30A2",it:"Tanzania",br:"Tanz\xE2nia",pt:"Tanz\xE2nia",nl:"Tanzania",hr:"Tanzanija",fa:"\u062A\u0627\u0646\u0632\u0627\u0646\u06CC\u0627"},flag:"https://restcountries.eu/data/tza.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"TAN"},{name:"Thailand",topLevelDomain:[".th"],alpha2Code:"TH",alpha3Code:"THA",callingCodes:["66"],capital:"Bangkok",altSpellings:["TH","Prathet","Thai","Kingdom of Thailand","\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E44\u0E17\u0E22","Ratcha Anachak Thai"],region:"Asia",subregion:"South-Eastern Asia",population:65327652,latlng:[15,100],demonym:"Thai",area:513120,gini:40,timezones:["UTC+07:00"],borders:["MMR","KHM","LAO","MYS"],nativeName:"\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22",numericCode:"764",currencies:[{code:"THB",name:"Thai baht",symbol:"\u0E3F"}],languages:[{iso639_1:"th",iso639_2:"tha",name:"Thai",nativeName:"\u0E44\u0E17\u0E22"}],translations:{de:"Thailand",es:"Tailandia",fr:"Tha\xEFlande",ja:"\u30BF\u30A4",it:"Tailandia",br:"Tail\xE2ndia",pt:"Tail\xE2ndia",nl:"Thailand",hr:"Tajland",fa:"\u062A\u0627\u06CC\u0644\u0646\u062F"},flag:"https://restcountries.eu/data/tha.svg",regionalBlocs:[{acronym:"ASEAN",name:"Association of Southeast Asian Nations",otherAcronyms:[],otherNames:[]}],cioc:"THA"},{name:"Timor-Leste",topLevelDomain:[".tl"],alpha2Code:"TL",alpha3Code:"TLS",callingCodes:["670"],capital:"Dili",altSpellings:["TL","East Timor","Democratic Republic of Timor-Leste","Rep\xFAblica Democr\xE1tica de Timor-Leste","Rep\xFAblika Demokr\xE1tika Tim\xF3r-Leste"],region:"Asia",subregion:"South-Eastern Asia",population:1167242,latlng:[-8.83333333,125.91666666],demonym:"East Timorese",area:14874,gini:31.9,timezones:["UTC+09:00"],borders:["IDN"],nativeName:"Timor-Leste",numericCode:"626",currencies:[{code:"USD",name:"United States dollar",symbol:"$"},{code:null,name:null,symbol:null}],languages:[{iso639_1:"pt",iso639_2:"por",name:"Portuguese",nativeName:"Portugu\xEAs"}],translations:{de:"Timor-Leste",es:"Timor Oriental",fr:"Timor oriental",ja:"\u6771\u30C6\u30A3\u30E2\u30FC\u30EB",it:"Timor Est",br:"Timor Leste",pt:"Timor Leste",nl:"Oost-Timor",hr:"Isto\u010Dni Timor",fa:"\u062A\u06CC\u0645\u0648\u0631 \u0634\u0631\u0642\u06CC"},flag:"https://restcountries.eu/data/tls.svg",regionalBlocs:[],cioc:"TLS"},{name:"Togo",topLevelDomain:[".tg"],alpha2Code:"TG",alpha3Code:"TGO",callingCodes:["228"],capital:"Lom\xE9",altSpellings:["TG","Togolese","Togolese Republic","R\xE9publique Togolaise"],region:"Africa",subregion:"Western Africa",population:7143e3,latlng:[8,1.16666666],demonym:"Togolese",area:56785,gini:34.4,timezones:["UTC"],borders:["BEN","BFA","GHA"],nativeName:"Togo",numericCode:"768",currencies:[{code:"XOF",name:"West African CFA franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Togo",es:"Togo",fr:"Togo",ja:"\u30C8\u30FC\u30B4",it:"Togo",br:"Togo",pt:"Togo",nl:"Togo",hr:"Togo",fa:"\u062A\u0648\u06AF\u0648"},flag:"https://restcountries.eu/data/tgo.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"TOG"},{name:"Tokelau",topLevelDomain:[".tk"],alpha2Code:"TK",alpha3Code:"TKL",callingCodes:["690"],capital:"Fakaofo",altSpellings:["TK"],region:"Oceania",subregion:"Polynesia",population:1411,latlng:[-9,-172],demonym:"Tokelauan",area:12,gini:null,timezones:["UTC+13:00"],borders:[],nativeName:"Tokelau",numericCode:"772",currencies:[{code:"NZD",name:"New Zealand dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Tokelau",es:"Islas Tokelau",fr:"Tokelau",ja:"\u30C8\u30B1\u30E9\u30A6",it:"Isole Tokelau",br:"Tokelau",pt:"Toquelau",nl:"Tokelau",hr:"Tokelau",fa:"\u062A\u0648\u06A9\u0644\u0627\u0626\u0648"},flag:"https://restcountries.eu/data/tkl.svg",regionalBlocs:[],cioc:""},{name:"Tonga",topLevelDomain:[".to"],alpha2Code:"TO",alpha3Code:"TON",callingCodes:["676"],capital:"Nuku'alofa",altSpellings:["TO"],region:"Oceania",subregion:"Polynesia",population:103252,latlng:[-20,-175],demonym:"Tongan",area:747,gini:null,timezones:["UTC+13:00"],borders:[],nativeName:"Tonga",numericCode:"776",currencies:[{code:"TOP",name:"Tongan pa\u02BBanga",symbol:"T$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"to",iso639_2:"ton",name:"Tonga (Tonga Islands)",nativeName:"faka Tonga"}],translations:{de:"Tonga",es:"Tonga",fr:"Tonga",ja:"\u30C8\u30F3\u30AC",it:"Tonga",br:"Tonga",pt:"Tonga",nl:"Tonga",hr:"Tonga",fa:"\u062A\u0648\u0646\u06AF\u0627"},flag:"https://restcountries.eu/data/ton.svg",regionalBlocs:[],cioc:"TGA"},{name:"Trinidad and Tobago",topLevelDomain:[".tt"],alpha2Code:"TT",alpha3Code:"TTO",callingCodes:["1868"],capital:"Port of Spain",altSpellings:["TT","Republic of Trinidad and Tobago"],region:"Americas",subregion:"Caribbean",population:1349667,latlng:[11,-61],demonym:"Trinidadian",area:5130,gini:40.3,timezones:["UTC-04:00"],borders:[],nativeName:"Trinidad and Tobago",numericCode:"780",currencies:[{code:"TTD",name:"Trinidad and Tobago dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Trinidad und Tobago",es:"Trinidad y Tobago",fr:"Trinit\xE9 et Tobago",ja:"\u30C8\u30EA\u30CB\u30C0\u30FC\u30C9\u30FB\u30C8\u30D0\u30B4",it:"Trinidad e Tobago",br:"Trinidad e Tobago",pt:"Trindade e Tobago",nl:"Trinidad en Tobago",hr:"Trinidad i Tobago",fa:"\u062A\u0631\u06CC\u0646\u06CC\u062F\u0627\u062F \u0648 \u062A\u0648\u0628\u0627\u06AF\u0648"},flag:"https://restcountries.eu/data/tto.svg",regionalBlocs:[{acronym:"CARICOM",name:"Caribbean Community",otherAcronyms:[],otherNames:["Comunidad del Caribe","Communaut\xE9 Carib\xE9enne","Caribische Gemeenschap"]}],cioc:"TTO"},{name:"Tunisia",topLevelDomain:[".tn"],alpha2Code:"TN",alpha3Code:"TUN",callingCodes:["216"],capital:"Tunis",altSpellings:["TN","Republic of Tunisia","al-Jumh\u016Briyyah at-T\u016Bnisiyyah"],region:"Africa",subregion:"Northern Africa",population:11154400,latlng:[34,9],demonym:"Tunisian",area:163610,gini:41.4,timezones:["UTC+01:00"],borders:["DZA","LBY"],nativeName:"\u062A\u0648\u0646\u0633",numericCode:"788",currencies:[{code:"TND",name:"Tunisian dinar",symbol:"\u062F.\u062A"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Tunesien",es:"T\xFAnez",fr:"Tunisie",ja:"\u30C1\u30E5\u30CB\u30B8\u30A2",it:"Tunisia",br:"Tun\xEDsia",pt:"Tun\xEDsia",nl:"Tunesi\xEB",hr:"Tunis",fa:"\u062A\u0648\u0646\u0633"},flag:"https://restcountries.eu/data/tun.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]},{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"TUN"},{name:"Turkey",topLevelDomain:[".tr"],alpha2Code:"TR",alpha3Code:"TUR",callingCodes:["90"],capital:"Ankara",altSpellings:["TR","Turkiye","Republic of Turkey","T\xFCrkiye Cumhuriyeti"],region:"Asia",subregion:"Western Asia",population:78741053,latlng:[39,35],demonym:"Turkish",area:783562,gini:39,timezones:["UTC+03:00"],borders:["ARM","AZE","BGR","GEO","GRC","IRN","IRQ","SYR"],nativeName:"T\xFCrkiye",numericCode:"792",currencies:[{code:"TRY",name:"Turkish lira",symbol:null}],languages:[{iso639_1:"tr",iso639_2:"tur",name:"Turkish",nativeName:"T\xFCrk\xE7e"}],translations:{de:"T\xFCrkei",es:"Turqu\xEDa",fr:"Turquie",ja:"\u30C8\u30EB\u30B3",it:"Turchia",br:"Turquia",pt:"Turquia",nl:"Turkije",hr:"Turska",fa:"\u062A\u0631\u06A9\u06CC\u0647"},flag:"https://restcountries.eu/data/tur.svg",regionalBlocs:[],cioc:"TUR"},{name:"Turkmenistan",topLevelDomain:[".tm"],alpha2Code:"TM",alpha3Code:"TKM",callingCodes:["993"],capital:"Ashgabat",altSpellings:["TM"],region:"Asia",subregion:"Central Asia",population:4751120,latlng:[40,60],demonym:"Turkmen",area:488100,gini:40.8,timezones:["UTC+05:00"],borders:["AFG","IRN","KAZ","UZB"],nativeName:"T\xFCrkmenistan",numericCode:"795",currencies:[{code:"TMT",name:"Turkmenistan manat",symbol:"m"}],languages:[{iso639_1:"tk",iso639_2:"tuk",name:"Turkmen",nativeName:"T\xFCrkmen"},{iso639_1:"ru",iso639_2:"rus",name:"Russian",nativeName:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"}],translations:{de:"Turkmenistan",es:"Turkmenist\xE1n",fr:"Turkm\xE9nistan",ja:"\u30C8\u30EB\u30AF\u30E1\u30CB\u30B9\u30BF\u30F3",it:"Turkmenistan",br:"Turcomenist\xE3o",pt:"Turquemenist\xE3o",nl:"Turkmenistan",hr:"Turkmenistan",fa:"\u062A\u0631\u06A9\u0645\u0646\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/tkm.svg",regionalBlocs:[],cioc:"TKM"},{name:"Turks and Caicos Islands",topLevelDomain:[".tc"],alpha2Code:"TC",alpha3Code:"TCA",callingCodes:["1649"],capital:"Cockburn Town",altSpellings:["TC"],region:"Americas",subregion:"Caribbean",population:31458,latlng:[21.75,-71.58333333],demonym:"Turks and Caicos Islander",area:948,gini:null,timezones:["UTC-04:00"],borders:[],nativeName:"Turks and Caicos Islands",numericCode:"796",currencies:[{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Turks- und Caicosinseln",es:"Islas Turks y Caicos",fr:"\xCEles Turques-et-Ca\xEFques",ja:"\u30BF\u30FC\u30AF\u30B9\u30FB\u30AB\u30A4\u30B3\u30B9\u8AF8\u5CF6",it:"Isole Turks e Caicos",br:"Ilhas Turcas e Caicos",pt:"Ilhas Turcas e Caicos",nl:"Turks- en Caicoseilanden",hr:"Otoci Turks i Caicos",fa:"\u062C\u0632\u0627\u06CC\u0631 \u062A\u0648\u0631\u06A9\u0633 \u0648 \u06A9\u0627\u06CC\u06A9\u0648\u0633"},flag:"https://restcountries.eu/data/tca.svg",regionalBlocs:[],cioc:""},{name:"Tuvalu",topLevelDomain:[".tv"],alpha2Code:"TV",alpha3Code:"TUV",callingCodes:["688"],capital:"Funafuti",altSpellings:["TV"],region:"Oceania",subregion:"Polynesia",population:10640,latlng:[-8,178],demonym:"Tuvaluan",area:26,gini:null,timezones:["UTC+12:00"],borders:[],nativeName:"Tuvalu",numericCode:"798",currencies:[{code:"AUD",name:"Australian dollar",symbol:"$"},{code:"TVD[G]",name:"Tuvaluan dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Tuvalu",es:"Tuvalu",fr:"Tuvalu",ja:"\u30C4\u30D0\u30EB",it:"Tuvalu",br:"Tuvalu",pt:"Tuvalu",nl:"Tuvalu",hr:"Tuvalu",fa:"\u062A\u0648\u0648\u0627\u0644\u0648"},flag:"https://restcountries.eu/data/tuv.svg",regionalBlocs:[],cioc:"TUV"},{name:"Uganda",topLevelDomain:[".ug"],alpha2Code:"UG",alpha3Code:"UGA",callingCodes:["256"],capital:"Kampala",altSpellings:["UG","Republic of Uganda","Jamhuri ya Uganda"],region:"Africa",subregion:"Eastern Africa",population:33860700,latlng:[1,32],demonym:"Ugandan",area:241550,gini:44.3,timezones:["UTC+03:00"],borders:["COD","KEN","RWA","SSD","TZA"],nativeName:"Uganda",numericCode:"800",currencies:[{code:"UGX",name:"Ugandan shilling",symbol:"Sh"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"sw",iso639_2:"swa",name:"Swahili",nativeName:"Kiswahili"}],translations:{de:"Uganda",es:"Uganda",fr:"Uganda",ja:"\u30A6\u30AC\u30F3\u30C0",it:"Uganda",br:"Uganda",pt:"Uganda",nl:"Oeganda",hr:"Uganda",fa:"\u0627\u0648\u06AF\u0627\u0646\u062F\u0627"},flag:"https://restcountries.eu/data/uga.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"UGA"},{name:"Ukraine",topLevelDomain:[".ua"],alpha2Code:"UA",alpha3Code:"UKR",callingCodes:["380"],capital:"Kiev",altSpellings:["UA","Ukrayina"],region:"Europe",subregion:"Eastern Europe",population:42692393,latlng:[49,32],demonym:"Ukrainian",area:603700,gini:26.4,timezones:["UTC+02:00"],borders:["BLR","HUN","MDA","POL","ROU","RUS","SVK"],nativeName:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430",numericCode:"804",currencies:[{code:"UAH",name:"Ukrainian hryvnia",symbol:"\u20B4"}],languages:[{iso639_1:"uk",iso639_2:"ukr",name:"Ukrainian",nativeName:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"}],translations:{de:"Ukraine",es:"Ucrania",fr:"Ukraine",ja:"\u30A6\u30AF\u30E9\u30A4\u30CA",it:"Ucraina",br:"Ucr\xE2nia",pt:"Ucr\xE2nia",nl:"Oekra\xEFne",hr:"Ukrajina",fa:"\u0648\u06A9\u0631\u0627\u06CC\u0646"},flag:"https://restcountries.eu/data/ukr.svg",regionalBlocs:[],cioc:"UKR"},{name:"United Arab Emirates",topLevelDomain:[".ae"],alpha2Code:"AE",alpha3Code:"ARE",callingCodes:["971"],capital:"Abu Dhabi",altSpellings:["AE","UAE"],region:"Asia",subregion:"Western Asia",population:9856e3,latlng:[24,54],demonym:"Emirati",area:83600,gini:null,timezones:["UTC+04"],borders:["OMN","SAU"],nativeName:"\u062F\u0648\u0644\u0629 \u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629",numericCode:"784",currencies:[{code:"AED",name:"United Arab Emirates dirham",symbol:"\u062F.\u0625"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Vereinigte Arabische Emirate",es:"Emiratos \xC1rabes Unidos",fr:"\xC9mirats arabes unis",ja:"\u30A2\u30E9\u30D6\u9996\u9577\u56FD\u9023\u90A6",it:"Emirati Arabi Uniti",br:"Emirados \xE1rabes Unidos",pt:"Emirados \xE1rabes Unidos",nl:"Verenigde Arabische Emiraten",hr:"Ujedinjeni Arapski Emirati",fa:"\u0627\u0645\u0627\u0631\u0627\u062A \u0645\u062A\u062D\u062F\u0647 \u0639\u0631\u0628\u06CC"},flag:"https://restcountries.eu/data/are.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"UAE"},{name:"United Kingdom of Great Britain and Northern Ireland",topLevelDomain:[".uk"],alpha2Code:"GB",alpha3Code:"GBR",callingCodes:["44"],capital:"London",altSpellings:["GB","UK","Great Britain"],region:"Europe",subregion:"Northern Europe",population:6511e4,latlng:[54,-2],demonym:"British",area:242900,gini:34,timezones:["UTC-08:00","UTC-05:00","UTC-04:00","UTC-03:00","UTC-02:00","UTC","UTC+01:00","UTC+02:00","UTC+06:00"],borders:["IRL"],nativeName:"United Kingdom",numericCode:"826",currencies:[{code:"GBP",name:"British pound",symbol:"\xA3"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Vereinigtes K\xF6nigreich",es:"Reino Unido",fr:"Royaume-Uni",ja:"\u30A4\u30AE\u30EA\u30B9",it:"Regno Unito",br:"Reino Unido",pt:"Reino Unido",nl:"Verenigd Koninkrijk",hr:"Ujedinjeno Kraljevstvo",fa:"\u0628\u0631\u06CC\u062A\u0627\u0646\u06CC\u0627\u06CC \u06A9\u0628\u06CC\u0631 \u0648 \u0627\u06CC\u0631\u0644\u0646\u062F \u0634\u0645\u0627\u0644\u06CC"},flag:"https://restcountries.eu/data/gbr.svg",regionalBlocs:[{acronym:"EU",name:"European Union",otherAcronyms:[],otherNames:[]}],cioc:"GBR"},{name:"United States of America",topLevelDomain:[".us"],alpha2Code:"US",alpha3Code:"USA",callingCodes:["1"],capital:"Washington, D.C.",altSpellings:["US","USA","United States of America"],region:"Americas",subregion:"Northern America",population:323947e3,latlng:[38,-97],demonym:"American",area:9629091,gini:48,timezones:["UTC-12:00","UTC-11:00","UTC-10:00","UTC-09:00","UTC-08:00","UTC-07:00","UTC-06:00","UTC-05:00","UTC-04:00","UTC+10:00","UTC+12:00"],borders:["CAN","MEX"],nativeName:"United States",numericCode:"840",currencies:[{code:"USD",name:"United States dollar",symbol:"$"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Vereinigte Staaten von Amerika",es:"Estados Unidos",fr:"\xC9tats-Unis",ja:"\u30A2\u30E1\u30EA\u30AB\u5408\u8846\u56FD",it:"Stati Uniti D'America",br:"Estados Unidos",pt:"Estados Unidos",nl:"Verenigde Staten",hr:"Sjedinjene Ameri\u010Dke Dr\u017Eave",fa:"\u0627\u06CC\u0627\u0644\u0627\u062A \u0645\u062A\u062D\u062F\u0647 \u0622\u0645\u0631\u06CC\u06A9\u0627"},flag:"https://restcountries.eu/data/usa.svg",regionalBlocs:[{acronym:"NAFTA",name:"North American Free Trade Agreement",otherAcronyms:[],otherNames:["Tratado de Libre Comercio de Am\xE9rica del Norte","Accord de Libre-\xE9change Nord-Am\xE9ricain"]}],cioc:"USA"},{name:"Uruguay",topLevelDomain:[".uy"],alpha2Code:"UY",alpha3Code:"URY",callingCodes:["598"],capital:"Montevideo",altSpellings:["UY","Oriental Republic of Uruguay","Rep\xFAblica Oriental del Uruguay"],region:"Americas",subregion:"South America",population:3480222,latlng:[-33,-56],demonym:"Uruguayan",area:181034,gini:39.7,timezones:["UTC-03:00"],borders:["ARG","BRA"],nativeName:"Uruguay",numericCode:"858",currencies:[{code:"UYU",name:"Uruguayan peso",symbol:"$"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Uruguay",es:"Uruguay",fr:"Uruguay",ja:"\u30A6\u30EB\u30B0\u30A2\u30A4",it:"Uruguay",br:"Uruguai",pt:"Uruguai",nl:"Uruguay",hr:"Urugvaj",fa:"\u0627\u0631\u0648\u06AF\u0648\u0626\u0647"},flag:"https://restcountries.eu/data/ury.svg",regionalBlocs:[{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"URU"},{name:"Uzbekistan",topLevelDomain:[".uz"],alpha2Code:"UZ",alpha3Code:"UZB",callingCodes:["998"],capital:"Tashkent",altSpellings:["UZ","Republic of Uzbekistan","O\u2018zbekiston Respublikasi","\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430\u0441\u0438"],region:"Asia",subregion:"Central Asia",population:31576400,latlng:[41,64],demonym:"Uzbekistani",area:447400,gini:36.7,timezones:["UTC+05:00"],borders:["AFG","KAZ","KGZ","TJK","TKM"],nativeName:"O\u2018zbekiston",numericCode:"860",currencies:[{code:"UZS",name:"Uzbekistani so'm",symbol:null}],languages:[{iso639_1:"uz",iso639_2:"uzb",name:"Uzbek",nativeName:"O\u02BBzbek"},{iso639_1:"ru",iso639_2:"rus",name:"Russian",nativeName:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"}],translations:{de:"Usbekistan",es:"Uzbekist\xE1n",fr:"Ouzb\xE9kistan",ja:"\u30A6\u30BA\u30D9\u30AD\u30B9\u30BF\u30F3",it:"Uzbekistan",br:"Uzbequist\xE3o",pt:"Usbequist\xE3o",nl:"Oezbekistan",hr:"Uzbekistan",fa:"\u0627\u0632\u0628\u06A9\u0633\u062A\u0627\u0646"},flag:"https://restcountries.eu/data/uzb.svg",regionalBlocs:[],cioc:"UZB"},{name:"Vanuatu",topLevelDomain:[".vu"],alpha2Code:"VU",alpha3Code:"VUT",callingCodes:["678"],capital:"Port Vila",altSpellings:["VU","Republic of Vanuatu","Ripablik blong Vanuatu","R\xE9publique de Vanuatu"],region:"Oceania",subregion:"Melanesia",population:277500,latlng:[-16,167],demonym:"Ni-Vanuatu",area:12189,gini:null,timezones:["UTC+11:00"],borders:[],nativeName:"Vanuatu",numericCode:"548",currencies:[{code:"VUV",name:"Vanuatu vatu",symbol:"Vt"}],languages:[{iso639_1:"bi",iso639_2:"bis",name:"Bislama",nativeName:"Bislama"},{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Vanuatu",es:"Vanuatu",fr:"Vanuatu",ja:"\u30D0\u30CC\u30A2\u30C4",it:"Vanuatu",br:"Vanuatu",pt:"Vanuatu",nl:"Vanuatu",hr:"Vanuatu",fa:"\u0648\u0627\u0646\u0648\u0627\u062A\u0648"},flag:"https://restcountries.eu/data/vut.svg",regionalBlocs:[],cioc:"VAN"},{name:"Venezuela (Bolivarian Republic of)",topLevelDomain:[".ve"],alpha2Code:"VE",alpha3Code:"VEN",callingCodes:["58"],capital:"Caracas",altSpellings:["VE","Bolivarian Republic of Venezuela","Rep\xFAblica Bolivariana de Venezuela"],region:"Americas",subregion:"South America",population:31028700,latlng:[8,-66],demonym:"Venezuelan",area:916445,gini:44.8,timezones:["UTC-04:00"],borders:["BRA","COL","GUY"],nativeName:"Venezuela",numericCode:"862",currencies:[{code:"VEF",name:"Venezuelan bol\xEDvar",symbol:"Bs F"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Venezuela",es:"Venezuela",fr:"Venezuela",ja:"\u30D9\u30CD\u30BA\u30A8\u30E9\u30FB\u30DC\u30EA\u30D0\u30EB\u5171\u548C\u56FD",it:"Venezuela",br:"Venezuela",pt:"Venezuela",nl:"Venezuela",hr:"Venezuela",fa:"\u0648\u0646\u0632\u0648\u0626\u0644\u0627"},flag:"https://restcountries.eu/data/ven.svg",regionalBlocs:[{acronym:"USAN",name:"Union of South American Nations",otherAcronyms:["UNASUR","UNASUL","UZAN"],otherNames:["Uni\xF3n de Naciones Suramericanas","Uni\xE3o de Na\xE7\xF5es Sul-Americanas","Unie van Zuid-Amerikaanse Naties","South American Union"]}],cioc:"VEN"},{name:"Viet Nam",topLevelDomain:[".vn"],alpha2Code:"VN",alpha3Code:"VNM",callingCodes:["84"],capital:"Hanoi",altSpellings:["VN","Socialist Republic of Vietnam","C\u1ED9ng h\xF2a X\xE3 h\u1ED9i ch\u1EE7 ngh\u0129a Vi\u1EC7t Nam"],region:"Asia",subregion:"South-Eastern Asia",population:927e5,latlng:[16.16666666,107.83333333],demonym:"Vietnamese",area:331212,gini:35.6,timezones:["UTC+07:00"],borders:["KHM","CHN","LAO"],nativeName:"Vi\u1EC7t Nam",numericCode:"704",currencies:[{code:"VND",name:"Vietnamese \u0111\u1ED3ng",symbol:"\u20AB"}],languages:[{iso639_1:"vi",iso639_2:"vie",name:"Vietnamese",nativeName:"Ti\u1EBFng Vi\u1EC7t"}],translations:{de:"Vietnam",es:"Vietnam",fr:"Vi\xEAt Nam",ja:"\u30D9\u30C8\u30CA\u30E0",it:"Vietnam",br:"Vietn\xE3",pt:"Vietname",nl:"Vietnam",hr:"Vijetnam",fa:"\u0648\u06CC\u062A\u0646\u0627\u0645"},flag:"https://restcountries.eu/data/vnm.svg",regionalBlocs:[{acronym:"ASEAN",name:"Association of Southeast Asian Nations",otherAcronyms:[],otherNames:[]}],cioc:"VIE"},{name:"Wallis and Futuna",topLevelDomain:[".wf"],alpha2Code:"WF",alpha3Code:"WLF",callingCodes:["681"],capital:"Mata-Utu",altSpellings:["WF","Territory of the Wallis and Futuna Islands","Territoire des \xEEles Wallis et Futuna"],region:"Oceania",subregion:"Polynesia",population:11750,latlng:[-13.3,-176.2],demonym:"Wallis and Futuna Islander",area:142,gini:null,timezones:["UTC+12:00"],borders:[],nativeName:"Wallis et Futuna",numericCode:"876",currencies:[{code:"XPF",name:"CFP franc",symbol:"Fr"}],languages:[{iso639_1:"fr",iso639_2:"fra",name:"French",nativeName:"fran\xE7ais"}],translations:{de:"Wallis und Futuna",es:"Wallis y Futuna",fr:"Wallis-et-Futuna",ja:"\u30A6\u30A9\u30EA\u30B9\u30FB\u30D5\u30C4\u30CA",it:"Wallis e Futuna",br:"Wallis e Futuna",pt:"Wallis e Futuna",nl:"Wallis en Futuna",hr:"Wallis i Fortuna",fa:"\u0648\u0627\u0644\u06CC\u0633 \u0648 \u0641\u0648\u062A\u0648\u0646\u0627"},flag:"https://restcountries.eu/data/wlf.svg",regionalBlocs:[],cioc:""},{name:"Western Sahara",topLevelDomain:[".eh"],alpha2Code:"EH",alpha3Code:"ESH",callingCodes:["212"],capital:"El Aai\xFAn",altSpellings:["EH","Tane\u1E93roft Tutrimt"],region:"Africa",subregion:"Northern Africa",population:510713,latlng:[24.5,-13],demonym:"Sahrawi",area:266e3,gini:null,timezones:["UTC+00:00"],borders:["DZA","MRT","MAR"],nativeName:"\u0627\u0644\u0635\u062D\u0631\u0627\u0621 \u0627\u0644\u063A\u0631\u0628\u064A\u0629",numericCode:"732",currencies:[{code:"MAD",name:"Moroccan dirham",symbol:"\u062F.\u0645."},{code:"DZD",name:"Algerian dinar",symbol:"\u062F.\u062C"}],languages:[{iso639_1:"es",iso639_2:"spa",name:"Spanish",nativeName:"Espa\xF1ol"}],translations:{de:"Westsahara",es:"Sahara Occidental",fr:"Sahara Occidental",ja:"\u897F\u30B5\u30CF\u30E9",it:"Sahara Occidentale",br:"Saara Ocidental",pt:"Saara Ocidental",nl:"Westelijke Sahara",hr:"Zapadna Sahara",fa:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062F\u0645\u0648\u06A9\u0631\u0627\u062A\u06CC\u06A9 \u0639\u0631\u0628\u06CC \u0635\u062D\u0631\u0627"},flag:"https://restcountries.eu/data/esh.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:""},{name:"Yemen",topLevelDomain:[".ye"],alpha2Code:"YE",alpha3Code:"YEM",callingCodes:["967"],capital:"Sana'a",altSpellings:["YE","Yemeni Republic","al-Jumh\u016Briyyah al-Yamaniyyah"],region:"Asia",subregion:"Western Asia",population:27478e3,latlng:[15,48],demonym:"Yemeni",area:527968,gini:37.7,timezones:["UTC+03:00"],borders:["OMN","SAU"],nativeName:"\u0627\u0644\u064A\u064E\u0645\u064E\u0646",numericCode:"887",currencies:[{code:"YER",name:"Yemeni rial",symbol:"\uFDFC"}],languages:[{iso639_1:"ar",iso639_2:"ara",name:"Arabic",nativeName:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"}],translations:{de:"Jemen",es:"Yemen",fr:"Y\xE9men",ja:"\u30A4\u30A8\u30E1\u30F3",it:"Yemen",br:"I\xEAmen",pt:"I\xE9men",nl:"Jemen",hr:"Jemen",fa:"\u06CC\u0645\u0646"},flag:"https://restcountries.eu/data/yem.svg",regionalBlocs:[{acronym:"AL",name:"Arab League",otherAcronyms:[],otherNames:["\u062C\u0627\u0645\u0639\u0629 \u0627\u0644\u062F\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064A\u0629","J\u0101mi\u02BBat ad-Duwal al-\u02BBArab\u012Byah","League of Arab States"]}],cioc:"YEM"},{name:"Zambia",topLevelDomain:[".zm"],alpha2Code:"ZM",alpha3Code:"ZMB",callingCodes:["260"],capital:"Lusaka",altSpellings:["ZM","Republic of Zambia"],region:"Africa",subregion:"Eastern Africa",population:15933883,latlng:[-15,30],demonym:"Zambian",area:752612,gini:54.6,timezones:["UTC+02:00"],borders:["AGO","BWA","COD","MWI","MOZ","NAM","TZA","ZWE"],nativeName:"Zambia",numericCode:"894",currencies:[{code:"ZMW",name:"Zambian kwacha",symbol:"ZK"}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"}],translations:{de:"Sambia",es:"Zambia",fr:"Zambie",ja:"\u30B6\u30F3\u30D3\u30A2",it:"Zambia",br:"Z\xE2mbia",pt:"Z\xE2mbia",nl:"Zambia",hr:"Zambija",fa:"\u0632\u0627\u0645\u0628\u06CC\u0627"},flag:"https://restcountries.eu/data/zmb.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"ZAM"},{name:"Zimbabwe",topLevelDomain:[".zw"],alpha2Code:"ZW",alpha3Code:"ZWE",callingCodes:["263"],capital:"Harare",altSpellings:["ZW","Republic of Zimbabwe"],region:"Africa",subregion:"Eastern Africa",population:14240168,latlng:[-20,30],demonym:"Zimbabwean",area:390757,gini:null,timezones:["UTC+02:00"],borders:["BWA","MOZ","ZAF","ZMB"],nativeName:"Zimbabwe",numericCode:"716",currencies:[{code:"BWP",name:"Botswana pula",symbol:"P"},{code:"GBP",name:"British pound",symbol:"\xA3"},{code:"CNY",name:"Chinese yuan",symbol:"\xA5"},{code:"EUR",name:"Euro",symbol:"\u20AC"},{code:"INR",name:"Indian rupee",symbol:"\u20B9"},{code:"JPY",name:"Japanese yen",symbol:"\xA5"},{code:"ZAR",name:"South African rand",symbol:"Rs"},{code:"USD",name:"United States dollar",symbol:"$"},{code:"(none)",name:null,symbol:null}],languages:[{iso639_1:"en",iso639_2:"eng",name:"English",nativeName:"English"},{iso639_1:"sn",iso639_2:"sna",name:"Shona",nativeName:"chiShona"},{iso639_1:"nd",iso639_2:"nde",name:"Northern Ndebele",nativeName:"isiNdebele"}],translations:{de:"Simbabwe",es:"Zimbabue",fr:"Zimbabwe",ja:"\u30B8\u30F3\u30D0\u30D6\u30A8",it:"Zimbabwe",br:"Zimbabwe",pt:"Zimbabu\xE9",nl:"Zimbabwe",hr:"Zimbabve",fa:"\u0632\u06CC\u0645\u0628\u0627\u0648\u0647"},flag:"https://restcountries.eu/data/zwe.svg",regionalBlocs:[{acronym:"AU",name:"African Union",otherAcronyms:[],otherNames:["\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0623\u0641\u0631\u064A\u0642\u064A","Union africaine","Uni\xE3o Africana","Uni\xF3n Africana","Umoja wa Afrika"]}],cioc:"ZIM"}],Cb="varying vec2 vertexUV;varying vec3 vertexNormal;void main(){vertexUV=uv;vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",Mb="uniform sampler2D globeTexture;varying vec2 vertexUV;varying vec3 vertexNormal;void main(){float intensity=1.05-dot(vertexNormal,vec3(0.0,0.0,1.0));vec3 atmosphere=vec3(0.3,0.6,1.0)*pow(intensity,1.5);gl_FragColor=vec4(atmosphere+texture2D(globeTexture,vertexUV).xyz,1.0);}",wb="varying vec3 vertexNormal;void main(){vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,0.9);}",Tb="varying vec3 vertexNormal;void main(){float intensity=pow(0.75-dot(vertexNormal,vec3(0,0,1.0)),2.0);gl_FragColor=vec4(0.3,0.6,1.0,1.0)*intensity;}";console.log(jd);const cn=document.querySelector("#canvasContainer"),vr=new zl;let ya=new Tt(75,cn.offsetWidth/cn.offsetHeight,.1,1e3);const br=new We({antialias:!0,canvas:document.querySelector("canvas")});br.setSize(cn.offsetWidth,cn.offsetHeight);br.setPixelRatio(window.devicePixelRatio);const $l=new St(new zs(5,50,50),new Kt({vertexShader:Cb,fragmentShader:Mb,uniforms:{globeTexture:{value:new zd().load("./img/globe.jpeg")}}})),Kd=new St(new zs(5,50,50),new Kt({vertexShader:wb,fragmentShader:Tb,blending:Xo,side:$t}));Kd.scale.set(1.1,1.1,1.1);vr.add(Kd);const bt=new ua;bt.add($l);vr.add(bt);const qd=new Xe,Eb=new Ds({color:16777215}),Zd=[];for(let r=0;r<1e4;r++){const e=(Math.random()-.5)*2e3,t=(Math.random()-.5)*2e3,n=-Math.random()*3e3;Zd.push(e,t,n)}qd.setAttribute("position",new at(Zd,3));const Nb=new _d(qd,Eb);vr.add(Nb);ya.position.z=15;function Rb(r){r.forEach(e=>{const t=e.population/1e9,n=e.latlng[0],i=e.latlng[1],a=.8*t,s=new St(new Ua(Math.max(.1,.2*t),Math.max(.1,.2*t),Math.max(a,.4*Math.random())),new Sr({color:"#3BF7FF",opacity:.4,transparent:!0})),o=n/180*Math.PI,c=i/180*Math.PI,l=5,u=l*Math.cos(o)*Math.sin(c),h=l*Math.sin(o),d=l*Math.cos(o)*Math.cos(c);s.position.x=u,s.position.y=h,s.position.z=d,s.lookAt(0,0,0),s.geometry.applyMatrix4(new me().makeTranslation(0,0,-a/2)),bt.add(s),si.to(s.scale,{z:1.4,duration:2,yoyo:!0,repeat:-1,ease:"linear",delay:Math.random()}),s.country=e.name,s.population=new Intl.NumberFormat().format(e.population)})}Rb(jd);$l.rotation.y=-Math.PI/2;bt.rotation.offset={x:0,y:0};const Ye={x:void 0,y:void 0,down:!1,xPrev:void 0,yPrev:void 0};console.log(bt.children);const hl=new bb,Cs=document.querySelector("#popUpEl"),Lb=document.querySelector("#populationEl"),Ub=document.querySelector("#populationValueEl");function Xd(){requestAnimationFrame(Xd),br.render(vr,ya),hl.setFromCamera(Ye,ya);const r=hl.intersectObjects(bt.children.filter(e=>e.geometry.type==="BoxGeometry"));bt.children.forEach(e=>{e.material.opacity=.4}),si.set(Cs,{display:"none"});for(let e=0;e<r.length;e++){const t=r[e].object;t.material.opacity=1,si.set(Cs,{display:"block"}),Lb.innerHTML=t.country,Ub.innerHTML=t.population}br.render(vr,ya)}Xd();cn.addEventListener("mousedown",({clientX:r,clientY:e})=>{Ye.down=!0,Ye.xPrev=r,Ye.yPrev=e});addEventListener("mousemove",r=>{if(innerWidth>=1280)Ye.x=(r.clientX-innerWidth/2)/(innerWidth/2)*2-1,Ye.y=-(r.clientY/innerHeight)*2+1;else{const e=cn.getBoundingClientRect().top;Ye.x=r.clientX/innerWidth*2-1,Ye.y=-((r.clientY-e)/innerHeight)*2+1,console.log(Ye.y)}if(si.set(Cs,{x:r.clientX,y:r.clientY}),Ye.down){r.preventDefault();const e=r.clientX-Ye.xPrev,t=r.clientY-Ye.yPrev;bt.rotation.offset.x+=t*.005,bt.rotation.offset.y+=e*.005,si.to(bt.rotation,{y:bt.rotation.offset.y,x:bt.rotation.offset.x,duration:2}),Ye.xPrev=r.clientX,Ye.yPrev=r.clientY}});addEventListener("mouseup",r=>{Ye.down=!1});addEventListener("resize",()=>{br.setSize(cn.offsetWidth,cn.offsetHeight),ya=new Tt(75,cn.offsetWidth/cn.offsetHeight,.1,1e3),ya.position.z=15});addEventListener("touchmove",r=>{r.clientX=r.touches[0].clientX,r.clientY=r.touches[0].clientY;const e=hl.intersectObject($l);if(console.log(e),e.length>0&&(Ye.down=!0),Ye.down){const t=cn.getBoundingClientRect().top;Ye.x=r.clientX/innerWidth*2-1,Ye.y=-((r.clientY-t)/innerHeight)*2+1,console.log(Ye.y),si.set(Cs,{x:r.clientX,y:r.clientY}),r.preventDefault();const n=r.clientX-Ye.xPrev,i=r.clientY-Ye.yPrev;bt.rotation.offset.x+=i*.005,bt.rotation.offset.y+=n*.005,si.to(bt.rotation,{y:bt.rotation.offset.y,x:bt.rotation.offset.x,duration:2}),Ye.xPrev=r.clientX,Ye.yPrev=r.clientY}},{passive:!1});addEventListener("touchend",r=>{Ye.down=!1});
